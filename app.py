{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "32262c20",
   "metadata": {},
   "source": [
    "# Data Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1422946c",
   "metadata": {},
   "source": [
    "Import Libraries & functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "54bf689e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import findspark\n",
    "findspark.init()\n",
    "\n",
    "from pyspark import SparkContext\n",
    "from pyspark.sql import DataFrame\n",
    "from pyspark.sql import SparkSession\n",
    "\n",
    "from functools import reduce\n",
    "from pyspark.sql.functions import *\n",
    "from pyspark.sql.functions import regexp_replace, when\n",
    "from pyspark.sql.types import IntegerType, BooleanType, DateType\n",
    "from pyspark.sql.types import StructType, StructField, StringType, IntegerType, TimestampType"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5dd7946f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\theon\\anaconda3\\lib\\site-packages\\pandas\\core\\computation\\expressions.py:21: UserWarning: Pandas requires version '2.8.4' or newer of 'numexpr' (version '2.8.3' currently installed).\n",
      "  from pandas.core.computation.check import NUMEXPR_INSTALLED\n",
      "C:\\Users\\theon\\anaconda3\\lib\\site-packages\\pandas\\core\\arrays\\masked.py:60: UserWarning: Pandas requires version '1.3.6' or newer of 'bottleneck' (version '1.3.5' currently installed).\n",
      "  from pandas.core import (\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "import matplotlib\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from pandas import DataFrame\n",
    "from sklearn.utils import resample\n",
    "from sklearn.metrics import log_loss, confusion_matrix\n",
    "from sklearn.svm import SVC, LinearSVC\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.tree import _tree\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import roc_auc_score \n",
    "from sklearn.model_selection import TimeSeriesSplit\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.datasets import load_boston\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.ticker as mtick\n",
    "from mpl_toolkits.mplot3d import Axes3D"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b1a8365",
   "metadata": {},
   "source": [
    "#### BEGIN SPARK SESSION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4868671d",
   "metadata": {},
   "outputs": [],
   "source": [
    "spark = SparkSession.builder \\\n",
    "    .appName('StudentSparkSession') \\\n",
    "    .getOrCreate()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d308f73e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<SparkContext master=local[*] appName=StudentSparkSession>\n",
      "Ready to go!\n"
     ]
    }
   ],
   "source": [
    "sc = SparkContext.getOrCreate()\n",
    "print(sc)\n",
    "print(\"Ready to go!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "238d2a05",
   "metadata": {},
   "source": [
    "#### LOADING CSV FILE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d3626ed7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = spark.read.format(\"csv\") \\\n",
    "               .option(\"header\", \"True\") \\\n",
    "               .option(\"inferSchema\", \"True\") \\\n",
    "               .load(\"crash_data.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e6cef7f",
   "metadata": {},
   "source": [
    "display dataset schema"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "038bb4a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "root\n",
      " |-- Reference Number: string (nullable = True)\n",
      " |-- Number Of Vehicles Involved: integer (nullable = True)\n",
      " |-- Number Of Casualties: integer (nullable = True)\n",
      " |-- Division Number: string (nullable = True)\n",
      " |-- Severity: string (nullable = True)\n",
      " |-- Date: string (nullable = True)\n",
      " |-- Time: timestamp (nullable = True)\n",
      " |-- Street Name: string (nullable = True)\n",
      " |-- Parish of Crash: string (nullable = True)\n",
      " |-- Road Class: string (nullable = True)\n",
      " |-- Speed Limit: string (nullable = True)\n",
      " |-- Accident Type: string (nullable = True)\n",
      " |-- Weather: string (nullable = True)\n",
      " |-- Road Surface: string (nullable = True)\n",
      " |-- Light Conditions: string (nullable = True)\n",
      " |-- Registration Number: string (nullable = True)\n",
      " |-- Make: string (nullable = True)\n",
      " |-- Model: string (nullable = True)\n",
      " |-- Type Of Vehicle: string (nullable = True)\n",
      " |-- Driver's Age: integer (nullable = True)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df.printSchema()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7bf2bcff",
   "metadata": {},
   "source": [
    "count # of rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e358afb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "205549"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8ae37115",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize Spark session\n",
    "spark = SparkSession.builder.appName(\"DataDictionary\").getOrCreate()\n",
    "\n",
    "# Define schema\n",
    "schema = StructType([\n",
    "    StructField(\"Reference Number\", StringType(), True),\n",
    "    StructField(\"Number of Vehicles Involved\", IntegerType(), True),\n",
    "    StructField(\"Number of Casualties\", IntegerType(), True),\n",
    "    StructField(\"Division Number\", StringType(), True),\n",
    "    StructField(\"Severity\", StringType(), True),\n",
    "    StructField(\"Date\", StringType(), True),\n",
    "    StructField(\"Time\", TimestampType(), True),\n",
    "    StructField(\"Street Name\", StringType(), True),\n",
    "    StructField(\"Parish of Crash\", StringType(), True),\n",
    "    StructField(\"Road Class\", StringType(), True),\n",
    "    StructField(\"Speed Limit\", StringType(), True),\n",
    "    StructField(\"Accident Type\", StringType(), True),\n",
    "    StructField(\"Weather\", StringType(), True),\n",
    "    StructField(\"Road Surface\", StringType(), True),\n",
    "    StructField(\"Light Conditions\", StringType(), True),\n",
    "    StructField(\"Registration Number\", StringType(), True),\n",
    "    StructField(\"Make\", StringType(), True),\n",
    "    StructField(\"Model\", StringType(), True),\n",
    "    StructField(\"Type of Vehicle\", StringType(), True),\n",
    "    StructField(\"Driver's Age\", IntegerType(), True),\n",
    "])\n",
    "\n",
    "# Create DataFrame for data dictionary\n",
    "data_dict = [\n",
    "    (\"Reference Number\", \"string\", \"Unique identifier for each accident\", \"Yes\"),\n",
    "    (\"Number of Vehicles Involved\", \"integer\", \"Total number of vehicles involved\", \"Yes\"),\n",
    "    (\"Number of Casualties\", \"integer\", \"Total number of casualties\", \"Yes\"),\n",
    "    (\"Division Number\", \"string\", \"Identifier for the division\", \"Yes\"),\n",
    "    (\"Severity\", \"string\", \"Severity level of the accident\", \"Yes\"),\n",
    "    (\"Date\", \"string\", \"Date of the accident\", \"Yes\"),\n",
    "    (\"Time\", \"timestamp\", \"Time of the accident\", \"Yes\"),\n",
    "    (\"Street Name\", \"string\", \"Name of the street where accident occurred\", \"Yes\"),\n",
    "    (\"Parish of Crash\", \"string\", \"Parish where the crash occurred\", \"Yes\"),\n",
    "    (\"Road Class\", \"string\", \"Classification of the road\", \"Yes\"),\n",
    "    (\"Speed Limit\", \"string\", \"Speed limit on the road\", \"Yes\"),\n",
    "    (\"Accident Type\", \"string\", \"Type of accident\", \"Yes\"),\n",
    "    (\"Weather\", \"string\", \"Weather conditions during accident\", \"Yes\"),\n",
    "    (\"Road Surface\", \"string\", \"Condition of the road surface\", \"Yes\"),\n",
    "    (\"Light Conditions\", \"string\", \"Light conditions during accident\", \"Yes\"),\n",
    "    (\"Registration Number\", \"string\", \"Vehicle registration number\", \"Yes\"),\n",
    "    (\"Make\", \"string\", \"Make of the vehicle\", \"Yes\"),\n",
    "    (\"Model\", \"string\", \"Model of the vehicle\", \"Yes\"),\n",
    "    (\"Type of Vehicle\", \"string\", \"Type of vehicle involved\", \"Yes\"),\n",
    "    (\"Driver's Age\", \"integer\", \"Age of the driver\", \"Yes\"),\n",
    "]\n",
    "\n",
    "data_dict_df = spark.createDataFrame(data_dict, [\"Variable\", \"Type\", \"Description\", \"Nullable\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62c039c5",
   "metadata": {},
   "source": [
    "### Data Description"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a92e9aaa",
   "metadata": {},
   "source": [
    "The dataset has 205549 entries and 19 features + 1 target variable. Automatic Type Recognition: 17 of them are string type, and 3 of them is integer. Memory usage: 35.0+ MB."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ec3e6885",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+---------------------------+---------+------------------------------------------+--------+\n",
      "|Variable                   |Type     |Description                               |Nullable|\n",
      "+---------------------------+---------+------------------------------------------+--------+\n",
      "|Reference Number           |string   |Unique identifier for each accident       |Yes     |\n",
      "|Number of Vehicles Involved|integer  |Total number of vehicles involved         |Yes     |\n",
      "|Number of Casualties       |integer  |Total number of casualties                |Yes     |\n",
      "|Division Number            |string   |Identifier for the division               |Yes     |\n",
      "|Severity                   |string   |Severity level of the accident            |Yes     |\n",
      "|Date                       |string   |Date of the accident                      |Yes     |\n",
      "|Time                       |timestamp|Time of the accident                      |Yes     |\n",
      "|Street Name                |string   |Name of the street where accident occurred|Yes     |\n",
      "|Parish of Crash            |string   |Parish where the crash occurred           |Yes     |\n",
      "|Road Class                 |string   |Classification of the road                |Yes     |\n",
      "|Speed Limit                |string   |Speed limit on the road                   |Yes     |\n",
      "|Accident Type              |string   |Type of accident                          |Yes     |\n",
      "|Weather                    |string   |Weather conditions during accident        |Yes     |\n",
      "|Road Surface               |string   |Condition of the road surface             |Yes     |\n",
      "|Light Conditions           |string   |Light conditions during accident          |Yes     |\n",
      "|Registration Number        |string   |Vehicle registration number               |Yes     |\n",
      "|Make                       |string   |Make of the vehicle                       |Yes     |\n",
      "|Model                      |string   |Model of the vehicle                      |Yes     |\n",
      "|Type of Vehicle            |string   |Type of vehicle involved                  |Yes     |\n",
      "|Driver's Age               |integer  |Age of the driver                         |Yes     |\n",
      "+---------------------------+---------+------------------------------------------+--------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Show data dictionary\n",
    "data_dict_df.show(truncate=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe5373f3",
   "metadata": {},
   "source": [
    "identify and remove columns with high % of missing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "653c7ad5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                       Variable  Missing %\n",
      "0              Reference Number   0.000000\n",
      "1   Number Of Vehicles Involved   0.000000\n",
      "2          Number Of Casualties   0.000000\n",
      "4                      Severity   0.000000\n",
      "5                          Date   0.000000\n",
      "3               Division Number   0.008757\n",
      "14             Light Conditions   0.030650\n",
      "13                 Road Surface   0.031623\n",
      "12                      Weather   0.035028\n",
      "10                  Speed Limit   0.215034\n",
      "7                   Street Name   0.382391\n",
      "11                Accident Type   0.459744\n",
      "18              Type Of Vehicle   0.717590\n",
      "16                         Make   0.743862\n",
      "15          Registration Number   1.436640\n",
      "6                          Time   2.004875\n",
      "19                 Driver's Age  11.713022\n",
      "8               Parish of Crash  99.912430\n",
      "17                        Model  99.916808\n",
      "9                    Road Class  99.967404\n"
     ]
    }
   ],
   "source": [
    "# Replace empty strings with None (equivalent to NaN in Spark)\n",
    "df = df.select([when(col(c) == \"\", None).otherwise(col(c)).alias(c) for c in df.columns])\n",
    "\n",
    "# Calculate the percentage of missing values for each column\n",
    "missing_value_counts = df.select([(count(when(col(c).isNull(), c)) / count(\"*\")).alias(c) for c in df.columns])\n",
    "\n",
    "# Convert the result to a Pandas DataFrame\n",
    "missing_value_counts_pd = missing_value_counts.toPandas().transpose().reset_index()\n",
    "missing_value_counts_pd.columns = [\"Variable\", \"Missing %\"]\n",
    "missing_value_counts_pd[\"Missing %\"] *= 100\n",
    "\n",
    "# Sort the DataFrame by missing percentage in descending order\n",
    "missing_value_counts_pd = missing_value_counts_pd.sort_values(by=\"Missing %\")\n",
    "\n",
    "# Show the result\n",
    "print(missing_value_counts_pd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1665cf6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop('Type Of Vehicle', 'Make', 'Model', 'Road Class', 'Parish of Crash')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f45e4560",
   "metadata": {},
   "source": [
    "replace spaces in column names with underscore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "404d6df9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fix_columns(dataframe):\n",
    "    c_columns = dataframe.columns\n",
    "    n_columns = [col.replace(\" \", \"_\") for col in c_columns]\n",
    "    \n",
    "    for old_col, new_col in zip(c_columns, n_columns):\n",
    "        dataframe = dataframe.withColumnRenamed(old_col, new_col)\n",
    "   \n",
    "    return dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2a313b08",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_adjusted = fix_columns(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3646a9ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "root\n",
      " |-- Reference_Number: string (nullable = True)\n",
      " |-- Number_Of_Vehicles_Involved: integer (nullable = True)\n",
      " |-- Number_Of_Casualties: integer (nullable = True)\n",
      " |-- Division_Number: string (nullable = True)\n",
      " |-- Severity: string (nullable = True)\n",
      " |-- Date: string (nullable = True)\n",
      " |-- Time: timestamp (nullable = True)\n",
      " |-- Street_Name: string (nullable = True)\n",
      " |-- Speed_Limit: string (nullable = True)\n",
      " |-- Accident_Type: string (nullable = True)\n",
      " |-- Weather: string (nullable = True)\n",
      " |-- Road_Surface: string (nullable = True)\n",
      " |-- Light_Conditions: string (nullable = True)\n",
      " |-- Registration_Number: string (nullable = True)\n",
      " |-- Driver's_Age: integer (nullable = True)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df_adjusted.printSchema()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb69676a",
   "metadata": {},
   "source": [
    "### Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1548a888",
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove duplicates\n",
    "\n",
    "def remove_duplicates(dataframe, c_name):\n",
    "    df = dataframe.dropDuplicates(c_name)\n",
    "    \n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a8e7f4b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "107062"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_duplicates_removed = remove_duplicates(df_adjusted, [\"Reference_Number\", \"Date\"])\n",
    "df_duplicates_removed.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d7979f0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#  temporary view of a SQL table\n",
    "df_duplicates_removed.createOrReplaceTempView('CDFR')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29aa3985",
   "metadata": {},
   "source": [
    "remove / trim white spaces"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2d6e4b5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def remove_white_spaces(dataframe):\n",
    "    df = dataframe.withColumn(\"Reference_Number_2\", trim(dataframe.Reference_Number))\n",
    "    \n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a2fc0023",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = remove_white_spaces(df_duplicates_removed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "deaf118d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2.createOrReplaceTempView('CDFR')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4dcd4c98",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+----------------+--------------------+---------+-------------------+-------------------+--------+\n",
      "|Reference_Number|Number_Of_Casualties|     Date|               Time|      Accident_Type|Severity|\n",
      "+----------------+--------------------+---------+-------------------+-------------------+--------+\n",
      "|      2F00015013|                  46|16-Dec-15|2024-08-04 11:30:00|    Single accident|   Minor|\n",
      "|      2F00015165|                  13|23-Feb-06|2024-08-04 15:00:00|   Head-on accident| Serious|\n",
      "|       3L0001012|                  14|25-Jan-03|2024-08-04 21:30:00|    Single accident| Serious|\n",
      "|       3L0003207|                  13|31-Mar-06|2024-08-04 07:20:00|     Other accident| Serious|\n",
      "|       3M0006375|                  28| 9-Sep-16|2024-08-04 08:30:00|Overtaking accident| Serious|\n",
      "|       3M0006543|                  18| 8-Nov-11|2024-08-04 11:30:00|     Other accident| Serious|\n",
      "|       5N0003356|                  20|25-Apr-08|2024-08-04 21:00:00|Overtaking accident|   Minor|\n",
      "|       1G0001450|                  15| 8-Sep-12|2024-08-04 09:44:00|    Single accident| Serious|\n",
      "|       1G0001894|                  12|17-Feb-17|2024-08-04 08:05:00|   Head-on accident| Serious|\n",
      "|        1I000638|                  14|24-Feb-03|2024-08-04 10:45:00|    Single accident| Serious|\n",
      "|       3K0002790|                  13| 3-Apr-13|2024-08-04 16:45:00|  Crossing accident|   Minor|\n",
      "|       3L0001711|                  11|26-Feb-07|2024-08-04 13:00:00|Overtaking accident| Serious|\n",
      "|       3L0008340|                  17|20-Jan-16|2024-08-04 07:30:00|   Head-on accident| Serious|\n",
      "|       3M0002364|                  16|12-Dec-08|2024-08-04 22:30:00|  Crossing accident| Serious|\n",
      "|       3M0002940|                  16| 1-Aug-04|2024-08-04 17:10:00|    Single accident| Serious|\n",
      "|       3M0006111|                  11|17-Jul-15|2024-08-04 16:30:00|    Single accident|   Minor|\n",
      "|      4V00014447|                  13| 7-Sep-13|2024-08-04 16:30:00|  Rear end accident| Serious|\n",
      "|       5N0002325|                  14| 9-Mar-05|2024-08-04 16:50:00|Pedestrian accident| Serious|\n",
      "|       5N0004929|                  14| 6-Dec-10|2024-08-04 06:30:00|     Other accident| Serious|\n",
      "|       5S0003564|                  27|25-Sep-06|2024-08-04 09:30:00|  Rear end accident|   Minor|\n",
      "+----------------+--------------------+---------+-------------------+-------------------+--------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "spark.sql('SELECT Reference_Number, Number_Of_Casualties, Date, Time, Accident_Type, Severity FROM CDFR WHERE Number_Of_Casualties > 10').show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "df3c4831",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------+\n",
      "|  Road_Surface|\n",
      "+--------------+\n",
      "|Oily + Unpaved|\n",
      "|      Concrete|\n",
      "| Wet + Asphalt|\n",
      "|     Not known|\n",
      "|        Gravel|\n",
      "|        Others|\n",
      "| Wet + Unpaved|\n",
      "|  Dry +Unpaved|\n",
      "| Dry + Asphalt|\n",
      "|Oily + Asphalt|\n",
      "|          NULL|\n",
      "+--------------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "spark.sql('SELECT DISTINCT Road_Surface FROM CDFR').show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d0e790be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------+--------+\n",
      "|  Road_Surface|count(1)|\n",
      "+--------------+--------+\n",
      "|          NULL|      37|\n",
      "|Oily + Unpaved|      22|\n",
      "|      Concrete|       1|\n",
      "| Wet + Asphalt|   12431|\n",
      "|     Not known|    2797|\n",
      "|        Gravel|      83|\n",
      "|        Others|     123|\n",
      "| Wet + Unpaved|     208|\n",
      "|  Dry +Unpaved|     479|\n",
      "| Dry + Asphalt|   90582|\n",
      "|Oily + Asphalt|     299|\n",
      "+--------------+--------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "spark.sql('SELECT Road_Surface, COUNT(*) from CDFR GROUP BY Road_Surface ').show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03c8e8d4",
   "metadata": {},
   "source": [
    "delete rows with null & unknown values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "60fbdf1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def remove_nulls(dataframe):\n",
    "    df = dataframe.dropna(subset=[\"Weather\", \"Division_Number\", \"Street_Name\", \"Speed_Limit\", \"Accident_Type\", \"Road_Surface\", \"Light_Conditions\"])\n",
    "    \n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d7f4a0f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_n = remove_nulls(df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1815a690",
   "metadata": {},
   "outputs": [],
   "source": [
    "def remove_unknowns(dataframe):\n",
    "    df = dataframe.filter((dataframe.Weather != 'Not known') & (dataframe.Light_Conditions != 'Not known') \\\n",
    "                         & (dataframe.Road_Surface != 'Not known'))\n",
    "    \n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "38af3e8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_u = remove_unknowns(df_n)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cc21d94",
   "metadata": {},
   "source": [
    "change weather option \"Fine\" to \"Sunny\" and delete \"Others\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "bdfc8866",
   "metadata": {},
   "outputs": [],
   "source": [
    "def update_weather_class(dataframe):\n",
    "    df = dataframe.withColumn('Weather', regexp_replace('Weather', 'Fine', 'Sunny'))\n",
    "    \n",
    "    return(df.filter(dataframe.Weather != 'Others')) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0639c71c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_c = update_weather_class(df_u)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f8624962",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Cloudy', 'Sunny', 'Fog/Mist', 'Rain']\n"
     ]
    }
   ],
   "source": [
    "unique_weather = df_c.select(\"Weather\").distinct().collect()\n",
    "unique_weather_values = [row.Weather for row in unique_weather]\n",
    "print(unique_weather_values)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7e8f47e",
   "metadata": {},
   "source": [
    "convert TARGET VARIABLE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c71ea0a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_severity_class(dataframe):\n",
    "    \n",
    "    df = dataframe.withColumn('Severity', \\\n",
    "                              when(dataframe.Severity.startswith('Minor'), \n",
    "                              regexp_replace(dataframe.Severity, 'Minor', '0')) \\\n",
    "                            .when(dataframe.Severity.startswith('Serious'), \\\n",
    "                              regexp_replace(dataframe.Severity,'Serious', '1'))\n",
    "                            .when(dataframe.Severity.startswith('Property damage only'), \\\n",
    "                              regexp_replace(dataframe.Severity, 'Property damage only', '2')) \n",
    "                            .otherwise(dataframe.Severity))      \n",
    "    \n",
    "    \n",
    "    return(df.withColumn('Severity',col('Severity').cast(IntegerType())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "91693e2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_s = convert_severity_class(df_c)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29b9e8b8",
   "metadata": {},
   "source": [
    "convert Timestamp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1fdbb6a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_timestamp(dataframe):\n",
    "       \n",
    "    df = dataframe.withColumn('Hour', hour(dataframe.Time)) \\\n",
    "                  .withColumn('Minute', minute(dataframe.Time)) \\\n",
    "                  .withColumn('Second', second(dataframe.Time))\n",
    "       \n",
    "    return(df.drop('Time'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "6f93712c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_t = convert_timestamp(df_s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "369f9b2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "root\n",
      " |-- Reference_Number: string (nullable = True)\n",
      " |-- Number_Of_Vehicles_Involved: integer (nullable = True)\n",
      " |-- Number_Of_Casualties: integer (nullable = True)\n",
      " |-- Division_Number: string (nullable = True)\n",
      " |-- Severity: integer (nullable = True)\n",
      " |-- Date: string (nullable = True)\n",
      " |-- Street_Name: string (nullable = True)\n",
      " |-- Speed_Limit: string (nullable = True)\n",
      " |-- Accident_Type: string (nullable = True)\n",
      " |-- Weather: string (nullable = True)\n",
      " |-- Road_Surface: string (nullable = True)\n",
      " |-- Light_Conditions: string (nullable = True)\n",
      " |-- Registration_Number: string (nullable = True)\n",
      " |-- Driver's_Age: integer (nullable = True)\n",
      " |-- Reference_Number_2: string (nullable = True)\n",
      " |-- Hour: integer (nullable = True)\n",
      " |-- Minute: integer (nullable = True)\n",
      " |-- Second: integer (nullable = True)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df_t.printSchema()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fb9748a",
   "metadata": {},
   "source": [
    "Data type correction -->> To numeric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "ffbb6993",
   "metadata": {},
   "outputs": [],
   "source": [
    "def change_column_types(dataframe):    \n",
    "    df = dataframe.withColumn('Number_of_Casualties',col('Number_of_Casualties').cast(IntegerType())) \\\n",
    "                  .withColumn('Number_of_Vehicles_Involved',col('Number_of_Vehicles_Involved').cast(IntegerType())) \\\n",
    "                  .withColumn(\"Driver's_Age\",col(\"Driver's_Age\").cast(IntegerType())) \\\n",
    "                  .withColumn('Hour',col('Hour').cast(IntegerType()))  \\\n",
    "                  .withColumn('Minute',col('Minute').cast(IntegerType()))  \\\n",
    "                  .withColumn('Second',col('Second').cast(IntegerType()))    \n",
    "  \n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "81c89da9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_dt = change_column_types(df_t)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43664c8a",
   "metadata": {},
   "source": [
    "convert Division_Number to Parish"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "ae286153",
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_division_to_parish(dataframe):\n",
    "    df = dataframe.withColumn('Division_Number',\n",
    "                              when(dataframe.Division_Number.startswith('Kingston W'), \n",
    "                              regexp_replace(dataframe.Division_Number, 'Kingston Western', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('Kingston C'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'Kingston Central', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('Kingston E'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'Kingston Eastern', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('St. Andrew N'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'St. Andrew North', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('St. Andrew S'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'St. Andrew South', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('St. Andrew C'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'St. Andrew Central', 'Kingston & St. Andrew')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('St. Catherine N'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'St. Catherine North', 'St. Catherine')) \\\n",
    "                             .when(dataframe.Division_Number.startswith('St. Catherine S'), \\\n",
    "                              regexp_replace(dataframe.Division_Number, 'St. Catherine South', 'St. Catherine'))\n",
    "                             .otherwise(dataframe.Division_Number)) \n",
    "    \n",
    "        \n",
    "    return(df.withColumnRenamed(\"Division_Number\", \"Parish\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "aff4a9f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final = convert_division_to_parish(df_dt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "1b18fd77",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final.createOrReplaceTempView('CDFG')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "9338ca91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "102235"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "8b23d363",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-------+------------------+\n",
      "|summary|      Driver's_Age|\n",
      "+-------+------------------+\n",
      "|  count|             91718|\n",
      "|   mean| 38.72106892867267|\n",
      "| stddev|14.946766757444115|\n",
      "|    min|                -5|\n",
      "|    max|               143|\n",
      "+-------+------------------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df_final.describe([\"Driver's_Age\"]).show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "fe6e3a9b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------+\n",
      "|count(1)|\n",
      "+--------+\n",
      "|   72591|\n",
      "+--------+\n",
      "\n"
     ]
    }
   ],
   "source": [
    "spark.sql('SELECT COUNT(*) FROM CDFG WHERE Number_of_Casualties = 0').show()    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "f9de4732",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Column Name</th>\n",
       "      <th>Data Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Reference_Number</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Number_of_Vehicles_Involved</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Number_of_Casualties</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Parish</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Severity</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Date</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Street_Name</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Speed_Limit</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Accident_Type</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Weather</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Road_Surface</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Light_Conditions</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Registration_Number</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Driver's_Age</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Reference_Number_2</td>\n",
       "      <td>string</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Hour</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Minute</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Second</td>\n",
       "      <td>int</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Column Name Data Type\n",
       "0              Reference_Number    string\n",
       "1   Number_of_Vehicles_Involved       int\n",
       "2          Number_of_Casualties       int\n",
       "3                        Parish    string\n",
       "4                      Severity       int\n",
       "5                          Date    string\n",
       "6                   Street_Name    string\n",
       "7                   Speed_Limit    string\n",
       "8                 Accident_Type    string\n",
       "9                       Weather    string\n",
       "10                 Road_Surface    string\n",
       "11             Light_Conditions    string\n",
       "12          Registration_Number    string\n",
       "13                 Driver's_Age       int\n",
       "14           Reference_Number_2    string\n",
       "15                         Hour       int\n",
       "16                       Minute       int\n",
       "17                       Second       int"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(df_final.dtypes, columns=['Column Name', 'Data Type'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "492651fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Reference_Number</th>\n",
       "      <th>Number_of_Vehicles_Involved</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Parish</th>\n",
       "      <th>Severity</th>\n",
       "      <th>Date</th>\n",
       "      <th>Street_Name</th>\n",
       "      <th>Speed_Limit</th>\n",
       "      <th>Accident_Type</th>\n",
       "      <th>Weather</th>\n",
       "      <th>Road_Surface</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Registration_Number</th>\n",
       "      <th>Driver's_Age</th>\n",
       "      <th>Reference_Number_2</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Minute</th>\n",
       "      <th>Second</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1G0001012</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Trelawny</td>\n",
       "      <td>2</td>\n",
       "      <td>27-Feb-09</td>\n",
       "      <td>LUKE STREET AND NEWTON STREET</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>Crossing accident</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>Dry + Asphalt</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>2259EY</td>\n",
       "      <td>28</td>\n",
       "      <td>1G0001012</td>\n",
       "      <td>8</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1G0001022</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Trelawny</td>\n",
       "      <td>1</td>\n",
       "      <td>1-Mar-09</td>\n",
       "      <td>HOLLAND ROAD AND BOUGH  GATE HIGH  WAY  ROAD</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>Crossing accident</td>\n",
       "      <td>Rain</td>\n",
       "      <td>Wet + Asphalt</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>3164EU</td>\n",
       "      <td>66</td>\n",
       "      <td>1G0001022</td>\n",
       "      <td>17</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1G0001033</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Trelawny</td>\n",
       "      <td>0</td>\n",
       "      <td>28-Apr-05</td>\n",
       "      <td>SALTMARSH MAIN ROAD</td>\n",
       "      <td>Not known</td>\n",
       "      <td>Rear end accident</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>Dry + Asphalt</td>\n",
       "      <td>Darkness</td>\n",
       "      <td>0955BT</td>\n",
       "      <td>58</td>\n",
       "      <td>1G0001033</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1G0001034</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Trelawny</td>\n",
       "      <td>2</td>\n",
       "      <td>9-Feb-06</td>\n",
       "      <td>LUKE STREET AND MARKET STREET</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>Crossing accident</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>Dry + Asphalt</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>2208ED</td>\n",
       "      <td>52</td>\n",
       "      <td>1G0001034</td>\n",
       "      <td>11</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1G0001039</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Trelawny</td>\n",
       "      <td>2</td>\n",
       "      <td>28-Jul-05</td>\n",
       "      <td>SAMUEL PROSPECT MAIN ROAD</td>\n",
       "      <td>Not known</td>\n",
       "      <td>Overtaking accident</td>\n",
       "      <td>Sunny</td>\n",
       "      <td>Dry + Asphalt</td>\n",
       "      <td>Dusk</td>\n",
       "      <td>0563DA</td>\n",
       "      <td>30</td>\n",
       "      <td>1G0001039</td>\n",
       "      <td>18</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Reference_Number  Number_of_Vehicles_Involved  Number_of_Casualties  \\\n",
       "0        1G0001012                            2                     0   \n",
       "1        1G0001022                            2                     2   \n",
       "2        1G0001033                            3                     1   \n",
       "3        1G0001034                            2                     0   \n",
       "4        1G0001039                            2                     0   \n",
       "\n",
       "     Parish  Severity       Date  \\\n",
       "0  Trelawny         2  27-Feb-09   \n",
       "1  Trelawny         1   1-Mar-09   \n",
       "2  Trelawny         0  28-Apr-05   \n",
       "3  Trelawny         2   9-Feb-06   \n",
       "4  Trelawny         2  28-Jul-05   \n",
       "\n",
       "                                    Street_Name Speed_Limit  \\\n",
       "0                 LUKE STREET AND NEWTON STREET     50 km/h   \n",
       "1  HOLLAND ROAD AND BOUGH  GATE HIGH  WAY  ROAD     50 km/h   \n",
       "2                           SALTMARSH MAIN ROAD   Not known   \n",
       "3                 LUKE STREET AND MARKET STREET     50 km/h   \n",
       "4                     SAMUEL PROSPECT MAIN ROAD   Not known   \n",
       "\n",
       "         Accident_Type Weather   Road_Surface Light_Conditions  \\\n",
       "0    Crossing accident   Sunny  Dry + Asphalt         Daylight   \n",
       "1    Crossing accident    Rain  Wet + Asphalt         Daylight   \n",
       "2    Rear end accident   Sunny  Dry + Asphalt         Darkness   \n",
       "3    Crossing accident   Sunny  Dry + Asphalt         Daylight   \n",
       "4  Overtaking accident   Sunny  Dry + Asphalt             Dusk   \n",
       "\n",
       "  Registration_Number  Driver's_Age Reference_Number_2  Hour  Minute  Second  \n",
       "0              2259EY            28          1G0001012     8      30       0  \n",
       "1              3164EU            66          1G0001022    17      13       0  \n",
       "2              0955BT            58          1G0001033     4      10       0  \n",
       "3              2208ED            52          1G0001034    11      30       0  \n",
       "4              0563DA            30          1G0001039    18      45       0  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_final.limit(5).toPandas()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12f1e355",
   "metadata": {},
   "source": [
    "checking missing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9fe693eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "def perform_missing_check(df):\n",
    "    string_columns = ['Reference_Number', 'Parish', 'Division_Number', 'Severity',\n",
    "                     'Date', 'Street_Name', 'Speed_Limit', 'Accident_Type', 'Weather', 'Road_Surface',\n",
    "                     'Light_Conditions','Registration_Number','Reference_Number_2']\n",
    "    numeric_columns = ['Number_Of_Vehicles_Involved','Number_Of_Casualties',\"Driver's_Age\",\n",
    "                      'Hour', 'Minute','Second']\n",
    "    \n",
    "    missing_values = {}\n",
    "    \n",
    "    for index, column in enumerate(df.columns):\n",
    "        if column in string_columns:    \n",
    "    \n",
    "    ### check string columns with None and Null values\n",
    "    ### missing_count = df.filter(col(column).eqNullSafe(None) | col(column).isNull()).count()\n",
    "    ### missing_values.update({column: missing_count})\n",
    "    \n",
    "            missing_count = df.filter(col(column).eqNullSafe(None) | col(column).isNull()).count()\n",
    "            missing_values.update({column:missing_count})\n",
    "        if column in numeric_columns: \n",
    "            \n",
    "    ### check zeroes, None, NaN\n",
    "    \n",
    "            missing_count = df.where(col(column).isin([0,None,np.nan])).count()\n",
    "            missing_values.update({column:missing_count})\n",
    "       \n",
    "    missing_df = pd.DataFrame.from_dict([missing_values])\n",
    "    \n",
    "    return(missing_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b85336db",
   "metadata": {
    "scrolled": False
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Reference_Number</th>\n",
       "      <th>Parish</th>\n",
       "      <th>Severity</th>\n",
       "      <th>Date</th>\n",
       "      <th>Street_Name</th>\n",
       "      <th>Speed_Limit</th>\n",
       "      <th>Accident_Type</th>\n",
       "      <th>Weather</th>\n",
       "      <th>Road_Surface</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Registration_Number</th>\n",
       "      <th>Driver's_Age</th>\n",
       "      <th>Reference_Number_2</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Minute</th>\n",
       "      <th>Second</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>936</td>\n",
       "      <td>3458</td>\n",
       "      <td>0</td>\n",
       "      <td>491</td>\n",
       "      <td>19126</td>\n",
       "      <td>100377</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Reference_Number  Parish  Severity  Date  Street_Name  Speed_Limit  \\\n",
       "0                 0       0         0     0            0            0   \n",
       "\n",
       "   Accident_Type  Weather  Road_Surface  Light_Conditions  \\\n",
       "0              0        0             0                 0   \n",
       "\n",
       "   Registration_Number  Driver's_Age  Reference_Number_2  Hour  Minute  Second  \n",
       "0                  936          3458                   0   491   19126  100377  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sum = perform_missing_check(df_final)\n",
    "df_sum"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bda8524",
   "metadata": {},
   "source": [
    "discretize the Hour into Time periods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2759a6c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final = df_final.dropna(subset=[\"Hour\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6798ee7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_final = df_final.withColumn(\n",
    "    \"Time_Period\",\n",
    "    when(col(\"Hour\").between(0, 5), \"Early Morning\")\n",
    "    .when(col(\"Hour\").between(6, 11), \"Morning\")\n",
    "    .when(col(\"Hour\").between(12, 17), \"Afternoon\")\n",
    "    .when(col(\"Hour\").between(19, 21), \"Evening\")\n",
    "    .otherwise(\"Night\")\n",
    ")\n",
    "\n",
    "\n",
    "df_final = df_final.drop('Hour','Minute','Second')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "c7d275b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp = df_final.toPandas()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "280ec3cd",
   "metadata": {},
   "source": [
    "remove empty rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "9b58f7a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp.dropna(subset=[\"Driver's_Age\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "12126cdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp = dfp.assign(Registration_Number=dfp[\"Registration_Number\"].fillna(\"Unknown\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "f2945d5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Reference_Number               0\n",
       "Number_of_Vehicles_Involved    0\n",
       "Number_of_Casualties           0\n",
       "Parish                         0\n",
       "Severity                       0\n",
       "Date                           0\n",
       "Street_Name                    0\n",
       "Speed_Limit                    0\n",
       "Accident_Type                  0\n",
       "Weather                        0\n",
       "Road_Surface                   0\n",
       "Light_Conditions               0\n",
       "Registration_Number            0\n",
       "Driver's_Age                   0\n",
       "Reference_Number_2             0\n",
       "Time_Period                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfp.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58699d5f",
   "metadata": {},
   "source": [
    "extracting selected attributes for analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "33cd15c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "stats = dfp[[\"Driver's_Age\", 'Number_of_Casualties', 'Number_of_Vehicles_Involved']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a835424",
   "metadata": {},
   "source": [
    "displaying box plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "5ad9f202",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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OyIiIiIDwcSOiIiIyEDoNbE7cuQIevfuDRcXF8hkMkRHR0vLXrx4gWnTpsHb2xtVq1aFi4sLhg4ditu3b6tsw9/fHzKZTOXxwQcfvOUjISIiItI/vSZ2T548QbNmzfDDDz8UWvb06VOcPn0as2bNwunTpxEVFYXLly+jT58+hep+/PHHSE9Plx4rV658G+ETERERlSvG+tx59+7d0b179yKX2djYIDY2VqVs6dKlaN26Na5fv47atWtL5RYWFnByctJprERERETlXYW6xu7Ro0eQyWSoVq2aSvmGDRtgb2+PJk2aYOrUqcjJySlxO3l5ecjOzlZ5EBEREVV0eu2x08SzZ88wffp0DBw4ENbW1lL5oEGD4OHhAScnJyQnJ2PGjBk4e/Zsod6+V0VERGDu3LlvI2wiIiKit0YmhBD6DgIAZDIZtm/fjuDg4ELLXrx4gf79++P69euIj49XSexel5SUhFatWiEpKQktWrQosk5eXh7y8vKk59nZ2XB1dcWjR49K3DYRERHRm8rOzoaNjY1O8o5y32P34sULvP/++0hNTcWhQ4dKfQFatGiBKlWqICUlpdjEztTUFKamproIl4iIiEhvynViV5DUpaSkIC4uDnZ2dqWuc+7cObx48QLOzs5vIUIiIiKi8kOvid3jx49x5coV6XlqairOnDkDW1tbuLi4IDQ0FKdPn0ZMTAwUCgUyMjIAALa2tjAxMcHVq1exYcMG9OjRA/b29jh//jymTJmC5s2bo3379vo6LCIiIiK90Os1dvHx8QgICChUPmzYMISFhcHDw6PI9eLi4uDv748bN25g8ODBSE5OxuPHj+Hq6oqePXtizpw5sLW1VTsOXZ7rJiIiInqVLvOOcjN4Qp+Y2BEREdHbosu8o0LNY0dERERExWNiR0RERGQgmNgRERERGQgmdkREREQGgokdERERkYFgYkdERERkIJjYERERERkIJnZEREREBoKJHREREZGBYGJHREREZCCY2BEREREZCCZ2RERERAaCiR0RERGRgWBiR0RERGQgmNgRERERGQgmdkREREQGgokdERERkYEw1ncAVDkoFAokJCQgPT0dzs7O8PX1hVwu13dYREREBoU9dqRzUVFR8PT0REBAAAYOHIiAgAB4enoiKipK36EREREZFCZ2pFNRUVEIDQ2Ft7c3EhMTkZOTg8TERHh7eyM0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NzExeasxEhEREZUHGid2r3r27JnKPWN1oUaNGirPFyxYgLp160oTJgOAqakpnJycdBoHqXr69CkuXryote2dPn261DoNGzbkoB0iIqISaJzYKRQKhIeHY8WKFbhz5w4uX76MOnXqYNasWXB3d8fIkSN1EScA4Pnz51i/fj0mT56scpovPj4eDg4OqFatGvz8/PDll1/CwcGh2O3k5eUhLy9Pep6dna2zmA3VxYsX0bJlS61tT51tJSUloUWLFlrbJxERkaHROLH78ssvsXbtWixatAgff/yxVO7t7Y1vvvlGp4lddHQ0Hj58iOHDh0tl3bt3R//+/eHm5obU1FTMmjULHTt2RFJSEkxNTYvcTkREBObOnauzOCuDhg0bIikpqdR66iZs6u6TiIiIiqfx4AlPT0+sXLkSnTp1gpWVFc6ePYs6derg4sWLaNeuHbKysnQVK7p27QoTExPs2rWr2Drp6elwc3PD5s2bERISUmSdonrsXF1dOXhCR0oaRMFBE0REVNmUq8ETt27dgqenZ6FypVKJFy9eaCWooly7dg0HDhxAVFRUifWcnZ3h5uaGlJSUYuuYmpoW25tH2ieEgK2trUrSX716dd6phIiISMs0nqC4SZMmSEhIKFT+22+/oXnz5loJqihr1qyBg4MDevbsWWK9zMxM3LhxA87OzjqLhTT34MED6ZRrUlISkzoiIiId0LjHbs6cORgyZAhu3boFpVKJqKgoXLp0CevWrUNMTIwuYoRSqcSaNWswbNgwGBv/X8iPHz9GWFgY+vXrB2dnZ6SlpWHmzJmwt7dH3759dRILERERUXmlcY9d7969sWXLFuzevRsymQyzZ8/GhQsXsGvXLgQGBuoiRhw4cADXr1/HiBEjVMrlcjn+/vtvBAUFoX79+hg2bBjq16+PxMREWFlZ6SQWIiIiovKqTPPYde3aFV27dtV2LMXq0qVLkRfZm5ubY9++fW8tDiIiIqLyTOMeOyIiIiIqn9Tqsatevbra9/3kRfFERERE+qFWYvftt99Kf2dmZmL+/Pno2rUr2rVrBwBITEzEvn37MGvWLJ0ESURERESlUyuxGzZsmPR3v379MG/ePIwbN04qGz9+PH744QccOHAAkyZN0n6URERERFQqja+x27dvH7p161aovGvXrjhw4IBWgiIiIiIizWmc2NnZ2WH79u2FyqOjo2Fn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lSvRtm1bvPvuu/j+++8xfvx4eHl5wcjICJs3b0ZSUhK8vLwwadIkfPXVVyrbsbS0xMKFC9GqVSu8++67SEtLw+7du6VjXb16NV68eIFWrVphwoQJmD9/vsr6o0ePRkhICAYMGIA2bdogMzNTpfeuKFOnToVcLkfjxo1Ro0aNIq/Ha9q0KQ4fPoyUlBT4+vqiefPmmDVrlnSKslq1aoiKikLHjh3RqFEjrFixAps2bVLpZS8K21rZ9evXD6ampjA1NVXpFdXWd/brtm3bhnfffRcffvghGjdujC+++KLYhLe079qy/h68iUGDBuHs2bPw9fWVeskKrFmzBi1btkSvXr3Qrl07CCGwe/fuEk8LW1tbo3fv3kX+bqrTlr766it06NABffr0QefOnfHee++hZcuWGh+XTBR3MpnIAH388ce4ePEiEhIS9B0KERGR1vEaOzJoX3/9NQIDA1G1alXs2bMHa9euxbJly/QdFhERkU7wVCyVOwkJCSpDwl9/aOLEiRMIDAyEt7c3VqxYge+//x4fffSRjiKn8mrDhg3FtqfSTg0Wp0mTJsVus6jRh1Q5sK1plzZ/DyoLnoqlcic3Nxe3bt0qdjlHsJKmcnJypFs2va5KlSpluqby2rVrRU67AbycQ83KykrjbVLFx7amXfw90BwTOyIiIiIDwVOxRERERAaCiR0RERGRgWBiR0RERGQgmNgRERERGQgmdkREREQGgokdERERkYFgYkdERERkIJjYERERERmI/wfTxi7To1cZGAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 700x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize =(7, 3))\n",
    "plt.boxplot(stats.values, labels=stats.columns)\n",
    "plt.title('Box Plot for Accident Outlier Detection')\n",
    "plt.ylabel('Accidents')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "5b8efa49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(90062, 16)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfp.shape"
   ]
  },
  {
   "cell_type": "raw",
   "id": "98ef3be7",
   "metadata": {},
   "source": [
    "determining legal age for driving in Jamaica"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "53c39ee9",
   "metadata": {},
   "outputs": [],
   "source": [
    "age_lbound = 17\n",
    "age_ubound = 80"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "2aa421d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp.drop(dfp[dfp[\"Driver's_Age\"] < age_lbound].index, inplace = True)\n",
    "dfp.drop(dfp[dfp[\"Driver's_Age\"] > age_ubound].index, inplace = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "953ac397",
   "metadata": {},
   "source": [
    "determining number of motor vehicle involved in the accident"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "0d2b4ee5",
   "metadata": {},
   "outputs": [],
   "source": [
    "veh_lbound = 1\n",
    "veh_ubound = 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "2d73bfdd",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp.drop(dfp[dfp[\"Number_of_Vehicles_Involved\"] < veh_lbound].index, inplace = True)\n",
    "dfp.drop(dfp[dfp[\"Number_of_Vehicles_Involved\"] > veh_ubound].index, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "088ce780",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(86145, 16)"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfp.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "a098862b",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfp.drop(['Reference_Number_2'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef5959f7",
   "metadata": {},
   "source": [
    "add encoded columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "f11c28f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def encode_columns(dataframe):\n",
    "    columns = ['Accident_Type','Parish','Weather', 'Road_Surface', 'Light_Conditions', 'Time_Period']\n",
    "    \n",
    "    df = pd.get_dummies(dataframe[columns])\n",
    "    \n",
    "    df = df.astype(int)\n",
    "    \n",
    "    return(df, columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "05496615",
   "metadata": {},
   "outputs": [],
   "source": [
    "qr = encode_columns(dfp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "8ba59dba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(86145, 45)"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qr[0].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "41c6e84c",
   "metadata": {},
   "outputs": [],
   "source": [
    "encoded_df = pd.concat([dfp, qr[0]], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "12f57e62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(86145, 60)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoded_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "249b41b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "encoded_df = encoded_df.drop(qr[1], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "bdd3d97a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Reference_Number                     0\n",
       "Number_of_Vehicles_Involved          0\n",
       "Number_of_Casualties                 0\n",
       "Severity                             0\n",
       "Date                                 0\n",
       "Street_Name                          0\n",
       "Speed_Limit                          0\n",
       "Registration_Number                  0\n",
       "Driver's_Age                         0\n",
       "Accident_Type_Bicycle accident       0\n",
       "Accident_Type_Crossing accident      0\n",
       "Accident_Type_Head-on accident       0\n",
       "Accident_Type_Other accident         0\n",
       "Accident_Type_Overtaking accident    0\n",
       "Accident_Type_Pedestrian accident    0\n",
       "Accident_Type_Rear end accident      0\n",
       "Accident_Type_Single accident        0\n",
       "Accident_Type_Turning accident       0\n",
       "Parish_Clarendon                     0\n",
       "Parish_Hanover                       0\n",
       "Parish_Kingston & St. Andrew         0\n",
       "Parish_Manchester                    0\n",
       "Parish_Portland                      0\n",
       "Parish_St. Ann                       0\n",
       "Parish_St. Catherine                 0\n",
       "Parish_St. Elizabeth                 0\n",
       "Parish_St. James                     0\n",
       "Parish_St. Mary                      0\n",
       "Parish_St.Thomas                     0\n",
       "Parish_Trelawny                      0\n",
       "Parish_Westmoreland                  0\n",
       "Weather_Cloudy                       0\n",
       "Weather_Fog/Mist                     0\n",
       "Weather_Rain                         0\n",
       "Weather_Sunny                        0\n",
       "Road_Surface_Dry + Asphalt           0\n",
       "Road_Surface_Dry +Unpaved            0\n",
       "Road_Surface_Gravel                  0\n",
       "Road_Surface_Oily + Asphalt          0\n",
       "Road_Surface_Oily + Unpaved          0\n",
       "Road_Surface_Others                  0\n",
       "Road_Surface_Wet + Asphalt           0\n",
       "Road_Surface_Wet + Unpaved           0\n",
       "Light_Conditions_Darkness            0\n",
       "Light_Conditions_Dawn                0\n",
       "Light_Conditions_Daylight            0\n",
       "Light_Conditions_Dusk                0\n",
       "Light_Conditions_Night/Lit           0\n",
       "Light_Conditions_Others              0\n",
       "Time_Period_Afternoon                0\n",
       "Time_Period_Early Morning            0\n",
       "Time_Period_Evening                  0\n",
       "Time_Period_Morning                  0\n",
       "Time_Period_Night                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoded_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "0f3c7bc1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\theon\\AppData\\Local\\Temp\\ipykernel_11952\\2611079774.py:1: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
      "  encoded_df[\"Date\"] = pd.to_datetime(encoded_df[\"Date\"])\n"
     ]
    }
   ],
   "source": [
    "encoded_df[\"Date\"] = pd.to_datetime(encoded_df[\"Date\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "86982a05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Reference_Number</th>\n",
       "      <th>Number_of_Vehicles_Involved</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Severity</th>\n",
       "      <th>Date</th>\n",
       "      <th>Street_Name</th>\n",
       "      <th>Speed_Limit</th>\n",
       "      <th>Registration_Number</th>\n",
       "      <th>Driver's_Age</th>\n",
       "      <th>Accident_Type_Bicycle accident</th>\n",
       "      <th>...</th>\n",
       "      <th>Light_Conditions_Dawn</th>\n",
       "      <th>Light_Conditions_Daylight</th>\n",
       "      <th>Light_Conditions_Dusk</th>\n",
       "      <th>Light_Conditions_Night/Lit</th>\n",
       "      <th>Light_Conditions_Others</th>\n",
       "      <th>Time_Period_Afternoon</th>\n",
       "      <th>Time_Period_Early Morning</th>\n",
       "      <th>Time_Period_Evening</th>\n",
       "      <th>Time_Period_Morning</th>\n",
       "      <th>Time_Period_Night</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1G0001012</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2009-02-27</td>\n",
       "      <td>LUKE STREET AND NEWTON STREET</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>2259EY</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1G0001022</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2009-03-01</td>\n",
       "      <td>HOLLAND ROAD AND BOUGH  GATE HIGH  WAY  ROAD</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>3164EU</td>\n",
       "      <td>66.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1G0001033</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2005-04-28</td>\n",
       "      <td>SALTMARSH MAIN ROAD</td>\n",
       "      <td>Not known</td>\n",
       "      <td>0955BT</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1G0001034</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-09</td>\n",
       "      <td>LUKE STREET AND MARKET STREET</td>\n",
       "      <td>50 km/h</td>\n",
       "      <td>2208ED</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1G0001039</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2005-07-28</td>\n",
       "      <td>SAMUEL PROSPECT MAIN ROAD</td>\n",
       "      <td>Not known</td>\n",
       "      <td>0563DA</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 54 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Reference_Number  Number_of_Vehicles_Involved  Number_of_Casualties  \\\n",
       "0        1G0001012                            2                     0   \n",
       "1        1G0001022                            2                     2   \n",
       "2        1G0001033                            3                     1   \n",
       "3        1G0001034                            2                     0   \n",
       "4        1G0001039                            2                     0   \n",
       "\n",
       "   Severity       Date                                   Street_Name  \\\n",
       "0         2 2009-02-27                 LUKE STREET AND NEWTON STREET   \n",
       "1         1 2009-03-01  HOLLAND ROAD AND BOUGH  GATE HIGH  WAY  ROAD   \n",
       "2         0 2005-04-28                           SALTMARSH MAIN ROAD   \n",
       "3         2 2006-02-09                 LUKE STREET AND MARKET STREET   \n",
       "4         2 2005-07-28                     SAMUEL PROSPECT MAIN ROAD   \n",
       "\n",
       "  Speed_Limit Registration_Number  Driver's_Age  \\\n",
       "0     50 km/h              2259EY          28.0   \n",
       "1     50 km/h              3164EU          66.0   \n",
       "2   Not known              0955BT          58.0   \n",
       "3     50 km/h              2208ED          52.0   \n",
       "4   Not known              0563DA          30.0   \n",
       "\n",
       "   Accident_Type_Bicycle accident  ...  Light_Conditions_Dawn  \\\n",
       "0                               0  ...                      0   \n",
       "1                               0  ...                      0   \n",
       "2                               0  ...                      0   \n",
       "3                               0  ...                      0   \n",
       "4                               0  ...                      0   \n",
       "\n",
       "   Light_Conditions_Daylight  Light_Conditions_Dusk  \\\n",
       "0                          1                      0   \n",
       "1                          1                      0   \n",
       "2                          0                      0   \n",
       "3                          1                      0   \n",
       "4                          0                      1   \n",
       "\n",
       "   Light_Conditions_Night/Lit  Light_Conditions_Others  Time_Period_Afternoon  \\\n",
       "0                           0                        0                      0   \n",
       "1                           0                        0                      1   \n",
       "2                           0                        0                      0   \n",
       "3                           0                        0                      0   \n",
       "4                           0                        0                      0   \n",
       "\n",
       "   Time_Period_Early Morning  Time_Period_Evening  Time_Period_Morning  \\\n",
       "0                          0                    0                    1   \n",
       "1                          0                    0                    0   \n",
       "2                          1                    0                    0   \n",
       "3                          0                    0                    1   \n",
       "4                          0                    0                    0   \n",
       "\n",
       "   Time_Period_Night  \n",
       "0                  0  \n",
       "1                  0  \n",
       "2                  0  \n",
       "3                  0  \n",
       "4                  1  \n",
       "\n",
       "[5 rows x 54 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoded_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "541193dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(86145, 54)"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoded_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "056dad94",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "001eac6a",
   "metadata": {},
   "source": [
    "# Data Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0fb266a",
   "metadata": {},
   "source": [
    "### Data Exploration"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8126c4fa",
   "metadata": {},
   "source": [
    "### Correlation Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "0880f8bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation Scores:\n",
      "Number_of_Vehicles_Involved <-> Number_of_Casualties: -0.058\n",
      "Number_of_Vehicles_Involved <-> Severity: 0.157\n",
      "Number_of_Vehicles_Involved <-> Driver's_Age: 0.027\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Bicycle accident: -0.104\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Crossing accident: 0.076\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Head-on accident: 0.088\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Other accident: 0.099\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Overtaking accident: 0.076\n",
      "\u001b[1mNumber_of_Vehicles_Involved <-> Accident_Type_Pedestrian accident: -0.416\u001b[0m\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Rear end accident: 0.266\n",
      "\u001b[1mNumber_of_Vehicles_Involved <-> Accident_Type_Single accident: -0.534\u001b[0m\n",
      "Number_of_Vehicles_Involved <-> Accident_Type_Turning accident: 0.065\n",
      "Number_of_Vehicles_Involved <-> Parish_Clarendon: -0.035\n",
      "Number_of_Vehicles_Involved <-> Parish_Hanover: -0.022\n",
      "Number_of_Vehicles_Involved <-> Parish_Kingston & St. Andrew: 0.096\n",
      "Number_of_Vehicles_Involved <-> Parish_Manchester: -0.012\n",
      "Number_of_Vehicles_Involved <-> Parish_Portland: -0.055\n",
      "Number_of_Vehicles_Involved <-> Parish_St. Ann: -0.037\n",
      "Number_of_Vehicles_Involved <-> Parish_St. Catherine: 0.005\n",
      "Number_of_Vehicles_Involved <-> Parish_St. Elizabeth: -0.028\n",
      "Number_of_Vehicles_Involved <-> Parish_St. James: 0.045\n",
      "Number_of_Vehicles_Involved <-> Parish_St. Mary: -0.048\n",
      "Number_of_Vehicles_Involved <-> Parish_St.Thomas: -0.026\n",
      "Number_of_Vehicles_Involved <-> Parish_Trelawny: -0.035\n",
      "Number_of_Vehicles_Involved <-> Parish_Westmoreland: -0.018\n",
      "Number_of_Vehicles_Involved <-> Weather_Cloudy: -0.012\n",
      "Number_of_Vehicles_Involved <-> Weather_Fog/Mist: -0.042\n",
      "Number_of_Vehicles_Involved <-> Weather_Rain: -0.045\n",
      "Number_of_Vehicles_Involved <-> Weather_Sunny: 0.052\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Dry + Asphalt: 0.068\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Dry +Unpaved: -0.028\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Gravel: -0.012\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Oily + Asphalt: -0.018\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Oily + Unpaved: -0.013\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Others: -0.017\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Wet + Asphalt: -0.057\n",
      "Number_of_Vehicles_Involved <-> Road_Surface_Wet + Unpaved: -0.011\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Darkness: -0.108\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Dawn: -0.035\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Daylight: 0.096\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Dusk: -0.002\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Night/Lit: -0.021\n",
      "Number_of_Vehicles_Involved <-> Light_Conditions_Others: -0.004\n",
      "Number_of_Vehicles_Involved <-> Time_Period_Afternoon: 0.036\n",
      "Number_of_Vehicles_Involved <-> Time_Period_Early Morning: -0.085\n",
      "Number_of_Vehicles_Involved <-> Time_Period_Evening: -0.017\n",
      "Number_of_Vehicles_Involved <-> Time_Period_Morning: 0.043\n",
      "Number_of_Vehicles_Involved <-> Time_Period_Night: -0.031\n",
      "\u001b[1mNumber_of_Casualties <-> Severity: -0.689\u001b[0m\n",
      "Number_of_Casualties <-> Driver's_Age: -0.028\n",
      "Number_of_Casualties <-> Accident_Type_Bicycle accident: 0.066\n",
      "Number_of_Casualties <-> Accident_Type_Crossing accident: -0.022\n",
      "Number_of_Casualties <-> Accident_Type_Head-on accident: 0.081\n",
      "Number_of_Casualties <-> Accident_Type_Other accident: -0.118\n",
      "Number_of_Casualties <-> Accident_Type_Overtaking accident: -0.010\n",
      "Number_of_Casualties <-> Accident_Type_Pedestrian accident: 0.143\n",
      "Number_of_Casualties <-> Accident_Type_Rear end accident: -0.052\n",
      "Number_of_Casualties <-> Accident_Type_Single accident: 0.086\n",
      "Number_of_Casualties <-> Accident_Type_Turning accident: -0.017\n",
      "Number_of_Casualties <-> Parish_Clarendon: 0.087\n",
      "Number_of_Casualties <-> Parish_Hanover: 0.052\n",
      "Number_of_Casualties <-> Parish_Kingston & St. Andrew: -0.208\n",
      "Number_of_Casualties <-> Parish_Manchester: -0.002\n",
      "Number_of_Casualties <-> Parish_Portland: 0.020\n",
      "Number_of_Casualties <-> Parish_St. Ann: 0.037\n",
      "Number_of_Casualties <-> Parish_St. Catherine: 0.096\n",
      "Number_of_Casualties <-> Parish_St. Elizabeth: 0.039\n",
      "Number_of_Casualties <-> Parish_St. James: 0.007\n",
      "Number_of_Casualties <-> Parish_St. Mary: 0.040\n",
      "Number_of_Casualties <-> Parish_St.Thomas: 0.029\n",
      "Number_of_Casualties <-> Parish_Trelawny: 0.032\n",
      "Number_of_Casualties <-> Parish_Westmoreland: 0.039\n",
      "Number_of_Casualties <-> Weather_Cloudy: 0.004\n",
      "Number_of_Casualties <-> Weather_Fog/Mist: 0.015\n",
      "Number_of_Casualties <-> Weather_Rain: 0.028\n",
      "Number_of_Casualties <-> Weather_Sunny: -0.029\n",
      "Number_of_Casualties <-> Road_Surface_Dry + Asphalt: -0.028\n",
      "Number_of_Casualties <-> Road_Surface_Dry +Unpaved: -0.001\n",
      "Number_of_Casualties <-> Road_Surface_Gravel: 0.001\n",
      "Number_of_Casualties <-> Road_Surface_Oily + Asphalt: 0.008\n",
      "Number_of_Casualties <-> Road_Surface_Oily + Unpaved: -0.001\n",
      "Number_of_Casualties <-> Road_Surface_Others: -0.002\n",
      "Number_of_Casualties <-> Road_Surface_Wet + Asphalt: 0.029\n",
      "Number_of_Casualties <-> Road_Surface_Wet + Unpaved: -0.003\n",
      "Number_of_Casualties <-> Light_Conditions_Darkness: 0.064\n",
      "Number_of_Casualties <-> Light_Conditions_Dawn: 0.011\n",
      "Number_of_Casualties <-> Light_Conditions_Daylight: -0.050\n",
      "Number_of_Casualties <-> Light_Conditions_Dusk: -0.000\n",
      "Number_of_Casualties <-> Light_Conditions_Night/Lit: 0.008\n",
      "Number_of_Casualties <-> Light_Conditions_Others: 0.001\n",
      "Number_of_Casualties <-> Time_Period_Afternoon: -0.032\n",
      "Number_of_Casualties <-> Time_Period_Early Morning: 0.028\n",
      "Number_of_Casualties <-> Time_Period_Evening: 0.023\n",
      "Number_of_Casualties <-> Time_Period_Morning: -0.008\n",
      "Number_of_Casualties <-> Time_Period_Night: 0.018\n",
      "Severity <-> Driver's_Age: 0.025\n",
      "Severity <-> Accident_Type_Bicycle accident: -0.139\n",
      "Severity <-> Accident_Type_Crossing accident: 0.033\n",
      "Severity <-> Accident_Type_Head-on accident: -0.037\n",
      "Severity <-> Accident_Type_Other accident: 0.156\n",
      "Severity <-> Accident_Type_Overtaking accident: 0.033\n",
      "Severity <-> Accident_Type_Pedestrian accident: -0.281\n",
      "Severity <-> Accident_Type_Rear end accident: 0.054\n",
      "Severity <-> Accident_Type_Single accident: -0.089\n",
      "Severity <-> Accident_Type_Turning accident: 0.023\n",
      "Severity <-> Parish_Clarendon: -0.090\n",
      "Severity <-> Parish_Hanover: -0.023\n",
      "Severity <-> Parish_Kingston & St. Andrew: 0.208\n",
      "Severity <-> Parish_Manchester: 0.002\n",
      "Severity <-> Parish_Portland: -0.031\n",
      "Severity <-> Parish_St. Ann: -0.023\n",
      "Severity <-> Parish_St. Catherine: -0.108\n",
      "Severity <-> Parish_St. Elizabeth: -0.050\n",
      "Severity <-> Parish_St. James: -0.001\n",
      "Severity <-> Parish_St. Mary: -0.043\n",
      "Severity <-> Parish_St.Thomas: -0.032\n",
      "Severity <-> Parish_Trelawny: -0.018\n",
      "Severity <-> Parish_Westmoreland: -0.045\n",
      "Severity <-> Weather_Cloudy: -0.002\n",
      "Severity <-> Weather_Fog/Mist: -0.010\n",
      "Severity <-> Weather_Rain: -0.018\n",
      "Severity <-> Weather_Sunny: 0.018\n",
      "Severity <-> Road_Surface_Dry + Asphalt: 0.019\n",
      "Severity <-> Road_Surface_Dry +Unpaved: -0.004\n",
      "Severity <-> Road_Surface_Gravel: -0.003\n",
      "Severity <-> Road_Surface_Oily + Asphalt: -0.005\n",
      "Severity <-> Road_Surface_Oily + Unpaved: 0.000\n",
      "Severity <-> Road_Surface_Others: -0.003\n",
      "Severity <-> Road_Surface_Wet + Asphalt: -0.019\n",
      "Severity <-> Road_Surface_Wet + Unpaved: 0.007\n",
      "Severity <-> Light_Conditions_Darkness: -0.062\n",
      "Severity <-> Light_Conditions_Dawn: -0.015\n",
      "Severity <-> Light_Conditions_Daylight: 0.053\n",
      "Severity <-> Light_Conditions_Dusk: 0.002\n",
      "Severity <-> Light_Conditions_Night/Lit: -0.013\n",
      "Severity <-> Light_Conditions_Others: -0.002\n",
      "Severity <-> Time_Period_Afternoon: 0.037\n",
      "Severity <-> Time_Period_Early Morning: -0.034\n",
      "Severity <-> Time_Period_Evening: -0.025\n",
      "Severity <-> Time_Period_Morning: 0.007\n",
      "Severity <-> Time_Period_Night: -0.015\n",
      "Driver's_Age <-> Accident_Type_Bicycle accident: 0.004\n",
      "Driver's_Age <-> Accident_Type_Crossing accident: 0.006\n",
      "Driver's_Age <-> Accident_Type_Head-on accident: -0.009\n",
      "Driver's_Age <-> Accident_Type_Other accident: 0.030\n",
      "Driver's_Age <-> Accident_Type_Overtaking accident: -0.007\n",
      "Driver's_Age <-> Accident_Type_Pedestrian accident: 0.011\n",
      "Driver's_Age <-> Accident_Type_Rear end accident: 0.010\n",
      "Driver's_Age <-> Accident_Type_Single accident: -0.064\n",
      "Driver's_Age <-> Accident_Type_Turning accident: -0.004\n",
      "Driver's_Age <-> Parish_Clarendon: 0.017\n",
      "Driver's_Age <-> Parish_Hanover: -0.019\n",
      "Driver's_Age <-> Parish_Kingston & St. Andrew: 0.012\n",
      "Driver's_Age <-> Parish_Manchester: 0.007\n",
      "Driver's_Age <-> Parish_Portland: 0.003\n",
      "Driver's_Age <-> Parish_St. Ann: 0.001\n",
      "Driver's_Age <-> Parish_St. Catherine: -0.017\n",
      "Driver's_Age <-> Parish_St. Elizabeth: 0.006\n",
      "Driver's_Age <-> Parish_St. James: -0.009\n",
      "Driver's_Age <-> Parish_St. Mary: -0.002\n",
      "Driver's_Age <-> Parish_St.Thomas: 0.005\n",
      "Driver's_Age <-> Parish_Trelawny: -0.012\n",
      "Driver's_Age <-> Parish_Westmoreland: -0.015\n",
      "Driver's_Age <-> Weather_Cloudy: -0.004\n",
      "Driver's_Age <-> Weather_Fog/Mist: -0.007\n",
      "Driver's_Age <-> Weather_Rain: -0.011\n",
      "Driver's_Age <-> Weather_Sunny: 0.013\n",
      "Driver's_Age <-> Road_Surface_Dry + Asphalt: 0.014\n",
      "Driver's_Age <-> Road_Surface_Dry +Unpaved: 0.004\n",
      "Driver's_Age <-> Road_Surface_Gravel: 0.011\n",
      "Driver's_Age <-> Road_Surface_Oily + Asphalt: -0.004\n",
      "Driver's_Age <-> Road_Surface_Oily + Unpaved: 0.000\n",
      "Driver's_Age <-> Road_Surface_Others: 0.001\n",
      "Driver's_Age <-> Road_Surface_Wet + Asphalt: -0.016\n",
      "Driver's_Age <-> Road_Surface_Wet + Unpaved: 0.003\n",
      "Driver's_Age <-> Light_Conditions_Darkness: -0.027\n",
      "Driver's_Age <-> Light_Conditions_Dawn: -0.007\n",
      "Driver's_Age <-> Light_Conditions_Daylight: 0.046\n",
      "Driver's_Age <-> Light_Conditions_Dusk: -0.003\n",
      "Driver's_Age <-> Light_Conditions_Night/Lit: -0.034\n",
      "Driver's_Age <-> Light_Conditions_Others: -0.002\n",
      "Driver's_Age <-> Time_Period_Afternoon: 0.026\n",
      "Driver's_Age <-> Time_Period_Early Morning: -0.035\n",
      "Driver's_Age <-> Time_Period_Evening: -0.010\n",
      "Driver's_Age <-> Time_Period_Morning: 0.012\n",
      "Driver's_Age <-> Time_Period_Night: -0.018\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Crossing accident: -0.043\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Head-on accident: -0.043\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Other accident: -0.074\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Overtaking accident: -0.037\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Pedestrian accident: -0.031\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Rear end accident: -0.078\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Single accident: -0.037\n",
      "Accident_Type_Bicycle accident <-> Accident_Type_Turning accident: -0.041\n",
      "Accident_Type_Bicycle accident <-> Parish_Clarendon: 0.031\n",
      "Accident_Type_Bicycle accident <-> Parish_Hanover: 0.007\n",
      "Accident_Type_Bicycle accident <-> Parish_Kingston & St. Andrew: -0.035\n",
      "Accident_Type_Bicycle accident <-> Parish_Manchester: -0.014\n",
      "Accident_Type_Bicycle accident <-> Parish_Portland: 0.040\n",
      "Accident_Type_Bicycle accident <-> Parish_St. Ann: -0.022\n",
      "Accident_Type_Bicycle accident <-> Parish_St. Catherine: 0.035\n",
      "Accident_Type_Bicycle accident <-> Parish_St. Elizabeth: 0.002\n",
      "Accident_Type_Bicycle accident <-> Parish_St. James: -0.020\n",
      "Accident_Type_Bicycle accident <-> Parish_St. Mary: 0.005\n",
      "Accident_Type_Bicycle accident <-> Parish_St.Thomas: 0.011\n",
      "Accident_Type_Bicycle accident <-> Parish_Trelawny: 0.007\n",
      "Accident_Type_Bicycle accident <-> Parish_Westmoreland: 0.017\n",
      "Accident_Type_Bicycle accident <-> Weather_Cloudy: -0.004\n",
      "Accident_Type_Bicycle accident <-> Weather_Fog/Mist: -0.006\n",
      "Accident_Type_Bicycle accident <-> Weather_Rain: -0.018\n",
      "Accident_Type_Bicycle accident <-> Weather_Sunny: 0.018\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Dry + Asphalt: 0.018\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Dry +Unpaved: 0.005\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Gravel: 0.003\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Oily + Asphalt: -0.004\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Oily + Unpaved: 0.004\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Others: 0.001\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Wet + Asphalt: -0.020\n",
      "Accident_Type_Bicycle accident <-> Road_Surface_Wet + Unpaved: 0.000\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Darkness: -0.002\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Dawn: -0.003\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Daylight: -0.005\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Dusk: 0.011\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Night/Lit: 0.003\n",
      "Accident_Type_Bicycle accident <-> Light_Conditions_Others: 0.004\n",
      "Accident_Type_Bicycle accident <-> Time_Period_Afternoon: -0.007\n",
      "Accident_Type_Bicycle accident <-> Time_Period_Early Morning: -0.009\n",
      "Accident_Type_Bicycle accident <-> Time_Period_Evening: 0.011\n",
      "Accident_Type_Bicycle accident <-> Time_Period_Morning: 0.002\n",
      "Accident_Type_Bicycle accident <-> Time_Period_Night: 0.007\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Head-on accident: -0.108\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Other accident: -0.184\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Overtaking accident: -0.092\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Pedestrian accident: -0.077\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Rear end accident: -0.194\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Single accident: -0.092\n",
      "Accident_Type_Crossing accident <-> Accident_Type_Turning accident: -0.101\n",
      "Accident_Type_Crossing accident <-> Parish_Clarendon: -0.019\n",
      "Accident_Type_Crossing accident <-> Parish_Hanover: -0.013\n",
      "Accident_Type_Crossing accident <-> Parish_Kingston & St. Andrew: 0.117\n",
      "Accident_Type_Crossing accident <-> Parish_Manchester: 0.003\n",
      "Accident_Type_Crossing accident <-> Parish_Portland: -0.046\n",
      "Accident_Type_Crossing accident <-> Parish_St. Ann: -0.051\n",
      "Accident_Type_Crossing accident <-> Parish_St. Catherine: -0.002\n",
      "Accident_Type_Crossing accident <-> Parish_St. Elizabeth: -0.019\n",
      "Accident_Type_Crossing accident <-> Parish_St. James: -0.011\n",
      "Accident_Type_Crossing accident <-> Parish_St. Mary: -0.055\n",
      "Accident_Type_Crossing accident <-> Parish_St.Thomas: -0.037\n",
      "Accident_Type_Crossing accident <-> Parish_Trelawny: -0.013\n",
      "Accident_Type_Crossing accident <-> Parish_Westmoreland: -0.033\n",
      "Accident_Type_Crossing accident <-> Weather_Cloudy: -0.019\n",
      "Accident_Type_Crossing accident <-> Weather_Fog/Mist: -0.013\n",
      "Accident_Type_Crossing accident <-> Weather_Rain: -0.038\n",
      "Accident_Type_Crossing accident <-> Weather_Sunny: 0.045\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Dry + Asphalt: 0.051\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Dry +Unpaved: -0.017\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Gravel: -0.007\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Oily + Asphalt: -0.004\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Oily + Unpaved: -0.005\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Others: -0.006\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Wet + Asphalt: -0.045\n",
      "Accident_Type_Crossing accident <-> Road_Surface_Wet + Unpaved: -0.012\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Darkness: -0.045\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Dawn: -0.008\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Daylight: 0.022\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Dusk: 0.001\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Night/Lit: 0.013\n",
      "Accident_Type_Crossing accident <-> Light_Conditions_Others: -0.005\n",
      "Accident_Type_Crossing accident <-> Time_Period_Afternoon: 0.012\n",
      "Accident_Type_Crossing accident <-> Time_Period_Early Morning: -0.032\n",
      "Accident_Type_Crossing accident <-> Time_Period_Evening: -0.001\n",
      "Accident_Type_Crossing accident <-> Time_Period_Morning: 0.006\n",
      "Accident_Type_Crossing accident <-> Time_Period_Night: 0.005\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Other accident: -0.185\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Overtaking accident: -0.093\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Pedestrian accident: -0.078\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Rear end accident: -0.196\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Single accident: -0.093\n",
      "Accident_Type_Head-on accident <-> Accident_Type_Turning accident: -0.102\n",
      "Accident_Type_Head-on accident <-> Parish_Clarendon: 0.053\n",
      "Accident_Type_Head-on accident <-> Parish_Hanover: 0.028\n",
      "Accident_Type_Head-on accident <-> Parish_Kingston & St. Andrew: -0.184\n",
      "Accident_Type_Head-on accident <-> Parish_Manchester: 0.021\n",
      "Accident_Type_Head-on accident <-> Parish_Portland: 0.085\n",
      "Accident_Type_Head-on accident <-> Parish_St. Ann: 0.113\n",
      "Accident_Type_Head-on accident <-> Parish_St. Catherine: -0.054\n",
      "Accident_Type_Head-on accident <-> Parish_St. Elizabeth: 0.013\n",
      "Accident_Type_Head-on accident <-> Parish_St. James: -0.010\n",
      "Accident_Type_Head-on accident <-> Parish_St. Mary: 0.135\n",
      "Accident_Type_Head-on accident <-> Parish_St.Thomas: 0.060\n",
      "Accident_Type_Head-on accident <-> Parish_Trelawny: 0.022\n",
      "Accident_Type_Head-on accident <-> Parish_Westmoreland: 0.006\n",
      "Accident_Type_Head-on accident <-> Weather_Cloudy: 0.040\n",
      "Accident_Type_Head-on accident <-> Weather_Fog/Mist: 0.002\n",
      "Accident_Type_Head-on accident <-> Weather_Rain: 0.071\n",
      "Accident_Type_Head-on accident <-> Weather_Sunny: -0.083\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Dry + Asphalt: -0.084\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Dry +Unpaved: 0.008\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Gravel: -0.003\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Oily + Asphalt: 0.003\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Oily + Unpaved: 0.000\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Others: -0.002\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Wet + Asphalt: 0.084\n",
      "Accident_Type_Head-on accident <-> Road_Surface_Wet + Unpaved: 0.013\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Darkness: 0.071\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Dawn: 0.006\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Daylight: -0.042\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Dusk: 0.008\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Night/Lit: -0.012\n",
      "Accident_Type_Head-on accident <-> Light_Conditions_Others: -0.003\n",
      "Accident_Type_Head-on accident <-> Time_Period_Afternoon: -0.014\n",
      "Accident_Type_Head-on accident <-> Time_Period_Early Morning: 0.020\n",
      "Accident_Type_Head-on accident <-> Time_Period_Evening: 0.023\n",
      "Accident_Type_Head-on accident <-> Time_Period_Morning: -0.022\n",
      "Accident_Type_Head-on accident <-> Time_Period_Night: 0.019\n",
      "Accident_Type_Other accident <-> Accident_Type_Overtaking accident: -0.159\n",
      "Accident_Type_Other accident <-> Accident_Type_Pedestrian accident: -0.133\n",
      "Accident_Type_Other accident <-> Accident_Type_Rear end accident: -0.334\n",
      "Accident_Type_Other accident <-> Accident_Type_Single accident: -0.158\n",
      "Accident_Type_Other accident <-> Accident_Type_Turning accident: -0.173\n",
      "Accident_Type_Other accident <-> Parish_Clarendon: -0.034\n",
      "Accident_Type_Other accident <-> Parish_Hanover: -0.020\n",
      "Accident_Type_Other accident <-> Parish_Kingston & St. Andrew: 0.074\n",
      "Accident_Type_Other accident <-> Parish_Manchester: -0.009\n",
      "Accident_Type_Other accident <-> Parish_Portland: -0.027\n",
      "Accident_Type_Other accident <-> Parish_St. Ann: -0.009\n",
      "Accident_Type_Other accident <-> Parish_St. Catherine: -0.028\n",
      "Accident_Type_Other accident <-> Parish_St. Elizabeth: 0.007\n",
      "Accident_Type_Other accident <-> Parish_St. James: 0.014\n",
      "Accident_Type_Other accident <-> Parish_St. Mary: -0.041\n",
      "Accident_Type_Other accident <-> Parish_St.Thomas: -0.035\n",
      "Accident_Type_Other accident <-> Parish_Trelawny: -0.008\n",
      "Accident_Type_Other accident <-> Parish_Westmoreland: 0.017\n",
      "Accident_Type_Other accident <-> Weather_Cloudy: -0.007\n",
      "Accident_Type_Other accident <-> Weather_Fog/Mist: -0.008\n",
      "Accident_Type_Other accident <-> Weather_Rain: -0.035\n",
      "Accident_Type_Other accident <-> Weather_Sunny: 0.034\n",
      "Accident_Type_Other accident <-> Road_Surface_Dry + Asphalt: 0.038\n",
      "Accident_Type_Other accident <-> Road_Surface_Dry +Unpaved: 0.011\n",
      "Accident_Type_Other accident <-> Road_Surface_Gravel: 0.006\n",
      "Accident_Type_Other accident <-> Road_Surface_Oily + Asphalt: 0.001\n",
      "Accident_Type_Other accident <-> Road_Surface_Oily + Unpaved: 0.000\n",
      "Accident_Type_Other accident <-> Road_Surface_Others: 0.004\n",
      "Accident_Type_Other accident <-> Road_Surface_Wet + Asphalt: -0.043\n",
      "Accident_Type_Other accident <-> Road_Surface_Wet + Unpaved: -0.001\n",
      "Accident_Type_Other accident <-> Light_Conditions_Darkness: -0.034\n",
      "Accident_Type_Other accident <-> Light_Conditions_Dawn: -0.004\n",
      "Accident_Type_Other accident <-> Light_Conditions_Daylight: 0.029\n",
      "Accident_Type_Other accident <-> Light_Conditions_Dusk: -0.001\n",
      "Accident_Type_Other accident <-> Light_Conditions_Night/Lit: -0.007\n",
      "Accident_Type_Other accident <-> Light_Conditions_Others: 0.002\n",
      "Accident_Type_Other accident <-> Time_Period_Afternoon: 0.019\n",
      "Accident_Type_Other accident <-> Time_Period_Early Morning: -0.013\n",
      "Accident_Type_Other accident <-> Time_Period_Evening: -0.018\n",
      "Accident_Type_Other accident <-> Time_Period_Morning: 0.006\n",
      "Accident_Type_Other accident <-> Time_Period_Night: -0.012\n",
      "Accident_Type_Overtaking accident <-> Accident_Type_Pedestrian accident: -0.067\n",
      "Accident_Type_Overtaking accident <-> Accident_Type_Rear end accident: -0.168\n",
      "Accident_Type_Overtaking accident <-> Accident_Type_Single accident: -0.080\n",
      "Accident_Type_Overtaking accident <-> Accident_Type_Turning accident: -0.087\n",
      "Accident_Type_Overtaking accident <-> Parish_Clarendon: 0.005\n",
      "Accident_Type_Overtaking accident <-> Parish_Hanover: 0.004\n",
      "Accident_Type_Overtaking accident <-> Parish_Kingston & St. Andrew: 0.015\n",
      "Accident_Type_Overtaking accident <-> Parish_Manchester: -0.009\n",
      "Accident_Type_Overtaking accident <-> Parish_Portland: -0.008\n",
      "Accident_Type_Overtaking accident <-> Parish_St. Ann: -0.036\n",
      "Accident_Type_Overtaking accident <-> Parish_St. Catherine: 0.006\n",
      "Accident_Type_Overtaking accident <-> Parish_St. Elizabeth: 0.012\n",
      "Accident_Type_Overtaking accident <-> Parish_St. James: -0.016\n",
      "Accident_Type_Overtaking accident <-> Parish_St. Mary: 0.012\n",
      "Accident_Type_Overtaking accident <-> Parish_St.Thomas: 0.018\n",
      "Accident_Type_Overtaking accident <-> Parish_Trelawny: -0.002\n",
      "Accident_Type_Overtaking accident <-> Parish_Westmoreland: 0.008\n",
      "Accident_Type_Overtaking accident <-> Weather_Cloudy: -0.007\n",
      "Accident_Type_Overtaking accident <-> Weather_Fog/Mist: -0.010\n",
      "Accident_Type_Overtaking accident <-> Weather_Rain: -0.033\n",
      "Accident_Type_Overtaking accident <-> Weather_Sunny: 0.034\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Dry + Asphalt: 0.038\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Dry +Unpaved: -0.004\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Gravel: -0.003\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Oily + Asphalt: -0.007\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Oily + Unpaved: -0.004\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Others: -0.000\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Wet + Asphalt: -0.037\n",
      "Accident_Type_Overtaking accident <-> Road_Surface_Wet + Unpaved: -0.003\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Darkness: -0.013\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Dawn: -0.004\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Daylight: 0.011\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Dusk: 0.003\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Night/Lit: -0.003\n",
      "Accident_Type_Overtaking accident <-> Light_Conditions_Others: -0.002\n",
      "Accident_Type_Overtaking accident <-> Time_Period_Afternoon: -0.001\n",
      "Accident_Type_Overtaking accident <-> Time_Period_Early Morning: -0.007\n",
      "Accident_Type_Overtaking accident <-> Time_Period_Evening: -0.005\n",
      "Accident_Type_Overtaking accident <-> Time_Period_Morning: 0.010\n",
      "Accident_Type_Overtaking accident <-> Time_Period_Night: -0.004\n",
      "Accident_Type_Pedestrian accident <-> Accident_Type_Rear end accident: -0.141\n",
      "Accident_Type_Pedestrian accident <-> Accident_Type_Single accident: -0.067\n",
      "Accident_Type_Pedestrian accident <-> Accident_Type_Turning accident: -0.073\n",
      "Accident_Type_Pedestrian accident <-> Parish_Clarendon: 0.024\n",
      "Accident_Type_Pedestrian accident <-> Parish_Hanover: 0.022\n",
      "Accident_Type_Pedestrian accident <-> Parish_Kingston & St. Andrew: -0.058\n",
      "Accident_Type_Pedestrian accident <-> Parish_Manchester: -0.003\n",
      "Accident_Type_Pedestrian accident <-> Parish_Portland: 0.037\n",
      "Accident_Type_Pedestrian accident <-> Parish_St. Ann: 0.001\n",
      "Accident_Type_Pedestrian accident <-> Parish_St. Catherine: 0.019\n",
      "Accident_Type_Pedestrian accident <-> Parish_St. Elizabeth: -0.008\n",
      "Accident_Type_Pedestrian accident <-> Parish_St. James: 0.001\n",
      "Accident_Type_Pedestrian accident <-> Parish_St. Mary: 0.021\n",
      "Accident_Type_Pedestrian accident <-> Parish_St.Thomas: 0.030\n",
      "Accident_Type_Pedestrian accident <-> Parish_Trelawny: 0.003\n",
      "Accident_Type_Pedestrian accident <-> Parish_Westmoreland: 0.008\n",
      "Accident_Type_Pedestrian accident <-> Weather_Cloudy: -0.004\n",
      "Accident_Type_Pedestrian accident <-> Weather_Fog/Mist: -0.003\n",
      "Accident_Type_Pedestrian accident <-> Weather_Rain: -0.027\n",
      "Accident_Type_Pedestrian accident <-> Weather_Sunny: 0.026\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Dry + Asphalt: 0.023\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Dry +Unpaved: 0.019\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Gravel: -0.001\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Oily + Asphalt: -0.003\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Oily + Unpaved: 0.007\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Others: 0.012\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Wet + Asphalt: -0.028\n",
      "Accident_Type_Pedestrian accident <-> Road_Surface_Wet + Unpaved: -0.005\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Darkness: 0.005\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Dawn: -0.003\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Daylight: -0.007\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Dusk: 0.010\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Night/Lit: 0.001\n",
      "Accident_Type_Pedestrian accident <-> Light_Conditions_Others: -0.004\n",
      "Accident_Type_Pedestrian accident <-> Time_Period_Afternoon: 0.007\n",
      "Accident_Type_Pedestrian accident <-> Time_Period_Early Morning: -0.006\n",
      "Accident_Type_Pedestrian accident <-> Time_Period_Evening: 0.017\n",
      "Accident_Type_Pedestrian accident <-> Time_Period_Morning: -0.014\n",
      "Accident_Type_Pedestrian accident <-> Time_Period_Night: 0.002\n",
      "Accident_Type_Rear end accident <-> Accident_Type_Single accident: -0.168\n",
      "Accident_Type_Rear end accident <-> Accident_Type_Turning accident: -0.183\n",
      "Accident_Type_Rear end accident <-> Parish_Clarendon: -0.020\n",
      "Accident_Type_Rear end accident <-> Parish_Hanover: -0.020\n",
      "Accident_Type_Rear end accident <-> Parish_Kingston & St. Andrew: 0.042\n",
      "Accident_Type_Rear end accident <-> Parish_Manchester: -0.002\n",
      "Accident_Type_Rear end accident <-> Parish_Portland: -0.031\n",
      "Accident_Type_Rear end accident <-> Parish_St. Ann: -0.023\n",
      "Accident_Type_Rear end accident <-> Parish_St. Catherine: 0.041\n",
      "Accident_Type_Rear end accident <-> Parish_St. Elizabeth: -0.022\n",
      "Accident_Type_Rear end accident <-> Parish_St. James: 0.020\n",
      "Accident_Type_Rear end accident <-> Parish_St. Mary: -0.044\n",
      "Accident_Type_Rear end accident <-> Parish_St.Thomas: -0.013\n",
      "Accident_Type_Rear end accident <-> Parish_Trelawny: -0.025\n",
      "Accident_Type_Rear end accident <-> Parish_Westmoreland: -0.017\n",
      "Accident_Type_Rear end accident <-> Weather_Cloudy: -0.007\n",
      "Accident_Type_Rear end accident <-> Weather_Fog/Mist: -0.016\n",
      "Accident_Type_Rear end accident <-> Weather_Rain: -0.000\n",
      "Accident_Type_Rear end accident <-> Weather_Sunny: 0.007\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Dry + Asphalt: 0.007\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Dry +Unpaved: -0.016\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Gravel: -0.006\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Oily + Asphalt: -0.010\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Oily + Unpaved: -0.007\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Others: -0.007\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Wet + Asphalt: 0.000\n",
      "Accident_Type_Rear end accident <-> Road_Surface_Wet + Unpaved: -0.008\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Darkness: -0.057\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Dawn: -0.017\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Daylight: 0.063\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Dusk: -0.010\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Night/Lit: -0.023\n",
      "Accident_Type_Rear end accident <-> Light_Conditions_Others: 0.001\n",
      "Accident_Type_Rear end accident <-> Time_Period_Afternoon: 0.015\n",
      "Accident_Type_Rear end accident <-> Time_Period_Early Morning: -0.038\n",
      "Accident_Type_Rear end accident <-> Time_Period_Evening: -0.021\n",
      "Accident_Type_Rear end accident <-> Time_Period_Morning: 0.035\n",
      "Accident_Type_Rear end accident <-> Time_Period_Night: -0.026\n",
      "Accident_Type_Single accident <-> Accident_Type_Turning accident: -0.087\n",
      "Accident_Type_Single accident <-> Parish_Clarendon: 0.041\n",
      "Accident_Type_Single accident <-> Parish_Hanover: 0.031\n",
      "Accident_Type_Single accident <-> Parish_Kingston & St. Andrew: -0.156\n",
      "Accident_Type_Single accident <-> Parish_Manchester: 0.021\n",
      "Accident_Type_Single accident <-> Parish_Portland: 0.039\n",
      "Accident_Type_Single accident <-> Parish_St. Ann: 0.071\n",
      "Accident_Type_Single accident <-> Parish_St. Catherine: 0.007\n",
      "Accident_Type_Single accident <-> Parish_St. Elizabeth: 0.051\n",
      "Accident_Type_Single accident <-> Parish_St. James: -0.019\n",
      "Accident_Type_Single accident <-> Parish_St. Mary: 0.054\n",
      "Accident_Type_Single accident <-> Parish_St.Thomas: 0.019\n",
      "Accident_Type_Single accident <-> Parish_Trelawny: 0.054\n",
      "Accident_Type_Single accident <-> Parish_Westmoreland: 0.023\n",
      "Accident_Type_Single accident <-> Weather_Cloudy: 0.026\n",
      "Accident_Type_Single accident <-> Weather_Fog/Mist: 0.076\n",
      "Accident_Type_Single accident <-> Weather_Rain: 0.121\n",
      "Accident_Type_Single accident <-> Weather_Sunny: -0.130\n",
      "Accident_Type_Single accident <-> Road_Surface_Dry + Asphalt: -0.150\n",
      "Accident_Type_Single accident <-> Road_Surface_Dry +Unpaved: 0.022\n",
      "Accident_Type_Single accident <-> Road_Surface_Gravel: 0.015\n",
      "Accident_Type_Single accident <-> Road_Surface_Oily + Asphalt: 0.028\n",
      "Accident_Type_Single accident <-> Road_Surface_Oily + Unpaved: 0.016\n",
      "Accident_Type_Single accident <-> Road_Surface_Others: 0.005\n",
      "Accident_Type_Single accident <-> Road_Surface_Wet + Asphalt: 0.142\n",
      "Accident_Type_Single accident <-> Road_Surface_Wet + Unpaved: 0.021\n",
      "Accident_Type_Single accident <-> Light_Conditions_Darkness: 0.163\n",
      "Accident_Type_Single accident <-> Light_Conditions_Dawn: 0.050\n",
      "Accident_Type_Single accident <-> Light_Conditions_Daylight: -0.133\n",
      "Accident_Type_Single accident <-> Light_Conditions_Dusk: -0.006\n",
      "Accident_Type_Single accident <-> Light_Conditions_Night/Lit: 0.022\n",
      "Accident_Type_Single accident <-> Light_Conditions_Others: 0.004\n",
      "Accident_Type_Single accident <-> Time_Period_Afternoon: -0.055\n",
      "Accident_Type_Single accident <-> Time_Period_Early Morning: 0.139\n",
      "Accident_Type_Single accident <-> Time_Period_Evening: 0.005\n",
      "Accident_Type_Single accident <-> Time_Period_Morning: -0.053\n",
      "Accident_Type_Single accident <-> Time_Period_Night: 0.035\n",
      "Accident_Type_Turning accident <-> Parish_Clarendon: -0.029\n",
      "Accident_Type_Turning accident <-> Parish_Hanover: -0.006\n",
      "Accident_Type_Turning accident <-> Parish_Kingston & St. Andrew: 0.088\n",
      "Accident_Type_Turning accident <-> Parish_Manchester: -0.012\n",
      "Accident_Type_Turning accident <-> Parish_Portland: -0.028\n",
      "Accident_Type_Turning accident <-> Parish_St. Ann: -0.040\n",
      "Accident_Type_Turning accident <-> Parish_St. Catherine: -0.006\n",
      "Accident_Type_Turning accident <-> Parish_St. Elizabeth: -0.023\n",
      "Accident_Type_Turning accident <-> Parish_St. James: 0.011\n",
      "Accident_Type_Turning accident <-> Parish_St. Mary: -0.036\n",
      "Accident_Type_Turning accident <-> Parish_St.Thomas: -0.014\n",
      "Accident_Type_Turning accident <-> Parish_Trelawny: -0.011\n",
      "Accident_Type_Turning accident <-> Parish_Westmoreland: -0.012\n",
      "Accident_Type_Turning accident <-> Weather_Cloudy: -0.014\n",
      "Accident_Type_Turning accident <-> Weather_Fog/Mist: -0.008\n",
      "Accident_Type_Turning accident <-> Weather_Rain: -0.033\n",
      "Accident_Type_Turning accident <-> Weather_Sunny: 0.037\n",
      "Accident_Type_Turning accident <-> Road_Surface_Dry + Asphalt: 0.044\n",
      "Accident_Type_Turning accident <-> Road_Surface_Dry +Unpaved: -0.018\n",
      "Accident_Type_Turning accident <-> Road_Surface_Gravel: -0.001\n",
      "Accident_Type_Turning accident <-> Road_Surface_Oily + Asphalt: 0.000\n",
      "Accident_Type_Turning accident <-> Road_Surface_Oily + Unpaved: -0.002\n",
      "Accident_Type_Turning accident <-> Road_Surface_Others: -0.002\n",
      "Accident_Type_Turning accident <-> Road_Surface_Wet + Asphalt: -0.042\n",
      "Accident_Type_Turning accident <-> Road_Surface_Wet + Unpaved: -0.000\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Darkness: -0.030\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Dawn: -0.005\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Daylight: 0.002\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Dusk: -0.002\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Night/Lit: 0.027\n",
      "Accident_Type_Turning accident <-> Light_Conditions_Others: 0.003\n",
      "Accident_Type_Turning accident <-> Time_Period_Afternoon: -0.000\n",
      "Accident_Type_Turning accident <-> Time_Period_Early Morning: -0.022\n",
      "Accident_Type_Turning accident <-> Time_Period_Evening: 0.018\n",
      "Accident_Type_Turning accident <-> Time_Period_Morning: 0.003\n",
      "Accident_Type_Turning accident <-> Time_Period_Night: 0.001\n",
      "Parish_Clarendon <-> Parish_Hanover: -0.024\n",
      "Parish_Clarendon <-> Parish_Kingston & St. Andrew: -0.201\n",
      "Parish_Clarendon <-> Parish_Manchester: -0.068\n",
      "Parish_Clarendon <-> Parish_Portland: -0.042\n",
      "Parish_Clarendon <-> Parish_St. Ann: -0.087\n",
      "Parish_Clarendon <-> Parish_St. Catherine: -0.095\n",
      "Parish_Clarendon <-> Parish_St. Elizabeth: -0.042\n",
      "Parish_Clarendon <-> Parish_St. James: -0.060\n",
      "Parish_Clarendon <-> Parish_St. Mary: -0.049\n",
      "Parish_Clarendon <-> Parish_St.Thomas: -0.035\n",
      "Parish_Clarendon <-> Parish_Trelawny: -0.030\n",
      "Parish_Clarendon <-> Parish_Westmoreland: -0.039\n",
      "Parish_Clarendon <-> Weather_Cloudy: -0.012\n",
      "Parish_Clarendon <-> Weather_Fog/Mist: -0.003\n",
      "Parish_Clarendon <-> Weather_Rain: -0.010\n",
      "Parish_Clarendon <-> Weather_Sunny: 0.016\n",
      "Parish_Clarendon <-> Road_Surface_Dry + Asphalt: 0.005\n",
      "Parish_Clarendon <-> Road_Surface_Dry +Unpaved: 0.006\n",
      "Parish_Clarendon <-> Road_Surface_Gravel: 0.001\n",
      "Parish_Clarendon <-> Road_Surface_Oily + Asphalt: 0.001\n",
      "Parish_Clarendon <-> Road_Surface_Oily + Unpaved: 0.009\n",
      "Parish_Clarendon <-> Road_Surface_Others: -0.001\n",
      "Parish_Clarendon <-> Road_Surface_Wet + Asphalt: -0.007\n",
      "Parish_Clarendon <-> Road_Surface_Wet + Unpaved: -0.003\n",
      "Parish_Clarendon <-> Light_Conditions_Darkness: 0.035\n",
      "Parish_Clarendon <-> Light_Conditions_Dawn: 0.010\n",
      "Parish_Clarendon <-> Light_Conditions_Daylight: -0.022\n",
      "Parish_Clarendon <-> Light_Conditions_Dusk: 0.005\n",
      "Parish_Clarendon <-> Light_Conditions_Night/Lit: -0.008\n",
      "Parish_Clarendon <-> Light_Conditions_Others: -0.001\n",
      "Parish_Clarendon <-> Time_Period_Afternoon: 0.003\n",
      "Parish_Clarendon <-> Time_Period_Early Morning: 0.002\n",
      "Parish_Clarendon <-> Time_Period_Evening: 0.018\n",
      "Parish_Clarendon <-> Time_Period_Morning: -0.023\n",
      "Parish_Clarendon <-> Time_Period_Night: 0.016\n",
      "Parish_Hanover <-> Parish_Kingston & St. Andrew: -0.082\n",
      "Parish_Hanover <-> Parish_Manchester: -0.028\n",
      "Parish_Hanover <-> Parish_Portland: -0.017\n",
      "Parish_Hanover <-> Parish_St. Ann: -0.036\n",
      "Parish_Hanover <-> Parish_St. Catherine: -0.039\n",
      "Parish_Hanover <-> Parish_St. Elizabeth: -0.017\n",
      "Parish_Hanover <-> Parish_St. James: -0.024\n",
      "Parish_Hanover <-> Parish_St. Mary: -0.020\n",
      "Parish_Hanover <-> Parish_St.Thomas: -0.014\n",
      "Parish_Hanover <-> Parish_Trelawny: -0.012\n",
      "Parish_Hanover <-> Parish_Westmoreland: -0.016\n",
      "Parish_Hanover <-> Weather_Cloudy: 0.009\n",
      "Parish_Hanover <-> Weather_Fog/Mist: 0.001\n",
      "Parish_Hanover <-> Weather_Rain: 0.004\n",
      "Parish_Hanover <-> Weather_Sunny: -0.009\n",
      "Parish_Hanover <-> Road_Surface_Dry + Asphalt: -0.012\n",
      "Parish_Hanover <-> Road_Surface_Dry +Unpaved: 0.004\n",
      "Parish_Hanover <-> Road_Surface_Gravel: 0.006\n",
      "Parish_Hanover <-> Road_Surface_Oily + Asphalt: 0.003\n",
      "Parish_Hanover <-> Road_Surface_Oily + Unpaved: -0.002\n",
      "Parish_Hanover <-> Road_Surface_Others: -0.003\n",
      "Parish_Hanover <-> Road_Surface_Wet + Asphalt: 0.010\n",
      "Parish_Hanover <-> Road_Surface_Wet + Unpaved: 0.006\n",
      "Parish_Hanover <-> Light_Conditions_Darkness: 0.026\n",
      "Parish_Hanover <-> Light_Conditions_Dawn: -0.002\n",
      "Parish_Hanover <-> Light_Conditions_Daylight: -0.007\n",
      "Parish_Hanover <-> Light_Conditions_Dusk: 0.001\n",
      "Parish_Hanover <-> Light_Conditions_Night/Lit: -0.013\n",
      "Parish_Hanover <-> Light_Conditions_Others: -0.002\n",
      "Parish_Hanover <-> Time_Period_Afternoon: -0.004\n",
      "Parish_Hanover <-> Time_Period_Early Morning: 0.003\n",
      "Parish_Hanover <-> Time_Period_Evening: 0.008\n",
      "Parish_Hanover <-> Time_Period_Morning: -0.002\n",
      "Parish_Hanover <-> Time_Period_Night: -0.002\n",
      "Parish_Kingston & St. Andrew <-> Parish_Manchester: -0.229\n",
      "Parish_Kingston & St. Andrew <-> Parish_Portland: -0.141\n",
      "Parish_Kingston & St. Andrew <-> Parish_St. Ann: -0.294\n",
      "Parish_Kingston & St. Andrew <-> Parish_St. Catherine: -0.321\n",
      "Parish_Kingston & St. Andrew <-> Parish_St. Elizabeth: -0.140\n",
      "Parish_Kingston & St. Andrew <-> Parish_St. James: -0.202\n",
      "Parish_Kingston & St. Andrew <-> Parish_St. Mary: -0.166\n",
      "Parish_Kingston & St. Andrew <-> Parish_St.Thomas: -0.119\n",
      "Parish_Kingston & St. Andrew <-> Parish_Trelawny: -0.102\n",
      "Parish_Kingston & St. Andrew <-> Parish_Westmoreland: -0.130\n",
      "Parish_Kingston & St. Andrew <-> Weather_Cloudy: -0.056\n",
      "Parish_Kingston & St. Andrew <-> Weather_Fog/Mist: -0.038\n",
      "Parish_Kingston & St. Andrew <-> Weather_Rain: -0.122\n",
      "Parish_Kingston & St. Andrew <-> Weather_Sunny: 0.141\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Dry + Asphalt: 0.145\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Dry +Unpaved: -0.034\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Gravel: -0.002\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Oily + Asphalt: -0.007\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Oily + Unpaved: -0.009\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Others: 0.013\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Wet + Asphalt: -0.141\n",
      "Parish_Kingston & St. Andrew <-> Road_Surface_Wet + Unpaved: -0.015\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Darkness: -0.153\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Dawn: -0.017\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Daylight: 0.078\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Dusk: -0.006\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Night/Lit: 0.039\n",
      "Parish_Kingston & St. Andrew <-> Light_Conditions_Others: -0.004\n",
      "Parish_Kingston & St. Andrew <-> Time_Period_Afternoon: 0.033\n",
      "Parish_Kingston & St. Andrew <-> Time_Period_Early Morning: -0.061\n",
      "Parish_Kingston & St. Andrew <-> Time_Period_Evening: -0.029\n",
      "Parish_Kingston & St. Andrew <-> Time_Period_Morning: 0.035\n",
      "Parish_Kingston & St. Andrew <-> Time_Period_Night: -0.026\n",
      "Parish_Manchester <-> Parish_Portland: -0.048\n",
      "Parish_Manchester <-> Parish_St. Ann: -0.100\n",
      "Parish_Manchester <-> Parish_St. Catherine: -0.109\n",
      "Parish_Manchester <-> Parish_St. Elizabeth: -0.047\n",
      "Parish_Manchester <-> Parish_St. James: -0.069\n",
      "Parish_Manchester <-> Parish_St. Mary: -0.056\n",
      "Parish_Manchester <-> Parish_St.Thomas: -0.040\n",
      "Parish_Manchester <-> Parish_Trelawny: -0.034\n",
      "Parish_Manchester <-> Parish_Westmoreland: -0.044\n",
      "Parish_Manchester <-> Weather_Cloudy: -0.001\n",
      "Parish_Manchester <-> Weather_Fog/Mist: 0.021\n",
      "Parish_Manchester <-> Weather_Rain: 0.102\n",
      "Parish_Manchester <-> Weather_Sunny: -0.089\n",
      "Parish_Manchester <-> Road_Surface_Dry + Asphalt: -0.088\n",
      "Parish_Manchester <-> Road_Surface_Dry +Unpaved: -0.011\n",
      "Parish_Manchester <-> Road_Surface_Gravel: -0.004\n",
      "Parish_Manchester <-> Road_Surface_Oily + Asphalt: 0.003\n",
      "Parish_Manchester <-> Road_Surface_Oily + Unpaved: -0.001\n",
      "Parish_Manchester <-> Road_Surface_Others: -0.007\n",
      "Parish_Manchester <-> Road_Surface_Wet + Asphalt: 0.094\n",
      "Parish_Manchester <-> Road_Surface_Wet + Unpaved: 0.003\n",
      "Parish_Manchester <-> Light_Conditions_Darkness: 0.000\n",
      "Parish_Manchester <-> Light_Conditions_Dawn: -0.004\n",
      "Parish_Manchester <-> Light_Conditions_Daylight: -0.002\n",
      "Parish_Manchester <-> Light_Conditions_Dusk: 0.022\n",
      "Parish_Manchester <-> Light_Conditions_Night/Lit: -0.008\n",
      "Parish_Manchester <-> Light_Conditions_Others: -0.001\n",
      "Parish_Manchester <-> Time_Period_Afternoon: 0.026\n",
      "Parish_Manchester <-> Time_Period_Early Morning: -0.014\n",
      "Parish_Manchester <-> Time_Period_Evening: 0.001\n",
      "Parish_Manchester <-> Time_Period_Morning: -0.026\n",
      "Parish_Manchester <-> Time_Period_Night: 0.017\n",
      "Parish_Portland <-> Parish_St. Ann: -0.061\n",
      "Parish_Portland <-> Parish_St. Catherine: -0.067\n",
      "Parish_Portland <-> Parish_St. Elizabeth: -0.029\n",
      "Parish_Portland <-> Parish_St. James: -0.042\n",
      "Parish_Portland <-> Parish_St. Mary: -0.035\n",
      "Parish_Portland <-> Parish_St.Thomas: -0.025\n",
      "Parish_Portland <-> Parish_Trelawny: -0.021\n",
      "Parish_Portland <-> Parish_Westmoreland: -0.027\n",
      "Parish_Portland <-> Weather_Cloudy: 0.019\n",
      "Parish_Portland <-> Weather_Fog/Mist: -0.003\n",
      "Parish_Portland <-> Weather_Rain: 0.017\n",
      "Parish_Portland <-> Weather_Sunny: -0.024\n",
      "Parish_Portland <-> Road_Surface_Dry + Asphalt: -0.030\n",
      "Parish_Portland <-> Road_Surface_Dry +Unpaved: 0.037\n",
      "Parish_Portland <-> Road_Surface_Gravel: 0.011\n",
      "Parish_Portland <-> Road_Surface_Oily + Asphalt: 0.002\n",
      "Parish_Portland <-> Road_Surface_Oily + Unpaved: 0.007\n",
      "Parish_Portland <-> Road_Surface_Others: 0.003\n",
      "Parish_Portland <-> Road_Surface_Wet + Asphalt: 0.019\n",
      "Parish_Portland <-> Road_Surface_Wet + Unpaved: 0.022\n",
      "Parish_Portland <-> Light_Conditions_Darkness: 0.017\n",
      "Parish_Portland <-> Light_Conditions_Dawn: 0.004\n",
      "Parish_Portland <-> Light_Conditions_Daylight: -0.001\n",
      "Parish_Portland <-> Light_Conditions_Dusk: -0.007\n",
      "Parish_Portland <-> Light_Conditions_Night/Lit: -0.010\n",
      "Parish_Portland <-> Light_Conditions_Others: -0.003\n",
      "Parish_Portland <-> Time_Period_Afternoon: 0.007\n",
      "Parish_Portland <-> Time_Period_Early Morning: 0.017\n",
      "Parish_Portland <-> Time_Period_Evening: -0.006\n",
      "Parish_Portland <-> Time_Period_Morning: -0.009\n",
      "Parish_Portland <-> Time_Period_Night: -0.009\n",
      "Parish_St. Ann <-> Parish_St. Catherine: -0.140\n",
      "Parish_St. Ann <-> Parish_St. Elizabeth: -0.061\n",
      "Parish_St. Ann <-> Parish_St. James: -0.088\n",
      "Parish_St. Ann <-> Parish_St. Mary: -0.072\n",
      "Parish_St. Ann <-> Parish_St.Thomas: -0.052\n",
      "Parish_St. Ann <-> Parish_Trelawny: -0.044\n",
      "Parish_St. Ann <-> Parish_Westmoreland: -0.057\n",
      "Parish_St. Ann <-> Weather_Cloudy: 0.095\n",
      "Parish_St. Ann <-> Weather_Fog/Mist: 0.036\n",
      "Parish_St. Ann <-> Weather_Rain: 0.101\n",
      "Parish_St. Ann <-> Weather_Sunny: -0.145\n",
      "Parish_St. Ann <-> Road_Surface_Dry + Asphalt: -0.113\n",
      "Parish_St. Ann <-> Road_Surface_Dry +Unpaved: 0.011\n",
      "Parish_St. Ann <-> Road_Surface_Gravel: 0.003\n",
      "Parish_St. Ann <-> Road_Surface_Oily + Asphalt: 0.006\n",
      "Parish_St. Ann <-> Road_Surface_Oily + Unpaved: 0.004\n",
      "Parish_St. Ann <-> Road_Surface_Others: -0.006\n",
      "Parish_St. Ann <-> Road_Surface_Wet + Asphalt: 0.115\n",
      "Parish_St. Ann <-> Road_Surface_Wet + Unpaved: -0.001\n",
      "Parish_St. Ann <-> Light_Conditions_Darkness: 0.085\n",
      "Parish_St. Ann <-> Light_Conditions_Dawn: -0.009\n",
      "Parish_St. Ann <-> Light_Conditions_Daylight: -0.031\n",
      "Parish_St. Ann <-> Light_Conditions_Dusk: 0.022\n",
      "Parish_St. Ann <-> Light_Conditions_Night/Lit: -0.042\n",
      "Parish_St. Ann <-> Light_Conditions_Others: 0.004\n",
      "Parish_St. Ann <-> Time_Period_Afternoon: 0.014\n",
      "Parish_St. Ann <-> Time_Period_Early Morning: -0.014\n",
      "Parish_St. Ann <-> Time_Period_Evening: 0.021\n",
      "Parish_St. Ann <-> Time_Period_Morning: -0.031\n",
      "Parish_St. Ann <-> Time_Period_Night: 0.025\n",
      "Parish_St. Catherine <-> Parish_St. Elizabeth: -0.066\n",
      "Parish_St. Catherine <-> Parish_St. James: -0.096\n",
      "Parish_St. Catherine <-> Parish_St. Mary: -0.079\n",
      "Parish_St. Catherine <-> Parish_St.Thomas: -0.057\n",
      "Parish_St. Catherine <-> Parish_Trelawny: -0.048\n",
      "Parish_St. Catherine <-> Parish_Westmoreland: -0.062\n",
      "Parish_St. Catherine <-> Weather_Cloudy: -0.016\n",
      "Parish_St. Catherine <-> Weather_Fog/Mist: -0.004\n",
      "Parish_St. Catherine <-> Weather_Rain: -0.025\n",
      "Parish_St. Catherine <-> Weather_Sunny: 0.031\n",
      "Parish_St. Catherine <-> Road_Surface_Dry + Asphalt: 0.032\n",
      "Parish_St. Catherine <-> Road_Surface_Dry +Unpaved: -0.002\n",
      "Parish_St. Catherine <-> Road_Surface_Gravel: -0.000\n",
      "Parish_St. Catherine <-> Road_Surface_Oily + Asphalt: 0.001\n",
      "Parish_St. Catherine <-> Road_Surface_Oily + Unpaved: 0.001\n",
      "Parish_St. Catherine <-> Road_Surface_Others: -0.002\n",
      "Parish_St. Catherine <-> Road_Surface_Wet + Asphalt: -0.032\n",
      "Parish_St. Catherine <-> Road_Surface_Wet + Unpaved: -0.006\n",
      "Parish_St. Catherine <-> Light_Conditions_Darkness: 0.038\n",
      "Parish_St. Catherine <-> Light_Conditions_Dawn: 0.021\n",
      "Parish_St. Catherine <-> Light_Conditions_Daylight: -0.048\n",
      "Parish_St. Catherine <-> Light_Conditions_Dusk: -0.006\n",
      "Parish_St. Catherine <-> Light_Conditions_Night/Lit: 0.028\n",
      "Parish_St. Catherine <-> Light_Conditions_Others: -0.002\n",
      "Parish_St. Catherine <-> Time_Period_Afternoon: -0.036\n",
      "Parish_St. Catherine <-> Time_Period_Early Morning: 0.014\n",
      "Parish_St. Catherine <-> Time_Period_Evening: 0.034\n",
      "Parish_St. Catherine <-> Time_Period_Morning: -0.003\n",
      "Parish_St. Catherine <-> Time_Period_Night: 0.020\n",
      "Parish_St. Elizabeth <-> Parish_St. James: -0.042\n",
      "Parish_St. Elizabeth <-> Parish_St. Mary: -0.034\n",
      "Parish_St. Elizabeth <-> Parish_St.Thomas: -0.025\n",
      "Parish_St. Elizabeth <-> Parish_Trelawny: -0.021\n",
      "Parish_St. Elizabeth <-> Parish_Westmoreland: -0.027\n",
      "Parish_St. Elizabeth <-> Weather_Cloudy: -0.011\n",
      "Parish_St. Elizabeth <-> Weather_Fog/Mist: 0.012\n",
      "Parish_St. Elizabeth <-> Weather_Rain: 0.023\n",
      "Parish_St. Elizabeth <-> Weather_Sunny: -0.015\n",
      "Parish_St. Elizabeth <-> Road_Surface_Dry + Asphalt: -0.016\n",
      "Parish_St. Elizabeth <-> Road_Surface_Dry +Unpaved: -0.003\n",
      "Parish_St. Elizabeth <-> Road_Surface_Gravel: -0.005\n",
      "Parish_St. Elizabeth <-> Road_Surface_Oily + Asphalt: -0.001\n",
      "Parish_St. Elizabeth <-> Road_Surface_Oily + Unpaved: -0.003\n",
      "Parish_St. Elizabeth <-> Road_Surface_Others: 0.001\n",
      "Parish_St. Elizabeth <-> Road_Surface_Wet + Asphalt: 0.019\n",
      "Parish_St. Elizabeth <-> Road_Surface_Wet + Unpaved: -0.003\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Darkness: 0.025\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Dawn: -0.001\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Daylight: -0.002\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Dusk: -0.001\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Night/Lit: -0.018\n",
      "Parish_St. Elizabeth <-> Light_Conditions_Others: -0.003\n",
      "Parish_St. Elizabeth <-> Time_Period_Afternoon: 0.013\n",
      "Parish_St. Elizabeth <-> Time_Period_Early Morning: -0.005\n",
      "Parish_St. Elizabeth <-> Time_Period_Evening: 0.004\n",
      "Parish_St. Elizabeth <-> Time_Period_Morning: -0.013\n",
      "Parish_St. Elizabeth <-> Time_Period_Night: 0.002\n",
      "Parish_St. James <-> Parish_St. Mary: -0.050\n",
      "Parish_St. James <-> Parish_St.Thomas: -0.036\n",
      "Parish_St. James <-> Parish_Trelawny: -0.030\n",
      "Parish_St. James <-> Parish_Westmoreland: -0.039\n",
      "Parish_St. James <-> Weather_Cloudy: -0.001\n",
      "Parish_St. James <-> Weather_Fog/Mist: 0.001\n",
      "Parish_St. James <-> Weather_Rain: 0.004\n",
      "Parish_St. James <-> Weather_Sunny: -0.003\n",
      "Parish_St. James <-> Road_Surface_Dry + Asphalt: -0.008\n",
      "Parish_St. James <-> Road_Surface_Dry +Unpaved: -0.003\n",
      "Parish_St. James <-> Road_Surface_Gravel: -0.003\n",
      "Parish_St. James <-> Road_Surface_Oily + Asphalt: -0.005\n",
      "Parish_St. James <-> Road_Surface_Oily + Unpaved: 0.003\n",
      "Parish_St. James <-> Road_Surface_Others: -0.004\n",
      "Parish_St. James <-> Road_Surface_Wet + Asphalt: 0.011\n",
      "Parish_St. James <-> Road_Surface_Wet + Unpaved: -0.004\n",
      "Parish_St. James <-> Light_Conditions_Darkness: -0.013\n",
      "Parish_St. James <-> Light_Conditions_Dawn: 0.006\n",
      "Parish_St. James <-> Light_Conditions_Daylight: 0.009\n",
      "Parish_St. James <-> Light_Conditions_Dusk: -0.028\n",
      "Parish_St. James <-> Light_Conditions_Night/Lit: 0.013\n",
      "Parish_St. James <-> Light_Conditions_Others: 0.006\n",
      "Parish_St. James <-> Time_Period_Afternoon: -0.045\n",
      "Parish_St. James <-> Time_Period_Early Morning: 0.075\n",
      "Parish_St. James <-> Time_Period_Evening: -0.042\n",
      "Parish_St. James <-> Time_Period_Morning: 0.042\n",
      "Parish_St. James <-> Time_Period_Night: -0.037\n",
      "Parish_St. Mary <-> Parish_St.Thomas: -0.029\n",
      "Parish_St. Mary <-> Parish_Trelawny: -0.025\n",
      "Parish_St. Mary <-> Parish_Westmoreland: -0.032\n",
      "Parish_St. Mary <-> Weather_Cloudy: 0.008\n",
      "Parish_St. Mary <-> Weather_Fog/Mist: 0.006\n",
      "Parish_St. Mary <-> Weather_Rain: 0.012\n",
      "Parish_St. Mary <-> Weather_Sunny: -0.016\n",
      "Parish_St. Mary <-> Road_Surface_Dry + Asphalt: -0.041\n",
      "Parish_St. Mary <-> Road_Surface_Dry +Unpaved: 0.036\n",
      "Parish_St. Mary <-> Road_Surface_Gravel: 0.001\n",
      "Parish_St. Mary <-> Road_Surface_Oily + Asphalt: 0.001\n",
      "Parish_St. Mary <-> Road_Surface_Oily + Unpaved: 0.001\n",
      "Parish_St. Mary <-> Road_Surface_Others: -0.005\n",
      "Parish_St. Mary <-> Road_Surface_Wet + Asphalt: 0.032\n",
      "Parish_St. Mary <-> Road_Surface_Wet + Unpaved: 0.031\n",
      "Parish_St. Mary <-> Light_Conditions_Darkness: 0.047\n",
      "Parish_St. Mary <-> Light_Conditions_Dawn: 0.011\n",
      "Parish_St. Mary <-> Light_Conditions_Daylight: -0.026\n",
      "Parish_St. Mary <-> Light_Conditions_Dusk: 0.005\n",
      "Parish_St. Mary <-> Light_Conditions_Night/Lit: -0.013\n",
      "Parish_St. Mary <-> Light_Conditions_Others: 0.001\n",
      "Parish_St. Mary <-> Time_Period_Afternoon: -0.022\n",
      "Parish_St. Mary <-> Time_Period_Early Morning: 0.022\n",
      "Parish_St. Mary <-> Time_Period_Evening: 0.005\n",
      "Parish_St. Mary <-> Time_Period_Morning: 0.002\n",
      "Parish_St. Mary <-> Time_Period_Night: 0.005\n",
      "Parish_St.Thomas <-> Parish_Trelawny: -0.018\n",
      "Parish_St.Thomas <-> Parish_Westmoreland: -0.023\n",
      "Parish_St.Thomas <-> Weather_Cloudy: 0.005\n",
      "Parish_St.Thomas <-> Weather_Fog/Mist: -0.005\n",
      "Parish_St.Thomas <-> Weather_Rain: -0.013\n",
      "Parish_St.Thomas <-> Weather_Sunny: 0.009\n",
      "Parish_St.Thomas <-> Road_Surface_Dry + Asphalt: -0.000\n",
      "Parish_St.Thomas <-> Road_Surface_Dry +Unpaved: 0.014\n",
      "Parish_St.Thomas <-> Road_Surface_Gravel: -0.001\n",
      "Parish_St.Thomas <-> Road_Surface_Oily + Asphalt: -0.003\n",
      "Parish_St.Thomas <-> Road_Surface_Oily + Unpaved: 0.003\n",
      "Parish_St.Thomas <-> Road_Surface_Others: 0.000\n",
      "Parish_St.Thomas <-> Road_Surface_Wet + Asphalt: -0.002\n",
      "Parish_St.Thomas <-> Road_Surface_Wet + Unpaved: 0.001\n",
      "Parish_St.Thomas <-> Light_Conditions_Darkness: 0.027\n",
      "Parish_St.Thomas <-> Light_Conditions_Dawn: 0.004\n",
      "Parish_St.Thomas <-> Light_Conditions_Daylight: -0.004\n",
      "Parish_St.Thomas <-> Light_Conditions_Dusk: -0.008\n",
      "Parish_St.Thomas <-> Light_Conditions_Night/Lit: -0.015\n",
      "Parish_St.Thomas <-> Light_Conditions_Others: -0.002\n",
      "Parish_St.Thomas <-> Time_Period_Afternoon: -0.028\n",
      "Parish_St.Thomas <-> Time_Period_Early Morning: 0.045\n",
      "Parish_St.Thomas <-> Time_Period_Evening: -0.008\n",
      "Parish_St.Thomas <-> Time_Period_Morning: 0.011\n",
      "Parish_St.Thomas <-> Time_Period_Night: -0.011\n",
      "Parish_Trelawny <-> Parish_Westmoreland: -0.020\n",
      "Parish_Trelawny <-> Weather_Cloudy: 0.012\n",
      "Parish_Trelawny <-> Weather_Fog/Mist: 0.011\n",
      "Parish_Trelawny <-> Weather_Rain: 0.020\n",
      "Parish_Trelawny <-> Weather_Sunny: -0.025\n",
      "Parish_Trelawny <-> Road_Surface_Dry + Asphalt: -0.026\n",
      "Parish_Trelawny <-> Road_Surface_Dry +Unpaved: 0.003\n",
      "Parish_Trelawny <-> Road_Surface_Gravel: 0.004\n",
      "Parish_Trelawny <-> Road_Surface_Oily + Asphalt: 0.008\n",
      "Parish_Trelawny <-> Road_Surface_Oily + Unpaved: -0.002\n",
      "Parish_Trelawny <-> Road_Surface_Others: -0.004\n",
      "Parish_Trelawny <-> Road_Surface_Wet + Asphalt: 0.025\n",
      "Parish_Trelawny <-> Road_Surface_Wet + Unpaved: 0.005\n",
      "Parish_Trelawny <-> Light_Conditions_Darkness: 0.035\n",
      "Parish_Trelawny <-> Light_Conditions_Dawn: -0.004\n",
      "Parish_Trelawny <-> Light_Conditions_Daylight: -0.000\n",
      "Parish_Trelawny <-> Light_Conditions_Dusk: -0.007\n",
      "Parish_Trelawny <-> Light_Conditions_Night/Lit: -0.025\n",
      "Parish_Trelawny <-> Light_Conditions_Others: 0.004\n",
      "Parish_Trelawny <-> Time_Period_Afternoon: -0.003\n",
      "Parish_Trelawny <-> Time_Period_Early Morning: 0.005\n",
      "Parish_Trelawny <-> Time_Period_Evening: -0.002\n",
      "Parish_Trelawny <-> Time_Period_Morning: 0.002\n",
      "Parish_Trelawny <-> Time_Period_Night: -0.002\n",
      "Parish_Westmoreland <-> Weather_Cloudy: -0.000\n",
      "Parish_Westmoreland <-> Weather_Fog/Mist: 0.001\n",
      "Parish_Westmoreland <-> Weather_Rain: 0.010\n",
      "Parish_Westmoreland <-> Weather_Sunny: -0.008\n",
      "Parish_Westmoreland <-> Road_Surface_Dry + Asphalt: -0.014\n",
      "Parish_Westmoreland <-> Road_Surface_Dry +Unpaved: 0.002\n",
      "Parish_Westmoreland <-> Road_Surface_Gravel: -0.002\n",
      "Parish_Westmoreland <-> Road_Surface_Oily + Asphalt: -0.000\n",
      "Parish_Westmoreland <-> Road_Surface_Oily + Unpaved: -0.002\n",
      "Parish_Westmoreland <-> Road_Surface_Others: 0.001\n",
      "Parish_Westmoreland <-> Road_Surface_Wet + Asphalt: 0.015\n",
      "Parish_Westmoreland <-> Road_Surface_Wet + Unpaved: -0.004\n",
      "Parish_Westmoreland <-> Light_Conditions_Darkness: 0.024\n",
      "Parish_Westmoreland <-> Light_Conditions_Dawn: -0.008\n",
      "Parish_Westmoreland <-> Light_Conditions_Daylight: -0.013\n",
      "Parish_Westmoreland <-> Light_Conditions_Dusk: -0.002\n",
      "Parish_Westmoreland <-> Light_Conditions_Night/Lit: 0.000\n",
      "Parish_Westmoreland <-> Light_Conditions_Others: 0.007\n",
      "Parish_Westmoreland <-> Time_Period_Afternoon: 0.003\n",
      "Parish_Westmoreland <-> Time_Period_Early Morning: 0.011\n",
      "Parish_Westmoreland <-> Time_Period_Evening: 0.008\n",
      "Parish_Westmoreland <-> Time_Period_Morning: -0.018\n",
      "Parish_Westmoreland <-> Time_Period_Night: 0.007\n",
      "Weather_Cloudy <-> Weather_Fog/Mist: -0.010\n",
      "Weather_Cloudy <-> Weather_Rain: -0.049\n",
      "\u001b[1mWeather_Cloudy <-> Weather_Sunny: -0.515\u001b[0m\n",
      "Weather_Cloudy <-> Road_Surface_Dry + Asphalt: -0.245\n",
      "Weather_Cloudy <-> Road_Surface_Dry +Unpaved: -0.005\n",
      "Weather_Cloudy <-> Road_Surface_Gravel: 0.005\n",
      "Weather_Cloudy <-> Road_Surface_Oily + Asphalt: 0.002\n",
      "Weather_Cloudy <-> Road_Surface_Oily + Unpaved: 0.002\n",
      "Weather_Cloudy <-> Road_Surface_Others: -0.002\n",
      "Weather_Cloudy <-> Road_Surface_Wet + Asphalt: 0.253\n",
      "Weather_Cloudy <-> Road_Surface_Wet + Unpaved: 0.017\n",
      "Weather_Cloudy <-> Light_Conditions_Darkness: 0.018\n",
      "Weather_Cloudy <-> Light_Conditions_Dawn: 0.003\n",
      "Weather_Cloudy <-> Light_Conditions_Daylight: -0.009\n",
      "Weather_Cloudy <-> Light_Conditions_Dusk: 0.019\n",
      "Weather_Cloudy <-> Light_Conditions_Night/Lit: -0.016\n",
      "Weather_Cloudy <-> Light_Conditions_Others: 0.006\n",
      "Weather_Cloudy <-> Time_Period_Afternoon: 0.019\n",
      "Weather_Cloudy <-> Time_Period_Early Morning: 0.006\n",
      "Weather_Cloudy <-> Time_Period_Evening: -0.002\n",
      "Weather_Cloudy <-> Time_Period_Morning: -0.022\n",
      "Weather_Cloudy <-> Time_Period_Night: 0.001\n",
      "Weather_Fog/Mist <-> Weather_Rain: -0.015\n",
      "Weather_Fog/Mist <-> Weather_Sunny: -0.162\n",
      "Weather_Fog/Mist <-> Road_Surface_Dry + Asphalt: -0.078\n",
      "Weather_Fog/Mist <-> Road_Surface_Dry +Unpaved: -0.004\n",
      "Weather_Fog/Mist <-> Road_Surface_Gravel: 0.030\n",
      "Weather_Fog/Mist <-> Road_Surface_Oily + Asphalt: 0.005\n",
      "Weather_Fog/Mist <-> Road_Surface_Oily + Unpaved: -0.001\n",
      "Weather_Fog/Mist <-> Road_Surface_Others: 0.004\n",
      "Weather_Fog/Mist <-> Road_Surface_Wet + Asphalt: 0.076\n",
      "Weather_Fog/Mist <-> Road_Surface_Wet + Unpaved: 0.017\n",
      "Weather_Fog/Mist <-> Light_Conditions_Darkness: 0.050\n",
      "Weather_Fog/Mist <-> Light_Conditions_Dawn: 0.029\n",
      "Weather_Fog/Mist <-> Light_Conditions_Daylight: -0.043\n",
      "Weather_Fog/Mist <-> Light_Conditions_Dusk: 0.006\n",
      "Weather_Fog/Mist <-> Light_Conditions_Night/Lit: 0.001\n",
      "Weather_Fog/Mist <-> Light_Conditions_Others: -0.001\n",
      "Weather_Fog/Mist <-> Time_Period_Afternoon: -0.019\n",
      "Weather_Fog/Mist <-> Time_Period_Early Morning: 0.045\n",
      "Weather_Fog/Mist <-> Time_Period_Evening: -0.002\n",
      "Weather_Fog/Mist <-> Time_Period_Morning: -0.012\n",
      "Weather_Fog/Mist <-> Time_Period_Night: 0.009\n",
      "\u001b[1mWeather_Rain <-> Weather_Sunny: -0.812\u001b[0m\n",
      "\u001b[1mWeather_Rain <-> Road_Surface_Dry + Asphalt: -0.697\u001b[0m\n",
      "Weather_Rain <-> Road_Surface_Dry +Unpaved: -0.018\n",
      "Weather_Rain <-> Road_Surface_Gravel: -0.004\n",
      "Weather_Rain <-> Road_Surface_Oily + Asphalt: 0.005\n",
      "Weather_Rain <-> Road_Surface_Oily + Unpaved: 0.002\n",
      "Weather_Rain <-> Road_Surface_Others: -0.008\n",
      "\u001b[1mWeather_Rain <-> Road_Surface_Wet + Asphalt: 0.720\u001b[0m\n",
      "Weather_Rain <-> Road_Surface_Wet + Unpaved: 0.065\n",
      "Weather_Rain <-> Light_Conditions_Darkness: 0.049\n",
      "Weather_Rain <-> Light_Conditions_Dawn: 0.020\n",
      "Weather_Rain <-> Light_Conditions_Daylight: -0.032\n",
      "Weather_Rain <-> Light_Conditions_Dusk: 0.019\n",
      "Weather_Rain <-> Light_Conditions_Night/Lit: -0.018\n",
      "Weather_Rain <-> Light_Conditions_Others: 0.001\n",
      "Weather_Rain <-> Time_Period_Afternoon: 0.041\n",
      "Weather_Rain <-> Time_Period_Early Morning: 0.027\n",
      "Weather_Rain <-> Time_Period_Evening: -0.001\n",
      "Weather_Rain <-> Time_Period_Morning: -0.061\n",
      "Weather_Rain <-> Time_Period_Night: 0.008\n",
      "\u001b[1mWeather_Sunny <-> Road_Surface_Dry + Asphalt: 0.738\u001b[0m\n",
      "Weather_Sunny <-> Road_Surface_Dry +Unpaved: 0.018\n",
      "Weather_Sunny <-> Road_Surface_Gravel: -0.005\n",
      "Weather_Sunny <-> Road_Surface_Oily + Asphalt: -0.006\n",
      "Weather_Sunny <-> Road_Surface_Oily + Unpaved: -0.002\n",
      "Weather_Sunny <-> Road_Surface_Others: 0.007\n",
      "\u001b[1mWeather_Sunny <-> Road_Surface_Wet + Asphalt: -0.761\u001b[0m\n",
      "Weather_Sunny <-> Road_Surface_Wet + Unpaved: -0.067\n",
      "Weather_Sunny <-> Light_Conditions_Darkness: -0.060\n",
      "Weather_Sunny <-> Light_Conditions_Dawn: -0.024\n",
      "Weather_Sunny <-> Light_Conditions_Daylight: 0.040\n",
      "Weather_Sunny <-> Light_Conditions_Dusk: -0.028\n",
      "Weather_Sunny <-> Light_Conditions_Night/Lit: 0.023\n",
      "Weather_Sunny <-> Light_Conditions_Others: -0.004\n",
      "Weather_Sunny <-> Time_Period_Afternoon: -0.042\n",
      "Weather_Sunny <-> Time_Period_Early Morning: -0.034\n",
      "Weather_Sunny <-> Time_Period_Evening: 0.002\n",
      "Weather_Sunny <-> Time_Period_Morning: 0.066\n",
      "Weather_Sunny <-> Time_Period_Night: -0.009\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Dry +Unpaved: -0.171\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Gravel: -0.069\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Oily + Asphalt: -0.138\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Oily + Unpaved: -0.039\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Others: -0.086\n",
      "\u001b[1mRoad_Surface_Dry + Asphalt <-> Road_Surface_Wet + Asphalt: -0.950\u001b[0m\n",
      "Road_Surface_Dry + Asphalt <-> Road_Surface_Wet + Unpaved: -0.113\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Darkness: -0.066\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Dawn: -0.019\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Daylight: 0.044\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Dusk: -0.021\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Night/Lit: 0.017\n",
      "Road_Surface_Dry + Asphalt <-> Light_Conditions_Others: -0.007\n",
      "Road_Surface_Dry + Asphalt <-> Time_Period_Afternoon: -0.029\n",
      "Road_Surface_Dry + Asphalt <-> Time_Period_Early Morning: -0.037\n",
      "Road_Surface_Dry + Asphalt <-> Time_Period_Evening: -0.002\n",
      "Road_Surface_Dry + Asphalt <-> Time_Period_Morning: 0.058\n",
      "Road_Surface_Dry + Asphalt <-> Time_Period_Night: -0.011\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Gravel: -0.002\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Oily + Asphalt: -0.004\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Oily + Unpaved: -0.001\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Others: -0.002\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Wet + Asphalt: -0.025\n",
      "Road_Surface_Dry +Unpaved <-> Road_Surface_Wet + Unpaved: -0.003\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Darkness: 0.019\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Dawn: -0.006\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Daylight: -0.007\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Dusk: -0.004\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Night/Lit: -0.003\n",
      "Road_Surface_Dry +Unpaved <-> Light_Conditions_Others: -0.001\n",
      "Road_Surface_Dry +Unpaved <-> Time_Period_Afternoon: -0.006\n",
      "Road_Surface_Dry +Unpaved <-> Time_Period_Early Morning: 0.009\n",
      "Road_Surface_Dry +Unpaved <-> Time_Period_Evening: 0.005\n",
      "Road_Surface_Dry +Unpaved <-> Time_Period_Morning: -0.002\n",
      "Road_Surface_Dry +Unpaved <-> Time_Period_Night: -0.002\n",
      "Road_Surface_Gravel <-> Road_Surface_Oily + Asphalt: -0.001\n",
      "Road_Surface_Gravel <-> Road_Surface_Oily + Unpaved: -0.000\n",
      "Road_Surface_Gravel <-> Road_Surface_Others: -0.001\n",
      "Road_Surface_Gravel <-> Road_Surface_Wet + Asphalt: -0.010\n",
      "Road_Surface_Gravel <-> Road_Surface_Wet + Unpaved: -0.001\n",
      "Road_Surface_Gravel <-> Light_Conditions_Darkness: 0.008\n",
      "Road_Surface_Gravel <-> Light_Conditions_Dawn: 0.005\n",
      "Road_Surface_Gravel <-> Light_Conditions_Daylight: -0.011\n",
      "Road_Surface_Gravel <-> Light_Conditions_Dusk: -0.005\n",
      "Road_Surface_Gravel <-> Light_Conditions_Night/Lit: 0.008\n",
      "Road_Surface_Gravel <-> Light_Conditions_Others: 0.027\n",
      "Road_Surface_Gravel <-> Time_Period_Afternoon: -0.007\n",
      "Road_Surface_Gravel <-> Time_Period_Early Morning: 0.023\n",
      "Road_Surface_Gravel <-> Time_Period_Evening: -0.002\n",
      "Road_Surface_Gravel <-> Time_Period_Morning: -0.003\n",
      "Road_Surface_Gravel <-> Time_Period_Night: -0.006\n",
      "Road_Surface_Oily + Asphalt <-> Road_Surface_Oily + Unpaved: -0.001\n",
      "Road_Surface_Oily + Asphalt <-> Road_Surface_Others: -0.002\n",
      "Road_Surface_Oily + Asphalt <-> Road_Surface_Wet + Asphalt: -0.020\n",
      "Road_Surface_Oily + Asphalt <-> Road_Surface_Wet + Unpaved: -0.002\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Darkness: 0.009\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Dawn: 0.002\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Daylight: -0.007\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Dusk: 0.000\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Night/Lit: 0.002\n",
      "Road_Surface_Oily + Asphalt <-> Light_Conditions_Others: -0.001\n",
      "Road_Surface_Oily + Asphalt <-> Time_Period_Afternoon: -0.002\n",
      "Road_Surface_Oily + Asphalt <-> Time_Period_Early Morning: 0.006\n",
      "Road_Surface_Oily + Asphalt <-> Time_Period_Evening: 0.000\n",
      "Road_Surface_Oily + Asphalt <-> Time_Period_Morning: -0.002\n",
      "Road_Surface_Oily + Asphalt <-> Time_Period_Night: 0.002\n",
      "Road_Surface_Oily + Unpaved <-> Road_Surface_Others: -0.001\n",
      "Road_Surface_Oily + Unpaved <-> Road_Surface_Wet + Asphalt: -0.006\n",
      "Road_Surface_Oily + Unpaved <-> Road_Surface_Wet + Unpaved: -0.001\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Darkness: 0.003\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Dawn: 0.005\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Daylight: -0.002\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Dusk: -0.003\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Night/Lit: -0.001\n",
      "Road_Surface_Oily + Unpaved <-> Light_Conditions_Others: -0.000\n",
      "Road_Surface_Oily + Unpaved <-> Time_Period_Afternoon: 0.001\n",
      "Road_Surface_Oily + Unpaved <-> Time_Period_Early Morning: 0.003\n",
      "Road_Surface_Oily + Unpaved <-> Time_Period_Evening: -0.002\n",
      "Road_Surface_Oily + Unpaved <-> Time_Period_Morning: -0.001\n",
      "Road_Surface_Oily + Unpaved <-> Time_Period_Night: -0.001\n",
      "Road_Surface_Others <-> Road_Surface_Wet + Asphalt: -0.012\n",
      "Road_Surface_Others <-> Road_Surface_Wet + Unpaved: -0.001\n",
      "Road_Surface_Others <-> Light_Conditions_Darkness: -0.002\n",
      "Road_Surface_Others <-> Light_Conditions_Dawn: 0.009\n",
      "Road_Surface_Others <-> Light_Conditions_Daylight: -0.006\n",
      "Road_Surface_Others <-> Light_Conditions_Dusk: -0.001\n",
      "Road_Surface_Others <-> Light_Conditions_Night/Lit: 0.005\n",
      "Road_Surface_Others <-> Light_Conditions_Others: 0.022\n",
      "Road_Surface_Others <-> Time_Period_Afternoon: -0.007\n",
      "Road_Surface_Others <-> Time_Period_Early Morning: 0.013\n",
      "Road_Surface_Others <-> Time_Period_Evening: -0.005\n",
      "Road_Surface_Others <-> Time_Period_Morning: 0.004\n",
      "Road_Surface_Others <-> Time_Period_Night: -0.004\n",
      "Road_Surface_Wet + Asphalt <-> Road_Surface_Wet + Unpaved: -0.016\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Darkness: 0.061\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Dawn: 0.019\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Daylight: -0.041\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Dusk: 0.022\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Night/Lit: -0.018\n",
      "Road_Surface_Wet + Asphalt <-> Light_Conditions_Others: 0.003\n",
      "Road_Surface_Wet + Asphalt <-> Time_Period_Afternoon: 0.032\n",
      "Road_Surface_Wet + Asphalt <-> Time_Period_Early Morning: 0.033\n",
      "Road_Surface_Wet + Asphalt <-> Time_Period_Evening: 0.002\n",
      "Road_Surface_Wet + Asphalt <-> Time_Period_Morning: -0.059\n",
      "Road_Surface_Wet + Asphalt <-> Time_Period_Night: 0.011\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Darkness: 0.009\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Dawn: -0.002\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Daylight: -0.008\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Dusk: 0.013\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Night/Lit: -0.004\n",
      "Road_Surface_Wet + Unpaved <-> Light_Conditions_Others: -0.001\n",
      "Road_Surface_Wet + Unpaved <-> Time_Period_Afternoon: 0.001\n",
      "Road_Surface_Wet + Unpaved <-> Time_Period_Early Morning: -0.001\n",
      "Road_Surface_Wet + Unpaved <-> Time_Period_Evening: 0.001\n",
      "Road_Surface_Wet + Unpaved <-> Time_Period_Morning: -0.006\n",
      "Road_Surface_Wet + Unpaved <-> Time_Period_Night: 0.011\n",
      "Light_Conditions_Darkness <-> Light_Conditions_Dawn: -0.034\n",
      "\u001b[1mLight_Conditions_Darkness <-> Light_Conditions_Daylight: -0.537\u001b[0m\n",
      "Light_Conditions_Darkness <-> Light_Conditions_Dusk: -0.058\n",
      "Light_Conditions_Darkness <-> Light_Conditions_Night/Lit: -0.112\n",
      "Light_Conditions_Darkness <-> Light_Conditions_Others: -0.005\n",
      "Light_Conditions_Darkness <-> Time_Period_Afternoon: -0.222\n",
      "Light_Conditions_Darkness <-> Time_Period_Early Morning: 0.300\n",
      "Light_Conditions_Darkness <-> Time_Period_Evening: 0.318\n",
      "Light_Conditions_Darkness <-> Time_Period_Morning: -0.212\n",
      "Light_Conditions_Darkness <-> Time_Period_Night: 0.117\n",
      "Light_Conditions_Dawn <-> Light_Conditions_Daylight: -0.191\n",
      "Light_Conditions_Dawn <-> Light_Conditions_Dusk: -0.021\n",
      "Light_Conditions_Dawn <-> Light_Conditions_Night/Lit: -0.040\n",
      "Light_Conditions_Dawn <-> Light_Conditions_Others: -0.002\n",
      "Light_Conditions_Dawn <-> Time_Period_Afternoon: -0.080\n",
      "Light_Conditions_Dawn <-> Time_Period_Early Morning: 0.154\n",
      "Light_Conditions_Dawn <-> Time_Period_Evening: -0.033\n",
      "Light_Conditions_Dawn <-> Time_Period_Morning: 0.015\n",
      "Light_Conditions_Dawn <-> Time_Period_Night: -0.022\n",
      "Light_Conditions_Daylight <-> Light_Conditions_Dusk: -0.328\n",
      "\u001b[1mLight_Conditions_Daylight <-> Light_Conditions_Night/Lit: -0.626\u001b[0m\n",
      "Light_Conditions_Daylight <-> Light_Conditions_Others: -0.027\n",
      "Light_Conditions_Daylight <-> Time_Period_Afternoon: 0.390\n",
      "\u001b[1mLight_Conditions_Daylight <-> Time_Period_Early Morning: -0.432\u001b[0m\n",
      "\u001b[1mLight_Conditions_Daylight <-> Time_Period_Evening: -0.519\u001b[0m\n",
      "Light_Conditions_Daylight <-> Time_Period_Morning: 0.375\n",
      "Light_Conditions_Daylight <-> Time_Period_Night: -0.368\n",
      "Light_Conditions_Dusk <-> Light_Conditions_Night/Lit: -0.068\n",
      "Light_Conditions_Dusk <-> Light_Conditions_Others: -0.003\n",
      "Light_Conditions_Dusk <-> Time_Period_Afternoon: -0.070\n",
      "Light_Conditions_Dusk <-> Time_Period_Early Morning: -0.045\n",
      "Light_Conditions_Dusk <-> Time_Period_Evening: -0.048\n",
      "Light_Conditions_Dusk <-> Time_Period_Morning: -0.132\n",
      "\u001b[1mLight_Conditions_Dusk <-> Time_Period_Night: 0.494\u001b[0m\n",
      "Light_Conditions_Night/Lit <-> Light_Conditions_Others: -0.006\n",
      "Light_Conditions_Night/Lit <-> Time_Period_Afternoon: -0.265\n",
      "Light_Conditions_Night/Lit <-> Time_Period_Early Morning: 0.293\n",
      "\u001b[1mLight_Conditions_Night/Lit <-> Time_Period_Evening: 0.460\u001b[0m\n",
      "Light_Conditions_Night/Lit <-> Time_Period_Morning: -0.250\n",
      "Light_Conditions_Night/Lit <-> Time_Period_Night: 0.120\n",
      "Light_Conditions_Others <-> Time_Period_Afternoon: -0.004\n",
      "Light_Conditions_Others <-> Time_Period_Early Morning: 0.005\n",
      "Light_Conditions_Others <-> Time_Period_Evening: -0.002\n",
      "Light_Conditions_Others <-> Time_Period_Morning: -0.001\n",
      "Light_Conditions_Others <-> Time_Period_Night: 0.007\n",
      "Time_Period_Afternoon <-> Time_Period_Early Morning: -0.251\n",
      "Time_Period_Afternoon <-> Time_Period_Evening: -0.236\n",
      "\u001b[1mTime_Period_Afternoon <-> Time_Period_Morning: -0.592\u001b[0m\n",
      "Time_Period_Afternoon <-> Time_Period_Night: -0.206\n",
      "Time_Period_Early Morning <-> Time_Period_Evening: -0.103\n",
      "Time_Period_Early Morning <-> Time_Period_Morning: -0.259\n",
      "Time_Period_Early Morning <-> Time_Period_Night: -0.090\n",
      "Time_Period_Evening <-> Time_Period_Morning: -0.243\n",
      "Time_Period_Evening <-> Time_Period_Night: -0.085\n",
      "Time_Period_Morning <-> Time_Period_Night: -0.213\n"
     ]
    }
   ],
   "source": [
    "# Assuming encoded_df is already defined\n",
    "corr_df = encoded_df.drop(['Reference_Number'], axis=1)\n",
    "\n",
    "# Ensure all remaining columns are numeric\n",
    "numeric_columns = corr_df.select_dtypes(include=['number']).columns\n",
    "corr_df = corr_df[numeric_columns]\n",
    "\n",
    "# Compute the correlation matrix\n",
    "corr = corr_df.corr()\n",
    "\n",
    "# ANSI escape code for bold text\n",
    "BOLD = '\\033[1m'\n",
    "RESET = '\\033[0m'\n",
    "\n",
    "# Print the correlation scores\n",
    "print(\"Correlation Scores:\")\n",
    "for i, col1 in enumerate(corr.columns):\n",
    "    for j, col2 in enumerate(corr.columns):\n",
    "        if i < j:  # Print only the upper triangle (excluding diagonal)\n",
    "            correlation_score = corr.iloc[i, j]\n",
    "            if correlation_score <= -0.40 or correlation_score >= 0.40:\n",
    "                # Print in bold\n",
    "                print(f\"{BOLD}{col1} <-> {col2}: {correlation_score:.3f}{RESET}\")\n",
    "            else:\n",
    "                print(f\"{col1} <-> {col2}: {correlation_score:.3f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d601d299",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Pearson Correlation')"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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vhgxYgQMDAxKvf337t1DVFQU9u/fj1OnTuHGjRt4+vQplEolKleuDHd3d/j4+GDIkCHiNWPy4+3tjevXr2PlypXYvn07Ll26hCdPnsDMzAy1atVC586dMWbMGFSpUqXU96G0KJVKfP311xg7diw2b96MyMhInDp1Cg8ePMCTJ09gZGSEypUro2HDhmjbti0GDBgAGxubAutr0qQJLl++jKCgIPz11184e/YsHj16BGNjY9SoUQMdOnTAmDFjNK45VVZq1qyJY8eOISIiAhs3bsSRI0dw9+5dPH/+HEZGRrC3t4erqys8PT3RvXv3Ere5c+fOOHPmDBYsWICIiAjcuXMHhoaGsLe3R6dOnfDpp5+idu3aCA0NLbKuqlWr4t9//8WiRYuwb98+3LhxAykpKW90XadKlSph//792LZtG/744w8cP34c9+/fh1KphJ2dHdq0aYPhw4ejTZs2JY5BRERERFQcglrKK5YSERERERERERERERHRW4lz3omIiIiIiIiIiIiIiEgLB5GIiIiIiIiIiIiIiIhICweRiIiIiIiIiIiIiIiISAsHkYiIiIiIiIiIiIiIiErJwYMH0b17d1StWhWCIGDr1q1FbnPgwAE0adIEBgYGcHJywsqVK7XKbNq0Ca6urtDX14erqyu2bNkiQes1cRCJiIiIiIiIiIiIiIiolKSmpqJhw4ZYvnx5scrfuHEDXbp0QZs2bXD69Gl88803GD9+PDZt2iSWOXbsGPr3748hQ4bgzJkzGDJkCPr164cTJ05ItRsAAEGtVqsljUBERERERERERERERPQOEgQBW7ZsQY8ePQos8/XXX2Pbtm2Ii4sTl3366ac4c+YMjh07BgDo378/nj17hl27dollOnXqBEtLS6xbt06y9nMmEhERERERERERERERUSEyMzPx7NkzjVtmZmap1H3s2DF07NhRY5m3tzdOnTqF7OzsQsscPXq0VNpQEB1Ja3/HJCQkoGbNmjh9+jQ8PDzKujlafv31V8yePRt37tzB4sWLMXHiREnj+fn54cmTJ4Xme3R0dMTEiROL1ZbQ0FBMnDgRT548KbU2lidy7V+7du3g4eGBJUuWvNZ2O3RdpGnQS6rHHZQ8hn36VcljAMATIzvJYzzOsZI8hq1wR/IYAKBQqySPIcgQI1ch/dvq39fdJI8BAEPNNkseY+H17pLH8H9P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iIjKHUEhz0xaKhiviURERERERERERERERERaOIhEREREREREREREREREWpjOjoiIiIiIiIiIiIiIyh2msyt7nIlEREREREREREREREREWjiIRERERERERERERERERFqYzo6IiIiIiIiIiIiIiModQcF5MGWNZ4CIiIiIiIiIiIiIiIi0cCYSERERERERERERERGVOwqlUNZNeOdxJhIRERERERERERERERFp4SASERERERERERERERERaWE6OyIiIiIiIiIiIiIiKncEBdPZlbUKOYgUFRUFLy8vJCcnw8LCIt8yoaGhmDhxIp48eSJr26j4EhISULNmTZw+fRoeHh5l3ZxS5efnhydPnmDr1q0FlmnXrh08PDywZMkS2dpVGIVaJXkMs9zHksd4oqgkeQwA0BFyJI+hhvRvolXOn5A8BgA8cHtP8hhG/8ZKHqMiUav5Ie11GKpTJY+RK0j/se1Cbn3JYwBAdSFJ8hiWuf9JHkMnN0vyGADwQLea5DEMhTTJY+TK8NXDNjNB8hgAkK5nJnmMbIW+5DEUkP7zHQDoIFvyGDnQlTyGieqJ5DEA4AHsZIkjNVNliixx5PhMLEAteYyKsh8AYKmS/j04XWkieQxj1VPJYwBAutJU8hgZKkPJY+gJ8nwukuPzhBzPFTnet/QVGZLHkEuWWvrPRXpCpuQx6N2zYsUKLFiwAElJSahfvz6WLFmCNm3a5FvWz88PYWFhWstdXV1x4cIFAC/GNIYPH65VJj09HQYGBqXb+JeUaTq7o0ePQqlUolOnTqVab6tWrZCUlARzc/NSrbcoUVFREASh2ANTgiAUevPz85O0vUWZNWtWvoM3CQkJEAQBsbGxsrepovj5558RGhoqe1w/Pz/06NFD9rhERERERERERERE74oNGzZg4sSJ+Pbbb3H69Gm0adMGnTt3RmJiYr7lf/75ZyQlJYm3W7duwcrKCn379tUoZ2ZmplEuKSlJ0gEkoIxnIgUHB+Ozzz7D6tWrkZiYiOrVq5dKvXp6erC1tS2VuqSUlPR//8LdsGEDZsyYgcuXL4vLDA2l/6cIlQ25BziJiIiIiIiIiIiI3jaCokznwZTY4sWLMWLECIwcORIAsGTJEuzZsweBgYGYN2+eVnlzc3ON34y3bt2K5ORkrZlHgiDIPvZRZmcgNTUVf/75J0aPHo1u3brlOytj27ZtaNq0KQwMDFCpUiX06tVLXJeZmYnJkyfDwcEB+vr6qF27NoKCggDkPyMoNDQU1atXh5GREXr27IlHjx5pxfv777/RpEkTGBgYwMnJCQEBAcjJ+b+UVIIgYPXq1ejZsyeMjIxQu3ZtbNu2DcCL2TleXl4AAEtLy2LNJLK1tRVv5ubmYgewsbFB69at8dtvv2mUP3/+PBQKBeLj48X2BAYGonPnzjA0NETNmjWxceNGjW3u3LmD/v37w9LSEtbW1vDx8UFCQkKh7SqJixcvokuXLjAxMYGNjQ2GDBmChw8fiut3796N1q1bw8LCAtbW1ujWrZu4H3mio6PRqFEjGBgYoGnTpjh9+nSxYp87dw4ffPABDA0NYW1tjY8//hgpKf+XOiFv9s3ChQthZ2cHa2trjB07FtnZBafViI+Ph4+PD2xsbGBiYoJmzZph3759GmUK64MAcOHCBXTt2hVmZmYwNTVFmzZtxH1+dUZQamoqhg4dChMTE9jZ2WHRokVabcrKysLkyZNhb28PY2NjvPfee4iKihLXh4aGwsLCAnv27EG9evVgYmKCTp06iYOVs2bNQlhYGP766y9xttvL2xMRERERERERERFR/jIzM/Hs2TONW2amdirErKwsxMTEoGPHjhrLO3bsiKNHjxYrVlBQENq3b48aNWpoLE9JSUGNGjVQrVo1dOvWrdi/ob+JMhtE2rBhA1xcXODi4oLBgwcjJCQEavX/5RzdsWMHevXqha5du+L06dOIjIxE06ZNxfVDhw7F+vXrsXTpUsTFxWHlypUwMck/J+6JEyfg7++PMWPGIDY2Fl5eXpgzZ45GmT179mDw4MEYP348Ll68iFWrViE0NBRz587VKBcQEIB+/frh7Nmz6NKlC3x9ffH48WM4ODhg06ZNAIDLly8jKSkJP//8c4mOjSAI8Pf3R0hIiMby4OBgtGnTBrVq1RKXTZ8+Hb1798aZM2cwePBgDBw4EHFxcQCAtLQ0eHl5wcTEBAcPHsThw4fFgYWsrNLLVZuUlARPT094eHjg1KlT2L17N+7fv49+/fqJZVJTUzFp0iScPHkSkZGRUCgU6NmzJ1Qqlbi+W7ducHFxQUxMDGbNmoUvv/yyyNhpaWno1KkTLC0tcfLkSWzcuBH79u3DuHHjNMrt378f8fHx2L9/P8LCwhAaGlpoOrmUlBR06dIF+/btw+nTp+Ht7Y3u3btrTDcsrA/euXMHbdu2hYGBAf755x/ExMTA399fY1DyZV999RX279+PLVu2YO/evYiKikJMTIxGmeHDh+PIkSNYv349zp49i759+6JTp064evWqxvFYuHAhfv/9dxw8eBCJiYnicfzyyy/Rr18/cWApKSkJrVq1KvIYExEREREREREREb3r5s2bJ84YyrvlN6vo4cOHyM3NhY2NjcZyGxsb3Lt3r8g4SUlJ2LVrlziLKU/dunURGhqKbdu2Yd26dTAwMMD777+v8fuwFMosnV1QUBAGDx4MAOjUqRNSUlIQGRmJ9u3bAwDmzp2LAQMGICAgQNymYcOGAIArV67gzz//REREhFjeycmpwFg///wzvL29MWXKFABAnTp1cPToUezevVssM3fuXEyZMgXDhg0T65s9ezYmT56MmTNniuX8/PwwcOBAAMD333+PZcuWITo6Gp06dYKVlRUAoEqVKrCwsHij4zN8+HDMmDED0dHRaN68ObKzs7F27VosWLBAo1zfvn3FzjR79mxERERg2bJlWLFiBdavXw+FQoHVq1dDEF5cpDMkJAQWFhaIiorSGgnNz7lz57QG514e7AOAwMBANG7cGN9//724LDg4GA4ODrhy5Qrq1KmD3r17a2wTFBSEKlWq4OLFi3Bzc0N4eDhyc3MRHBwMIyMj1K9fH7dv38bo0aMLbV94eDjS09OxZs0aGBsbAwCWL1+O7t2748cffxSfqJaWlli+fDmUSiXq1q2Lrl27IjIyEqNGjcq33oYNG4r9DQDmzJmDLVu2YNu2bRg3blyRffCXX36Bubk51q9fD13dFxdLrFOnTr6xUlJSEBQUhDVr1qBDhw4AgLCwMFSr9n8X0Y6Pj8e6detw+/ZtVK1aFcCLQaHdu3cjJCREPPbZ2dlYuXKlONA4btw4fPfddwAAExMTGBoaIjMz861I90hERERERERERETvNkEhlHUTRFOnTsWkSZM0lunr6xdYPu83+TxqtVprWX7yMk69em37Fi1aoEWLFuLj999/H40bN8ayZcuwdOnSYuxByZTJINLly5cRHR2NzZs3v2iEjg769++P4OBg8Qf52NjYAn/gj42NhVKphKenZ7HixcXFoWfPnhrLWrZsqTGIFBMTg5MnT2rMPMrNzUVGRgbS0tJgZGQEAHB3dxfXGxsbw9TUFA8ePChWO16H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rVoVR44cQW5uLry9veHm5oYJEybA3NwcCoUCCoUC69evR0xMDNzc3PD5559jwYIFGnWYmJjg77//xsWLF9GoUSN8++23+abHe5WRkRH27NmDx48fo1mzZujTpw8+/PBDLF++/I326aeffoKlpSVatWqF7t27w9vbG40bN9YoU1gftLa2xj///IOUlBR4enqiSZMm+O233wqclbRgwQK0bdsWH330Edq3b4/WrVujSZMmGmVCQkIwdOhQfPHFF3BxccFHH32EEydOwMHBodj7NWrUKLi4uKBp06aoXLkyjhw58ppHhoiIiIiIiIiIiEgegkJRbm6va8yYMUhISEBmZiZiYmLQtm1bcV1oaCiioqI0ypubmyMtLQ2jRo3Kt76ffvoJN2/eRGZmJh48eIA9e/bkO/GktAnqklwwhWRz5MgRtGvXDrdv39aaWSMIArZs2YIePXqUTePonXL38lnJY6gLuL5VaXqiqCR5DADQEXIkj5GtLjxVYmlIzzUoulApeOD2nuQxjP6NlTyGmX665DEUgjTX4XvVo3RTyWNYGuT/54/SpFbLkzu5svKB5DFyBemzEN9Mqyp5DACobpwkeQyDHOn7l05uluQxAOCBbjXJYxgKaZLHyJUhk7ZVxl3JYwBAup50qaLzZCuLvmDvm1KplUUXKgU6yH/2e2nKgfSfiwxzn0seAwAewE6WOFIzVb5ZZo7iUkP693oB0v9sIsd+yMU496nkMdKVJkUXekMGudJ/lgCAdKX0n7uz1NJnFtET5PlcpJLh//ByPOfl2A9dmc6JHLLU0n8u0hMyJY8BALWcnGSJU5EkftqrrJsgqr5yc1k3oUzIfk0kKp7MzEzcunUL06dPR79+/d4oNRsREREREREREREREdHrkj2d3bskMTERJiYmBd5ezXn4snXr1sHFxQVPnz4VrwVV2gpr26FDhySJSURERERERERERERUHIJCKDe3dxXT2UkoJycHCQkJBa53dHSEjk7ZTQa7du1agevs7e1haGgoY2uovEu6FCt5jFuoKXkM5+xzkscAgCdG0qchearSvrZcaXuSYSx5DLmkNfaQPIZp7L+Sx9BV5EoeAwDiH0qfVqO6lfTps1Rqef4vU8UgWfIYcqQyNMl9InkMAEhVSv/6JUeKEAXkSS8px77oQPo0rIIMxytTLU8aVjnS3CgF6V/vlTKcd0Ce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8+fju+++EwdhVCoVevXqBaVSiePHj2PlypX4+uuvi9z31NRUTJo0CSdPnkRkZCQUCgV69uwJlepF3tqUlBR4enri7t272LZtG86cOYPJkyeL64vqzy8rThuLe27379+P+Ph47N+/H2FhYQgNDRUHbDdv3oxq1arhu+++Q1JSksbMOCIiIiIiIiIiIqLyRFAI5eb2rpI1nV1QUBAGDx4MAOjUqRNSUlIQGRmJ9u3bAwDmzp2LAQMGICAgQNymYcOGAIArV67gzz//REREhFjeycmpwFg///wzvL29MWXKFABAnTp1cPToUezevVssM3fuXEyZMgXDhg0T65s9ezYmT56MmTNniuX8/PwwcOBAAMD333+PZcuWITo6Gp06dYKVlRUAoEqVKrCwsHij4zN8+HDMmDED0dHRaN68ObKzs7F27VosWLBAo1zfvn0xcuRIAMDs2bMRERGBZcuWYcWKFVi/fj0UCgVWr14tzjIJCQmBhYUFoqKi0LFjxyLbce7cOZiYmEClUiE9/cWF68aPHw9jY2MAxTtuEydOFOurWbMmZs+ejdGjR2PFihXi8uzsbKxYsUI8x/kJDAxE48aN8f3334vLgoOD4eDggCtXrqBOnToAAHd3dzF27dq1sXz5ckRGRqJDhw7Yt28f4uLikJCQgGrVqgF4cR47d+5c6HHo3bu3xuOgoCBUqVIFFy9ehJubG/744w/8999/OHnypNgPnJ2dxfKF9edXFaeNxT23lpaWWL58OZRKJerWrYuuXbsiMjISo0aNgpWVFZRKJUxNTd+K9I9EREREREREREREVHZkm4l0+fJlREdHY8CAAQBepEzr378/goODxTKxsbH48MMP890+NjYWSqUSnp6exYoXFxeHli1baix79XFMTAy+++47mJiYiLdRo0YhKSkJaWlpYjl3d3fxvrGxMUxNTfHgwYNiteN12NnZoWvXruIx2b59OzIyMtC3b99C96Nly5biTKSYmBhcu3YNpqam4j5ZWVkhIyNDKxVbQVxcXBAbG4uTJ09i7ty58PDw0JhlVJzjtn//fnTo0AH29vYwNTXF0KFD8ejRI6Smpor16OnpaRzb/MTExGD//v0aserWrQsAGvvzaj12dnbiOYqLi0P16tXFwZn8jmF+4uPjMWjQIDg5OcHMzAw1a9YEACQmJgJ40ScbNWokDiC9qrD+/Kri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Clzv6OgIHZ2ymwB27dq1AtfZ29vD0FCeqZv09glYK/0U+1HN4iSPcU+QZ9qwjiD91HSlDDEyVPqSx5BLarb0+2KqJ/0Ue7lStjzNkj61VYpHI8lj2F04KnkMALBSSJ/OTiVInxbobqat5DEAwM7gvuQxFGrp02roqLIkjwEAGQoZUs2pMySPIUfKPDlS/wFAjkJX8hg6Kuk/e8mxHwAgyPCVUy9X+vdgvRzpnycAEC/UkTxGrlr69xQ5XusBedIiy5HKUI4UXWqZ/kdsmX5X8hhPjaTP3GKZckfyGADw3KiK5DHuZttJHsNK76nkMQBAR46UsjK8RmbIkGrONjNB8hgA8MRA+u8QchwvE0H6tI8AULOWsyxxKpJnSyaVdRNEZhMXl3UTygTT2ZUyHR0dODuX3xeD8tw2IiIiIiIiIiIiIqI8giDPtY6pYO/uHCwiIiIiIiIiIiIiIiIqEAeRiIiIiIiIiIiIiIiISAvT2RERERERERERERERUfmj4DyYssYzQERERERERERERERERFo4iERERERERERERERERERamM6OiIiIiIiIiIiIiIjKHUEhlHUT3nmciURERERERERERERERERaOBOJiIiIiIiIiIiIiIjKH4HzYMoazwARERERERERERERERFp4SASERERERERERERERERaWE6OyIiIiIiIiIiIiIiKn8UQlm34J3HmUhERERERERERERERESk5Z2ciRQVFQUvLy8kJyfDwsIi3zKhoaGYOHEinjx5ImvbqHAJCQmoWbMmTp8+DQ8Pj7JuTokVp3/NmjULW7duRWxsrGztKoz/e1clj/FMYSV5DHPhqeQxACBXLf3La7ZaV/IYanXF+beHSi39/ybkOF6CoJY8BgCoVNLvi92Fo5LHSKrfSvIYAGAQt1/yGErkSh7DSRkveQwAeK62lDyGSob/SqkEY8ljAIAOciSPkSaYSB5DF1mSx0iFqeQxAEChVkkeI0eQ/n0e8rylQI3/x96dh0dRZn0f/1b2pUNYBMKSECCERUCWyKaQRISgoICoIItGNlEBERk0j6JsEVxQEAfcMEGR9REzmMdhMWMQBNmGgEpARCCOhmFAZAlk7X7/4KWHNgESSFVC+H2uqy5N1d117qrqqq7m7nPK/M+UPHcv02NYca8KEGQcNT2GYcF7ONvhZ3oMADfM3xY77qbHqEj+7RNqegxPR57pMY74NTQ9BoCHYf7nfDWvP0yPYRXDYdGHl8m8jRzTYxzzqWt6DAAvC7bFh2zTY+Rh/r2EyPWqXGcibdq0CXd3d3r06FGq6+3UqROZmZkEBgaW6nqvJDU1FcMwij0wZRjGZafY2FhT+3s5oaGhl+1bVFSUKXGDg4PJzMykefPmpqzfKv379+fHH3+0PG5iYuIlB05FREREREREREREyhPDcCs3042qXGciffjhh4wZM4YPPviAjIwMQkJCSmW9Xl5eBAUFlcq6zJSZmen8/2XLlvHiiy+yb98+5zxfX9+y6BYA27Zto6Dg/C+iN23aRL9+/di3bx+VKlUCzu/jkigoKMAwDNzcLn8yuru7XxfH7kp8fX3L9PiJiIiIiIiIiIiIiFxJuR0+y8rKYvny5Tz++OP06tWLxMTEQm1WrVpFREQEPj4+3HTTTdx3333OZTk5OUycOJHg4GC8vb1p1KgRCxYsAIrOCEpMTCQkJAQ/Pz/69u3L8ePHC8X7/PPPadu2LT4+PjRo0IApU6aQn//ftGPDMPjggw/o27cvfn5+NGrUiFWrVgHny7BFR0cDUKVKlWJlEgUFBTmnwMBADMMgKCiImjVrcvvtt/P++++7tP/+++9xc3PjwIEDzv7Mnz+fu+66C19fX+rXr8+KFStcXvPrr7/Sv39/qlSpQrVq1ejduzeHDh26bL8Aqlev7uxb1arnyzrUqFGDoKAg9u7dS7Vq1Vz2b1paGoZhONd9ISMmOTmZZs2a4e3tzeHDhwkNDeXll19m6NChBAQEEBISwnvvvedcz6FDhzAMw1ni7cKxTElJISIiAj8/Pzp16uQy2AYwffp0atSoQUBAAMOHD+e55567bDm8goIChg0bRv369fH19aVx48bMmTOnULsPP/yQm2++GW9vb2rVqsXo0aOdy/744w9GjhxJzZo18fHxoXnz5iQnJ7ts/8VmzpxJzZo1CQgIYNiwYWRnF07VTUhIoGnTpvj4+NCkSRPmzZtXaN+sXLmS6Oho/Pz8uOWWW9i8ebNzXz366KOcPHnSmTE2efLkS+4DEREREREREREREbmxldtBpGXLltG4cWMaN27M4MGDSUhIwHFR3dP/+7//47777qNnz57s3LnTOYhwwcMPP8zSpUt56623SE9P55133sFmK7rW+5YtWxg6dChPPPEEaWlpREdHM336dJc2a9asYfDgwYwdO5Y9e/bw7rvvkpiYSHx8vEu7KVOm8OCDD7J7927uvvtuBg0axO+//05wcDCffvopAPv27SMzM7PIQYniMAyDoUOHkpCQ4DL/ww8/pHPnzjRs+N+6vZMmTaJfv37s2rWLwYMH89BDD5Geng7A2bNniY6Oxmaz8fXXX7Nx40ZsNhs9evQgN9f8mvVnz55lxowZfPDBB/zwww/UqFEDgFmzZhEREcHOnTt54oknePzxx9m7d+9l1/X8888za9Ystm/fjoeHB0OHDnUu++STT4iPj+eVV15hx44dhISEMH/+/Muuz263U7duXZYvX86ePXt48cUX+Z//+R+WL1/ubDN//nyefPJJRo4cyXfffceqVasICwtzvv6uu+5i06ZNLFq0iD179jBz5kzc3Yuupb18+XJeeukl4uPj2b59O7Vq1XIZIAJ4//33ef7554mPjyc9PZ2XX36ZSZMmsXDhwkL7YsKECaSlpREeHs5DDz1Efn4+nTp1Yvbs2VSqVInMzEwyMzOZMGHCZfeDiIiIiIiIiIiISJlxM8rPVELz5s2jfv36+Pj40LZtWzZs2HDJtheSJf48/fnfxT/99FNnUkazZs347LPPStyvkiq35ewWLFjA4MGDAejRowdnzpwhJSWFO++8E4D4+HgGDBjAlClTnK+55ZZbAPjxxx9Zvnw569atc7Zv0KDBJWPNmTOHmJgYnnvuOQDCw8PZtGkTq1evdraJj4/nueee45FHHnGub9q0aUycOJGXXnrJ2S42NpaHHnoIgJdffpm5c+eydetWevTo4ZKxc63PpXn00Ud58cUX2bp1K+3atSMvL49Fixbx2muvubR74IEHGD58OADTpk1j3bp1zJ07l3nz5rF06VLc3Nz44IMPMIzzJ0FCQgKVK1cmNTWV7t27X1MfryQvL4958+Y5j9sFd999N0888QQAzz77LG+++Sapqak0adLkkuuKj48nMjISgOeee46ePXuSnZ2Nj48Pc+fOZdiwYTz66KMAvPjii6xdu5YzZ85ccn2enp4u76369euzadMmli9fzoMPPgicz2565plneOqpp5ztbr31VgC+/PJLtm7dSnp6OuHh4cDl34OzZ89m6NChzmM1ffp0vvzyS5dspGnTpjFr1ixnxl39+vWdA5oX3pcAEyZMoGfPnsD5Qc2bb76Zn376iSZNmrhktImIiIiIiIiIiIhI6Vu2bBnjxo1j3rx53Hbbbbz77rvcdddd7Nmz57KP7bn4kTFwviLYBZs3b6Z///5MmzaNvn378tlnn/Hggw+yceNG2rdvb9q2lMtMpH379rF161YGDBgAgIeHB/379+fDDz90tklLS6Nr165Fvj4tLQ13d3fnoMKVpKen07FjR5d5f/57x44dTJ06FZvN5pxGjBhBZmYmZ8+edbZr2bKl8//9/f0JCAjg6NGjxepHSdSqVYuePXs690lycjLZ2dk88MADl92Ojh07OjORduzYwU8//URAQIBzm6pWrUp2drazJJ6ZvLy8XPbXBRfPuzDgcaV9ePFratWqBeB8zb59+2jXrp1L+z//XZR33nmHiIgIqlevjs1m4/333ycjI8O57t9+++2y78G6des6B5Cu5Ervwf/85z/88ssvDBs2zOU9OH369ELH6nL7orhycnI4deqUy5RjQXaaiIiIiIiIiIiIyAWGm1u5mUrijTfeYNiwYQwfPpymTZsye/ZsgoODr1gh68IjYy5MF1e2mj17Nt26dSMuLo4mTZoQFxdH165dmT179tXs2mIrl5lICxYsID8/nzp16jjnORwOPD09OXHiBFWqVMHX1/eSr7/csqJcXCbvUux2O1OmTHF57tIFPj4+zv/39PR0WWYYBna7vUT9Ka7hw4czZMgQ3nzzTRISEujfvz9+fn5XfN2FrCO73U7btm355JNPCrW5eISzpNz+/wl18X7Ny8sr1M7X19fZl4tdzT68+DUXb9+f511wpWO+fPlynn76aWbNmkXHjh0JCAjgtddeY8uWLc6+X05J34NXcmFb3n///UKjyn8ukXelfVEcM2bMcMnEAhg3+gnGj32yROsRERERERERERERqQhycnLIyclxmeft7Y23t7fLvNzcXHbs2OGsfHZB9+7d2bRp02VjtG7dmuzsbJo1a8YLL7xAdHS0c9nmzZt5+umnXdrHxMSYPohU7jKR8vPz+eijj5g1axZpaWnOadeuXdSrV8854NGyZUtSUlKKXEeLFi2w2+2sX7++WDGbNWvGt99+6zLvz3+3adOGffv2ERYWVmhyK+YopJeXFwAFBQXFan8ld999N/7+/syfP5+///3vLs8BuqCo7bpQFq5Nmzbs37+fGjVqFNqmwMDAq+7XhQGozMxM57y0tLSrXt+1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ERGRckiZSGIqb29vgoKCCA4OZuDAgQwaNIikpCQWLVpEREQEAQEBBAUFMXDgQI4ePep83YVsnzVr1hAREYG3tzcbNmxg8uTJtGrVyqVdu3bt8Pf3p3Llytx2220cPnzYpQ8ff/wxoaGhBAYGMmDAAE6fPl2q23j8+HEeeugh6tati5+fHy1atGDJkiUubaKiohg7diwTJ06katWqBAUFMXnyZJc2GRkZ9O7dG5vNRqVKlXjwwQf597//DcC+ffswDIO9e/e6vOaNN94gNDQUh+N8ivKePXu4++67sdls1KxZkyFDhnDs2DGXfowePZrx48dz00030a1bt1LdFyIiIiIiIiIiIiKlxnArP9MN6sbdcikTvr6+5OXlkZuby7Rp09i1axdJSUkcPHiQ2NjYQu0nTpzIjBkzSE9Pp2XLli7L8vPz6dOnD5GRkezevZvNmzczcuRIDOO/dTIPHDhAUlISycnJJCcns379embOnFmq25SdnU3btm1JTk7m+++/Z+TIkQwZMoQtW7a4tFu4cCH+/v5s2bKFV199lalTp7Ju3TrgfKZVnz59+P3331m/fj3r1q3jwIED9O/fH4DGjRvTtm1bPvnkE5d1Ll68mIEDB2IYBpmZmURGRtKqVSu2b9/O6tWr+fe//82DDz5YqB8eHh588803vPvuu6W6L0RERERERERERESk4lA5O7HM1q1bWbx4MV27dmXo0KHO+Q0aNOCtt96iXbt2nDlzxqVc3dSpUy+ZLXPq1ClOnjxJr169aNiwIQBNmzZ1aWO320lMTCQgIACAIUOGkJKSQnx8fLH6nJycXKh8XkGB68P86tSpw4QJE5x/jxkzhtWrV7NixQrat2/vnN+yZUteeuklABo1asTbb79NSkoK3bp148svv2T37t0cPHiQ4OBg4HwG1c0338y2bdu49dZbGTRoEG+//TbTpk0D4Mcff2THjh189NFHAMyfP582bdrw8ssvO2N++OGHBAcH8+OPPxIeHg5AWFgYr776arG2X0RERERERERERKTMXJQwIGVDmUhiqguDMD4+PnTs2JEuXbowd+5cdu7cSe/evalXrx4BAQFERUUB50u6XSwiIuKS665atSqxsbHExMRwzz33MGfOHDIzM13ahIaGOgeQAGrVquVSNu9KoqOjSUtLc5k++OADlzYFBQXEx8fTsmVLqlWrhs1mY+3atYW25c+ZVBf3JT09neDgYOcAEkCzZs2oXLky6enpAAwYMIDDhw/z7bffAvDJJ5/QqlUrmjVrBsCOHTv46quvnM+NstlsNGnSBDifkXXB5fbpBTk5OZw6dcplys3JKdY+ExEREREREREREZGKQYNIYqoLgzD79u0jOzublStX4u/vT/fu3bHZbCxatIht27bx2WefAZCbm+vyen9//8uuPyEhgc2bN9OpUyeWLVtGeHi4c5AFwNPT06W9YRjY7fZi99/f35+wsDCXqU6dOi5tZs2axZtvvsnEiRP5xz/+QVpaGjExMYW25XJ9cTgcLmX4Lrh4fq1atYiOjmbx4sUALFmyhMGDBzvb2u127rnnnkKDXvv376dLly4u23QlM2bMIDAw0GV67523r/g6EREREREREREREak4VM5OTHVhEOZie/fu5dixY8ycOdOZebN9+/arjtG6dWtat25NXFwcHTt2ZPHixXTo0OGa+l0SGzZsoHfv3s4BHbvdzv79+wuV1rucZs2akZGRwS+//OLcJ3v27OHkyZMu6xk0aBDPPvssDz30EAcOHGDAgAHOZW3atOHTTz8lNDQUD49rO7Xj4uIYP368y7yD/zp2TesUERERERERERERKRE35cGUNR0BsVxISAheXl7MnTuXn3/+mVWrVjmf81MSBw8eJC4ujs2bN3P48GHWrl3Ljz/+WKLBm9IQFhbGunXr2LRpE+np6Tz22GMcOXKkROu48847admyJYMGDeKf//wnW7du5eGHHyYyMtKl/Nx9993HqVOnePzxx4mOjnbJinryySf5/fffeeihh9i6dSs///wza9euZejQoYWe43Ql3t7eVKpUyWXy8vYu0TpERERERERERERE5PqmQSSxXPXq1UlMTGTFihU0a9aMmTNn8vrrr5d4PX5+fuzdu5d+/foRHh7OyJEjGT16NI899pgJvb60SZMm0aZNG2JiYoiKiiIoKIg+ffqUaB2GYZCUlESVKlXo0qULd955Jw0aNGDZsmUu7SpVqsQ999zDrl27GDRokMuy2rVr880331BQUEBMTAzNmzfnqaeeIjAwEDeN2IuIiIiIiIiIiIhICRkOh8NR1p0QkfIv/cCvpsfwc5wxPcZZw2Z6DAAD8y+t7pQsw+xqFOBuegwAL3JMj5GL+dl0VhwTN8P8GAB5Di/TY1hx3PMwfzsA7Bb8LufnJneYHqPWD5tMjwHg655tegwrrsN2hzU/0nBQ+LmJpc3dgmuLFdthxXG3ihXbYsUxAWs+HyvS+8uKzxQruFH8Z9GKdeejFdwsOefNP0/cyTc9BkA+nldudI10jSyZinL9qkj3RRXpGhneMKSsu3DdyV45p6y74ORz31Nl3YUyUTHuTkVERERERERERERERKRUeZR1B0TKQkZGBs2aNbvk8j179hASol8GiIiIiIiIiIiIiJQZt4qTiXa90iCS3JBq165NWlraZZeLq8p5/zE9xvc5TU2P0b7ga9NjABwNDDM9Rq7D/PJsN+X+ZnoMgB8KbjY9RiPvA6bHyHb3Nz3GWbv5MQACOGl6jH/l1jE9RgN38487wJ6cxqbHsKLUXObNnUyPAeC29XvTYwT6mF8y77dT1pyPefnmf2mqV9WCkrJ55peX9HS3puSnr3ue6THcDPNL6eTZrSlba/M8Z3oMK0oPnc73Mz0GQFj+HkvimO2oTz1L4ngY5pccqyhllKwqz3Y09ybTY1T1Mv9e9d855m8HwE3eJ0yPYSv4w/QYWe6BpscA8Mb8ezwrSmJ7kmt6jNP2SqbHAGuuw77GWdNjZONregyR65UGkeSG5OHhQViY+f/ILyIiIiIiIiIiIiJyvdIgkoiIiIiIiIiIiIiIlD+GW1n34IanIyAiIiIiIiIiIiIiIiKFaBBJREREREREREREREREClE5OxERERERERERERERKX8Mo6x7cMNTJpKIiIiIiIiIiIiIiIgUokEkERERERERERERERERKUTl7EREREREREREREREpPxxUx5MWdMREBERERERERERERERkUKUiSQiIiIiIiIiIiIiIuWPYZR1D254ykQSERERERERERERERGRQjSIJCIiIiIiIiIiIiIiIoWonJ2IiIiIiIiIiIiIiJQ/hvJgypqOgIiIiIiIiIiIiIiIiBSiTCQpdZMnTyYpKYm0tLRSbXu9iIqKolWrVsyePbusu1KqTnlWMz1GPc9/mx7jCI1NjwFg4DA9hpthNz3GSe/qpscACDEyTY+R5Qg0PYYVvI0cS+Lk4mN6jFo+5p/zpx1VTI8BcJPbKdNjeLvlmh7Dbev3pscAsLdrbnqMSunrTY/hVTnf9BgADsx/kKyve7bpMfw8zI/hbsFnI4Ab5sex4l7C7m7Nbwq9DPOvX+6G+edjNY6YHgMgwyvckjhm8zfOlnUXSo0V57wV1/oCi/4JKNTtoOkxsjD/3r6G93HTY1jlrHsl02N4GHmmxwDIdXibHsOKz2ArznkvC74/gDXXyGx8TY/hiTX7S+R6pEykG1xsbCyGYWAYBp6enjRo0IAJEyaQlZV11eucMGECKSkppdjLS7vQ/1GjRhVa9sQTT2AYBrGxsZb0xSqJiYlUrly5rLshIiIiIiIiIiIiYi43t/Iz3aBu3C0Xpx49epCZmcnPP//M9OnTmTdvHhMmTCjxehwOB/n5+dhsNqpVMz9r5YLg4GCWLl3KuXPnnPOys7NZsmQJISEhlvXjelNQUIDdbs2vdUVERERERERERETk+qNBJMHb25ugoCCCg4MZOHAggwYNIikpiUWLFhEREUFAQABBQUEMHDiQo0ePOl+XmpqKYRisWbOGiIgIvL292bBhA5MnT6ZVq1Yu7dq1a4e/vz+VK1fmtttu4/Dhwy59+PjjjwkNDSUwMJABAwZw+vTpYve/TZs2hISEsHLlSue8lStXEhwcTOvWrV3arl69mttvv53KlStTrVo1evXqxYEDB5zLDx06hGEYrFy5kujoaPz8/LjlllvYvHmzy3q++eYbIiMj8fPzo0qVKsTExHDixAnncrvdzsSJE6latSpBQUFMnjzZ5fUnT55k5MiR1KhRg0qVKnHHHXewa9cu5/Jdu3YRHR1NQEAAlSpVom3btmzfvp3U1FQeffRRTp486cwgu7Du3NxcJk6cSJ06dfD396d9+/akpqY613khgyk5OZlmzZrh7e1d6DiIiIiIiIiIiIiIlBuGUX6mG5QGkaQQX19f8vLyyM3NZdq0aezatYukpCQOHjxYZGm4iRMnMmPGDNLT02nZsqXLsvz8fPr06UNkZCS7d+9m8+bNjBw5EuOik+7AgQMkJSWRnJxMcnIy69evZ+bMmSXq86OPPkpCQoLz7w8//JChQ4cWapeVlcX48ePZtm0bKSkpuLm50bdv30IZOc8//zwTJkwgLS2N8PBwHnroIfLzz9dZT0tLo2vXrtx8881s3ryZjRs3cs8991BQUOB8/cKFC/H392fLli28+uqrTJ06lXXr1gHnM7Z69uzJkSNH+OKLL9ixYwdt2rSha9eu/P777wAMGjSIunXrsm3bNnbs2MFzzz2Hp6cnnTp1Yvbs2VSqVInMzEwyMzOdWWOPPvoo33zzDUuXLmX37t088MAD9OjRg/379zv7dfbsWWbMmMEHH3zADz/8QI0aNUq0n0VERERERERERETkxmHNUxXlurF161YWL15M165dXQZhGjRowFtvvUW7du04c+YMNpvNuWzq1Kl069atyPWdOnWKkydP0qtXLxo2bAhA06ZNXdrY7XYSExMJCAgAYMiQIaSkpBAfH1/sfg8ZMoS4uDhnJtGFwZSLM3EA+vXr5/L3ggULqFGjBnv27KF58/8+5HvChAn07NkTgClTpnDzzTfz008/0aRJE1599VUiIiKYN2+es/3NN9/sst6WLVvy0ksvAdCoUSPefvttUlJS6NatG1999RXfffcdR48exdv7/AMhX3/9dZKSkvjf//1fRo4cSUZGBn/5y19o0qSJcx0XBAYGYhgGQUFBznkHDhxgyZIl/Otf/6J27drObVi9ejUJCQm8/PLLAOTl5TFv3jxuueWWYu9bEREREREREREREbkxaRBJSE5OxmazkZ+fT15eHr1792bu3Lns3LmTyZMnk5aWxu+//+7M1snIyKBZs2bO10dERFxy3VWrViU2NpaYmBi6devGnXfeyYMPPkitWrWcbUJDQ50DSAC1atVyKZtXHDfddBM9e/Zk4cKFzkyfm266qVC7AwcOMGnSJL799luOHTvmsk0XDyJdnFF1oa9Hjx6lSZMmpKWl8cADD1y2P3/OyLp4m3bs2MGZM2cKPTfq3LlzztJ648ePZ/jw4Xz88cfceeedPPDAA85BuKL885//xOFwEB4e7jI/JyfHJY6Xl1ehvhUlJyeHnJwcl3m5OTl4/f9BLxERERERERERERHTGSqmVtY0iCRER0czf/58PD09qV27Np6enmRlZdG9e3e6d+/OokWLqF69OhkZGcTExJCbm+vyen9//8uuPyEhgbFjx7J69WqWLVvGCy+8wLp16+jQoQMAnp6eLu0NwyhUXq44hg4dyujRowH461//WmSbe+65h+DgYN5//31q166N3W6nefPmhbbp4j5dKL13oU++vr5X7Mvltslut1OrVq1CWVIAlStXBmDy5MkMHDiQ//u//+Pvf/87L730EkuXLqVv375FxrPb7bi7u7Njxw7c3d1dll2cNebr6+tSSvBSZsyYwZQpU1zmPTlmHGOeGn/F14qIiIiIiIiIiIhIxaBBJMHf35+wsDCX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IyEhgc2bN9OpUyeWLVtGeHg43377rXO5p6enS3vDMLDb7cXeBh8fH7p168aLL77Ipk2biI2N5aWXXir26y9lwYIF5OfnU6dOHTw8PPDw8GD+/PmsXLmSEydOuLS9eBsulOq7eBtKuo0zZswgMDDQZXr/3bnXvE0iIiIiIiIiIiIiN4J58+ZRv359fHx8aNu2LRs2bLhk25UrV9KtWzeqV69OpUqV6NixI2vWrHFpk5iYiGEYhabs7GxTt0ODSFKm/P39CQsLo169ei4DHXv37uXYsWPMnDmTzp0706RJk2JnBxWldevWxMXFsWnTJpo3b87ixYtLo/tFatasGVlZWc6/PT09KSgoKNE68vPz+eijj5g1axZpaWnOadeuXdSrV49PPvmktLvtIi4ujpMnT7pMIx4bY2pMEREREREREREREReGW/mZSmDZsmWMGzeO559/np07d9K5c2fuuuuuQlW2Lvj666/p1q0bX3zxBTt27CA6Opp77rmHnTt3urSrVKkSmZmZLtOFR5qYRYNIUi6FhITg5eXF3Llz+fnnn1m1ahXTpk0r8XoOHjxIXFwcmzdv5vDhw6xdu5Yff/yx0HORrsbx48e54447WLRoEbt37+bgwYOsWLGCV199ld69ezvbhYaGkpKSwpEjR5wZRFu3bqVJkyb8+uuvRa47OTmZEydOMGzYMJo3b+4y3X///SxYsOCa+3853t7eVKpUyWXy8vY2NaaIiIiIiIiIiIhIRfDGG28wbNgwhg8fTtOmTZk9ezbBwcHMnz+/yPazZ89m4sSJ3HrrrTRq1IiXX36ZRo0a8fnnn7u0MwyDoKAgl8lsGkSScql69eokJiayYsUKmjVrxsyZM3n99ddLvB4/Pz/27t1Lv379CA8PZ+TIkYwePZrHHnvsmvtos9lo3749b775Jl26dKF58+ZMmjSJESNG8PbbbzvbzZo1i3Xr1hEcHEzr1q0BOHv2LPv27SMvL6/IdS9YsIA777yTwMDAQsv69etHWloa//znP695G0RERERERERERESk9OTm5rJjxw66d+/uMr979+5s2rSpWOuw2+2cPn2aqlWrusw/c+YM9erVo27duvTq1atQppIZDIfD4TA9iohc9374KdP0GH5G1pUbXaNsfE2PAeBOyUoYXo0C3M2P4TA/BkD1vKKz8krTH141TI9hxf7yMPJNjwHWvL9s9pOmxzhlVDE9BkCO3cv0GD5uOabH2HPc/F8wAYRWNv/Ye7kV/UON0vRLs86mxwCosnu76TFsHudMj5FvwTXSzSj+cy2vhbsFcQzM/5rmwDA9BsBN+ebfR2Z72kyP4Zt32vQYAAfsjUyP4elm/r1qVc/fTY8B4NBvY4vNbtG+qpx79aXoi+ukV3XTY/gXmH+/AnDGvbLpMaz4nuLtZu7zOC7Itpv/nd7LyL1yo2tkYP69RD6eV25UCjwt2F85dnNLdQH4GObfDwM0aNjQkjgVyZlvV5V1F5w8W8eQk+P63dzb2xvvP1Vw+u2336hTpw7ffPMNnTp1cs5/+eWXWbhwIfv27btirNdee42ZM2eSnp5OjRrn/03r22+/5aeffqJFixacOnWKOXPm8MUXX7Br1y4aNTLvHlJ3WyIiIiIiIiIiIiIiIpcxY8YMAgMDXaYZM2Zcsr1huP5oy+FwFJpXlCVLljB58mSWLVvmHEAC6NChA4MHD+aWW26hc+fOLF++nPDwcObOnXv1G1UMHqauXeQ6lpGRQbNmzS65fM+ePYSEhFjYIxEREREREREREZEbSDEGXawSFxfH+PHjXeb9OQsJ4KabbsLd3Z0jR464zD969Cg1a9a8bIxly5YxbNgwVqxYwZ133nnZtm5ubtx6663s37+/mFtwdTSIJHIJtWvXJi0t7bLLbyRWpHP75J0xPcYx4ybTYwAEeJi/LT6Yn2qdZ5hfogvgqGdd02N4YH4ZOE/D/PJZbob55WcAvOzml6PIdvM3PYYVxx0gm8I3jaXNirJTefnW3JxbsS12C2JYUWYO4ETLCNNj+O3ZaHoMK467VeXZKgqHw5r9ddLT/PsvNwvKAmV7ml8aF6AW/7YkjtmsKqMkxWdFmUyA4561TI9hRfnwXHdrSqF7WPAdIs9h/vmYb0EMAF/jrOkxrLh+5TrML8/mbVhTYtDNYf5nsBVl3R3laKBCyq+iStcVxcvLi7Zt27Ju3Tr69u3rnL9u3Tp69+59ydctWbKEoUOHsmTJEnr27HnFOA6Hg7S0NFq0aFG8DbhKGkQSuQQPDw/CwsLKuhsiIiIiIiIiIiIich0ZP348Q4YMISIigo4dO/Lee++RkZHBqFGjgPNZTb/++isfffQRcH4A6eGHH2bOnDl06NDBmcXk6+tLYGAgAFOmTKFDhw40atSIU6dO8dZbb5GWlsZf//pXU7dFg0giIiIiIiIiIiIiIlLuOAy3su7CVenfvz/Hjx9n6tSpZGZm0rx5c7744gvq1asHQGZmJhkZGc727777Lvn5+Tz55JM8+eSTzvmPPPIIiYmJAPzxxx+MHDmSI0eOEBgYSOvWrfn6669p166dqdtiOBwOa/KZReS6tv/AYdNj2PJOmB7jX0ao6THAmnJ23pifmp6HNeXschzmlwKzIv3ditJpVpWzc7ebvy15hvnH3Y41N5tnCswvzefjlmN6jN3/DjI9BkDYTSdNj+HpZn5pmLP55pchAWvK2dWxoJxdgcPd9BhuhvnlVAA8LLgWW1F2yu6w5hrp5WZ+WWQrytkVYP57GKy5x7OCytnduPId5v9e2d2C67AX5t97Adgt+MfRc3Y/02NYUdobwBPzP1OsuH5ZUWLQqnJ2VpSXtOLfJtwt+DcDgIYNGlgSpyI5vfX/yroLTgHtrlxiriK6PofxRERERERERERERERExFQqZyciIiIiIiIiIiIiIuWPYZR1D254ykQSERERERERERERERGRQpSJJCIiIiIiIiIiIiIi5Y8Fz46Ty9MREBERERERERERERERkUI0iCQiIiIiIiIiIiIiIiKFqJydiIiIiIiIiIiIiIiUOw7DKOsu3PCUiSQiIiIiIiIiIiIiIiKFaBBJREREREREREREREREClE5OxERERERERERERERKX8M5cGUNQ0iyTWZPHkySUlJpKWllWrb8sgwDD777DP69OnDoUOHqF+/Pjt37qRVq1bXvO7U1FSio6M5ceIElStXvub1XSwxMZFx48bxxx9/XNN68hyepdOhy8j2tJkew9eRbXoMAHcKTI+Rj/nHxG5Rwqqvcdb0GA4LtsXAbnqMfAvORYBcw9v0GH6OM6bHOGuYf10B8HHLMT2Gu2H+daVeVfOPCYCvu/nXYjcLzkc3D4fpMQD89mw0PcavzW43PUZoeqrpMQysOSaGYU0cs1lxXQFrjoubBfde7ka+6TEAch3mfwZbwYrrsJRP3m7mf84XOMz/5yy7Rf9oacW2eBm5psewSi7mXyOtuH55G+afJ3bcTY8B1nzXtuTfJiw4F0WuVxrGu0HExsZiGAaGYeDp6UmDBg2YMGECWVlZ17TeCRMmkJKSUkq9vLyjR4/y2GOPERISgre3N0FBQcTExLB582ZnG8MwSEpKKvG6L94/F089evQosn1wcDCZmZk0b978ajfHFKGhocyePbusuyEiIiIiIiIiIiIiFYCGWG8gPXr0ICEhgby8PDZs2MDw4cPJyspi/vz5JV6Xw+GgoKAAm82GzWbNr7z79etHXl4eCxcupEGDBvz73/8mJSWF33//vVTWf2H/XMzbu+hfuLi7uxMUFFQqcUVERERERERERESkMAdGWXfhhqdMpBvIheyd4OBgBg4cyKBBg5xZO4sWLSIiIoKAgACCgoIYOHAgR48edb42NTUVwzBYs2YNEREReHt7s2HDBiZPnuxSzi01NZV27drh7+9P5cqVue222zh8+LBLPz7++GNCQ0MJDAxkwIABnD59+op9/+OPP9i4cSOvvPIK0dHR1KtXj3bt2hEXF0fPnj2B81k4AH379sUwDOffJd0/F09VqlQpsu2hQ4cwDMNZmu9SmUypqanAlffvBd988w233HILPj4+tG/fnu+++85l+aZNm+jSpQu+vr4EBwczduxYZzZZVFQUhw8f5umnn3bGv9iaNWto2rQpNpuNHj16kJmZWaL9IyIiIiIiIiIiIiI3Fg0i3cB8fX3Jy8sDIDc3l2nTprFr1y6SkpI4ePAgsbGxhV4zceJEZsyYQXp6Oi1btnRZlp+fT58+fYiMjGT37t1s3ryZkSNHugxmHDhwgKSkJJKTk0lOTmb9+vXMnDnzin29kPGUlJRETk7Rz53Ytm0bAAkJCWRmZjr/tsKcOXPIzMx0Tk899RQ1atSgSZMmQPH371/+8hdef/11tm3bRo0aNbj33nudx+i7774jJiaG++67j927d7Ns2TI2btzI6NGjAVi5ciV169Zl6tSpzn5ccPbsWV5//XU+/vhjvv76azIyMpgwYYL5O0ZERERERERERETkKjkMt3Iz3ahUzu4GtXXrVhYvXkzXrl0BGDp0qHNZgwYNeOutt2jXrh1nzpxxKVc3depUunXrVuQ6T506xcmTJ+nVqxcNGzYEoGnTpi5t7HY7iYmJBAQEADBkyBBSUlKIj4+/bH89PDxITExkxIgRvPPOO7Rp04bIyEgGDBjgHMyqXr06AJUrV76qUnPJycmFSvM9++yzTJo06YqvDQwMJDAwEDg/mPPOO+/w5ZdfOvtR3P370ksvOffvwoULqVu3Lp999hkPPvggr732GgMHDmTcuHEANGrUiLfeeovIyEjmz59P1apVcXd3d2Y7XSwvL4933nnHeVxGjx7N1KlTS7iHRERERERERERERORGcuMOn92ALgyS+Pj40LFjR7p06cLcuXMB2LlzJ71796ZevXoEBAQQFRUFQEZGhss6IiIiLrn+qlWrEhsbS0xMDPfcc48zO+dioaGhzgEkgFq1ahVZ1q0o/fr147fffmPVqlXExMSQmppKmzZtSExMLNbrryQ6Opq0tDSX6cknnyzROnbu3MnDDz/MX//6V26//XaX+cXZvx07dnT+f9WqVWncuDHp6ekA7Nixg8TERGdWls1mIyYmBrvdzsGDBy/bLz8/P+cAElx5v+fk5HDq1CmXKfcSGWAiIiIiIiIiIiIiUjFpEOkGcmGQZN++fWRnZ7Ny5Upq1KhBVlYW3bt3x2azsWjRIrZt28Znn30GnC/DdjF/f//LxkhISGDz5s106tSJZcuWER4ezrfffutc7unp6dLeMAzsdnuxt8HHx4du3brx4osvsmnTJmJjY3nppZeK/frL8ff3JywszGWqWrVqsV9/5MgR7r33XoYNG8awYcOc80uyf4tyoRyg3W7nsccecxnk2rVrF/v373cZICpKUfvd4XBcsv2MGTOc2VUXpvffffuKfRUREREREREREREpNYZb+ZluUCpndwO5MEjyZ3v37uXYsWPMnDmT4OBgALZv337VcVq3bk3r1q2Ji4ujY8eOLF68mA4dOlz1+i6nWbNmJCUlOf/29PSkoKDAlFiXk52dTe/evWnSpAlvvPGGy7KS7N9vv/2WkJAQAE6cOMGPP/7ofK5SmzZt+OGHH4o8hhd4eXmVyvbHxcUxfvx4l3k//3L8mtcrIiIiIiIiIiIiItePG3f4TJxCQkLw8vJi7ty5/Pzzz6xatYpp06aVeD0HDx4kLi6OzZs3c/jwYdauXcuPP/5Y6LlIV+P48ePccccdLFq0iN27d3Pw4EFWrFjBq6++Su/evZ3tQkNDSUlJ4ciRI5w4cQI4//ynJk2a8Ouvv142Rk5ODkeOHHGZjh07Vqz+PfbYY/zyyy+89dZb/Oc//3G+Pjc3t0T7d+rUqaSkpPD9998TGxvLTTfdRJ8+fYDzz2favHkzTz75JGlpaezfv59Vq1YxZswYl+3/+uuv+fXXX4vd96J4e3tTqVIll8nL2/uq1yciIiIiIiIiIiIi1x8NIgnVq1cnMTGRFStW0KxZM2bOnMnrr79e4vX4+fmxd+9e+vXrR3h4OCNHjmT06NE89thj19xHm81G+/btefPNN+nSpQvNmzdn0qRJjBgxgrff/m+ZtVmzZrFu3TqCg4Np3bo1AGfPnmXfvn3k5eVdNsbq1aupVauWy3Txc40uZ/369WRmZtKsWTOX12/atKlE+3fmzJk89dRTtG3blszMTFatWoWXlxcALVu2ZP369ezfv5/OnTvTunVrJk2aRK1atZyvnzp1KocOHaJhw4ZUr169WH0XERERERERERERKY8chlFuphuV4bjcg1FERP6/PT/9ZnoMX+Os6TGyHDbTYwB4GzmWxDFbAe6WxPHg8oO8pcFhwe8mDIr/jLerVWBRJVq7BfvLz3HG9BhnDWvOebvD/P3lbphfrvX33EDTYwBU8swyPYabBedjvsOq89H8Lyu/NiveD2euRWh6qukxDKz5amMY+gpVElacj+7kmx7DquOe5/CyJI7ZrDjuUj65G+afjwUWfAZbsR1gzbZUJFZ8T7Hi+uWG+ff2dou+z1tx/2XFv01Y9bkV3jDEkjgVyYld68u6C05Vboks6y6UCX1SiYiIiIiIiIiIiIhIueMwVEytrOkISLmQkZGBzWa75JSRkVHWXRQRERERERERERERuaEoE0nKhdq1a5OWlnbZ5VK2/DC/7FQe3qbH8DJyTY8B1qTYOywob2RVWSArSrRZUeYmH0/TY1iVYu9lQUnGc/ibHsMTa875sw7zt8XNMP/Yn82zpoSSn0e26TE8LSg7le+wpkSIFdd7K0rNHWoaZXqMeunWlLpwc1SMMl1WvLfAmnKcVpTsMSyqBG/FZ71Vx16Kz4r7bquOu8NRMd5f+Q7z7+2h4pR+zLfonxituL+3ohR6tsPX9BiV7cdMjwFw0q2a6TH8OW16jCwCTI8hcr3SIJKUCx4eHoSFhZV1N0RERERERERERESkvDAqxo8TrmcqZyciIiIiIiIiIiIiIiKFaBBJREREREREREREREREClE5OxERERERERERERERKXcchvJgypqOgIiIiIiIiIiIiIiIiBSiTCQRERERERERERERESl3HBhl3YUbnjKRREREREREREREREREpBANIomIiIiIiIiIiIiIiEghKmcnIiIiIiIiIiIiIiLljsNQHkxZ0xEQERERERERERERERGRQjSIJCIiIiIiIiIiIiIiIoWonJ2IiIiIiIiIiIiIiJQ/hlHWPbjhKRNJREREREREREREREREClEmkogUyxkqmR7DnzOmxzjr8Dc9BoCnkWd6DDfspsfIdviYHgMgKOeQ6TGOeoeYHsPbyDY9hmE4TI8BcM7uZ3qMAE6aHiOLANNjALgZ5p+PBuYfe0/3AtNjALhXkP1lxXEHcGD+L++s2F/10tebHuNw00jTYwDUT//K9BiWXO+t+Uix5P1lBcOCey+AAjzNj+FwNz2Gn5FlegyAPLwsiWM2K671VrHie4olMRzW3BflG+af81acJx7kmx4DIN+Ca6QV7y93w/z3V46H+d/pALwcuabHyMPb9BhemL8dItcrZSLJdWfy5Mm0atWq1NuKiIiIiIiIiIiISPnhwK3cTDeqG3fLxXSxsbEYhoFhGHh6etKgQQMmTJhAVta1/SJtwoQJpKSklFIvL+/o0aM89thjhISE4O3tTVBQEDExMWzevNnZxjAMkpKSSrzuC/tn1KhRhZY98cQTGIZBbGzsNfReREREREREREREROTqqZydmKpHjx4kJCSQl5fHhg0bGD58OFlZWcyfP7/E63I4HBQUFGCz2bDZbCb0trB+/fqRl5fHwoULadCgAf/+979JSUnh999/L5X1BwcHs3TpUt588018fX0ByM7OZsmSJYSEXHvprby8PDw9zU/1FhERERERERERESltDqPilHy9XikTSUx1IXsnODiYgQMHMmjQIGfWzqJFi4iIiCAgIICgoCAGDhzI0aNHna9NTU3FMAzWrFlDREQE3t7ebNiwoVCJutTUVNq1a4e/vz+VK1fmtttu4/Dhwy79+PjjjwkNDSUwMJABAwZw+vTpK/b9jz/+YOPGjbzyyitER0dTr1492rVrR1xcHD179gQgNDQUgL59+2IYhvPv4mrTpg0hISGsXLnSOW/lypUEBwfTunVrl7arV6/m9ttvp3LlylSrVo1evXpx4MAB5/JDhw5hGAbLly8nKioKHx8f3nvvPSpVqsT//u//uqzr888/x9/fv1j7QURERERERERERERuTBpEEkv5+vqSl5cHQG5uLtOmTWPXrl0kJSVx8ODBIsu3TZw4kRkzZpCenk7Lli1dluXn59OnTx8iIyPZvXs3mzdvZuTIkRgXjVAfOHCApKQkkpOTSU5OZv369cycOfOKfb2Q8ZSUlERO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w4pSiWBNiSMrtsWKkoxgTTlOK/aXmwXbAWC3oCSUFawoVW3VOV9RWFWWr8CCIkFWHHur3l/WXL8qRjk7X4c1ZUVzDPP/ncXdgnsJK85FgMYNgy2JU5H8+uN3Zd0FpzrhLcq6C2Wi4nzzFSkhDw8PwsLCyrobIiIiIiIiIiIiIiLlkgaRRERERERERERERESk3FEmbdnTM5FERERERERERERERESkEA0iiYiIiIiIiIiIiIiISCEqZyciIiIiIiIiIiIiIuWOw1AeTFnTERAREREREREREREREZFClIkkIiIiIiIiIiIiIiLljgOjrLtww1MmkoiIiIiIiIiIiIiIiBSiQSQREREREREREREREREpROXsRERERERERERERESk3HEYyoMpazoCIiIiIiIiIiIiIiIiUogGkURERERERERERERERKQQlbMTEREREREREREREZFyx4FR1l244WkQScq9yZMnk5SURFpaWqm2tcKhQ4eoX78+O3fupFWrVmXdnWvicFhwwbYghJthNz8IYLcg0dOKVFIPI9+CKJDn5m16DHdHgekxChzmf6waOEyPAda8hz3seabHyDc8TY9hFSuOvVXXSKvex2arKNtRkRiGNcek4d4U02McaNLV9BhWbAeAgfnXFiv+acHdovuiXIf590VWsOoaWVGuxRXpH8isOFfsDnfTY1j13qpIx94KVuwvK469O+Z/P80zrPk8sWJ/2ak457zI9Ujl7KRUxcbGYhgGhmHg6elJgwYNmDBhAllZWVe9zgkTJpCSYv4X3Av9vtQUGxtreh9ERERERERERERE5DyH4VZuphuVMpGk1PXo0YOEhATy8vLYsGEDw4cPJysri/nz55doPQ6Hg4KCAmw2GzabzaTe/ldmZqbz/5ctW8aLL77Ivn37nPN8fX1d2ufl5eHpWXF+4S4iIiIiIiIiIiIicrEbd/hMTOPt7U1QUBDBwcEMHDiQQYMGkZSUxKJFi4iIiCAgIICgoCAGDhzI0aNHna9LTU3FMAzWrFlDREQE3t7ebNiwgcmTJ7uUgktNTaVdu3b4+/tTuXJlbrvtNg4fPuzSh48//pjQ0FACAwMZMGAAp0+fvmK/g4KCnFNgYCCGYTj/zs7OpnLlyixfvpyoqCh8fHxYtGgRAAkJCTRt2hQfHx+aNGnCvHnzLhmjoKCAYcOGUb9+fXx9fWnc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H3+85rhRUVGMGzfumtdTmj799FOioqIIDAzEZrPRsmVLpk6dyu+//17WXRMRERERERERERERKTENIsk1iY6O5syZM2zfvt05b8OGDQQFBbFt2zbOnj3rnJ+amkrt2rUJDw8vi65etby8K2dIPP/88/Tv359bb72Vv//973z//ffMmjWLXbt28fHHH1vQSxERERERERERERGR0qVBJLkmjRs3pnbt2qSmpjrnpaam0rt3bxo2bMimTZtc5kdHR5Obm8vEiROpU6cO/v7+tG/f3uX1x48f56GHHqJu3br4+fnRokULlixZ4lweGxvL+vXrmTNnDoZhYBgGhw4dci7fsWMHERER+Pn50alTJ/bt2+fS588//5y2bdvi4+NDgwYNmDJliksmlWEYvPPOO/Tu3Rt/f3+mT59+2X2wdetWXn75ZWbNmsVrr71Gp06dCA0NpVu3bnz66ac88sgjRb7ObrczdepU6tati7e3N61atWL16tUu+8swDJeydGlpaYW2NzExkZCQEPz8/Ojbty/Hjx93Ljt06BBubm4ug3wAc+fOpV69ejgsKCUlIiIiIiIiIiIicjUcGOVmulFpEEmuWVRUFF999ZXz76+++oqoqCgiIyOd83Nzc9m8eTPR0dE8+uijfPPNNyxdupTdu3fzwAMP0KNHD/bv3w9AdnY2bdu2JTk5me+//56RI0cyZMgQtmzZAsCcOXPo2LEjI0aMIDMzk8zMTIKDg53xn3/+eWbNmsX27dvx8PBg6NChzmVr1qxh8ODBjB07lj179vDuu++SmJhIfHy8yza99NJL9O7dm++++87l9UX55JNPsNlsPPHEE0Uuv9TzmebMmcOsWbN4/fXX2b17NzExMdx7773O/VAcW7ZsYejQoTzxxBOkpaURHR3tMugVGhrKnXfeSUJCgsvrEhISiI2NxTBu3IufiIiIiIiIiIiIiFyeBpHkmkVFRfHNN9+Qn5/P6dOn2blzJ126dCEyMtKZYfTtt99y7tw5oqKiWLJkCStWrKBz5840bNiQCRMmcPvttzsHOurUqcOECRNo1aoVDRo0YMyYMcTExLBixQoAAgMD8fLyws/Pj6CgIIKCgnB3/+/DAuPj44mMjKRZs2Y899xzbNq0iezsbOey5557jkceeYQGDRrQrVs3pk2bxrvvvuuyTQMHDmTo0KE0aNCAevXqXXb79+/f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kDOM86PdFwZs7HY7U6ZM4b777iv0uosze4o7YHWx4OBgGjVqRKNGjbDZbPTr1489e/ZQo0YNAO655x6Cg4N5//33qV27Nna7nebNm19xuy63PUWZMWMGU6ZMcZn3+JhneGLshEu8QkREREREREREREQqGg0iSbkRHR1NamoqJ06c4C9/+YtzfmRkJGvWrOHbb7/l0UcfpXXr1hQUFHD06FE6d+5c5Lo2bNhA7969GTx4MHB+wGT//v00bdrU2cbLy4uCgoIS97NNmzbs27ePsLCwEr+2JCIjI2nevDnx8fHMmTOH48ePk56ezrvvvuvc7o0bN5oSOy4ujvHjx7vM++mXE6bEEhERERERERERESmKA5WzK2saRJJyIzo6mieffJK8vDxnJhKcH0x5/PHHyc7OJjo6muDgYAYNGsTDDz/MrFmzaN26NceOHeMf//gHLVq04O677yYsLIxPP/2UTZs2UaVKFd544w2OHDniMogUGhrKli1bOHToEDabzaVs3OW8+OKL9OrVi+DgYB544AHc3NzYvXs33333HdOnTy/VffLMM8/wwAMPMHHiRGrVqkW1atV47733qFWrFhkZGTz33HOlGu8Cb29vvP9Uus7L+6wpsURERERERERERESkfHIr6w6IXBAdHc25c+cICwujZs2azvmRkZGcPn2ahg0bEhwcDEBCQgIPP/wwzzzzDI0bN+bee+9ly5YtzuWTJk2iTZs2xMTEEBUVRVBQEH369HGJN2HCBNzd3WnWrBnVq1cnIyOjWP2MiYkhOTmZdevWceutt9KhQwfeeOMN6tWrVzo74iK9evUiNDSU+Ph43NzcWLp0KTt27KB58+Y8/fTTvPbaa6UeU0RERERERERERKQ8cDiMcjPdqAyHw+Eo606ISPn3/U9HTI/hZ2SZHiMX7ys3KgUG5l9arUjnLXC4X7lRKQi0Hzc9xim34mUblneGYc3HtjslL/dZUpVzjpoe45hXbdNjALgb5u8vNy79LLvScjyvsukxAEL52fQYZzwrmx7DlveH6TEATnjWMD2Gl5Fjegy7BZ8phgXnCUA+nldudI08jeI9y/NaWPVFONvha3oMDyPf9BgHmnQ1PQbAB48lmx6jWq0qpseYMCDb9BhgzedjRbm3t6ockN+sceYHeXqa6SHshjXfhfLdzP9MybH7XLnRNfJ2s+acz3N4mR7DiuuKl8P8/WXZe9iC+6JsC97Dvm7nTI8B0Khh6f8IvaL7Zs+Zsu6C023NbGXdhTKhTCQREREREREREREREREpRINIIhYYNWoUNputyGnUqFFl3T0RERERERERERGRcseBUW6mG5XK2YlY4OjRo5w6darIZZUqVaJGDfPL1Fyrwz/tMz1GFgGmx7Aqxd6K8jBWlDVzt5tfGgbgd3s102NUcT9hegwrWHXTUoCH6TGO5ZpfSifIy/ySeQAFmF8qwopjUu3cv0yPAZDhFW56DF9386/3v+cEmh4DoJb3v02PYUW5VytKw9gt+o2cFSU/8y045604JgD/u8380qKdW5h/zr85/zfTYwAMf7eX6TGaP9rU9Bj5z71hegyAAof554oV919WlMyzIgbAi++av7+eHWF+mUw3i/aXp1ue6TF8ML9MVzbmHxOwpgSvFdeVPIf5JeCsOuc9DQvew3bzH39w1s38f5MCaNww2JI4FcnGPeYf/+K6vZl/WXehTJh/VRQRatSocV0MFImIiIiIiIiIiIiIXKBBJBERERERERERERERKXfsqqNW5vRMJBERERERERERERERESlEmUgiIiIiIiIiIiIiIlLuWPVsaLk0ZSKJiIiIiIiIiIiIiIhIIRpEEhERERERERERERERkUJUzk5ERERERERERERERModh0Pl7MqaMpFERERERERERERERESkEA0iiYiIiIiIiIiIiIiISCEqZyciIiIiIiIiIiIiIuWOw1HWPRBlIomIiIiIiIiIiIiIiEghGkQSERERERERERERERGRQlTOTkREREREREREREREyh07Rll34YanTCQREREREREREREREREpRJlIFpg8eTJJSUmkpaWVdVdISkpiwoQJHDx4kDFjxjB79uyy7pJcQmhoKOPGjWPcuHFXvY7SfO+5OQqueR1XpB8WlDsGenpheeMwLDpRLDj0BQ5302MYDrvpMQAchqclcaT4HA7zzxVPNws+GysQhwUf9FZcVwDcDGuuLWaz4pgA3BJu/odKgNc502NUq1XF9BgAzR9tanqM7xPSTY9heyrI9BgAgV5Zpsc4m+9jeoxAzzOmx8ixe5keA+CX9O9Nj5Fb0Mr0GD7uOabHAGu+c1lyT2zV1xQL7vGs+Hy04rhb9Tlv+dK+JQABAABJREFURRyrtkXKJyvOe7m8GyYTKTY2FsMw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6g7V+Pb8/fffNGvWjHPnzjF58mTq1q2Lm5sbv/32G8uWLWPZsmX8+9//znLfK1eu4OZWcL45KyIiIiIiIiIiInK7NEos/2kk0j3M3d2dwMBASpcuTcuWLenatStff/01AFarlUmTJlG6dGnc3d0JDQ1l/fr1DvtHRkZSpUoVvLy8qFixImPHjiUtLc2hzOuvv06JEiXw8fGhb9++XL58Odf1+/LLL3nllVdo3bo15cuXp27dugwePJhnnnnGXsZisbB69WqH/fz8/FiyZAkAiYmJWCwWPvnkE8LCwvDw8OCjjz7Cx8cHgEceeQSLxcKWLVs4ffo03bp1o3Tp0nh5eVGzZs1MHWpWq5Xp06dTqVIl3N3dKVu2LFOmTLFvP378OF27dqVIkSIEBATQvn17EhMTc9XeV155haSkJHbs2EGfPn2oVasWVatWpU2bNixbtowXXnjBXrZ8+fK89tpr9O7dG19fX/r37w9kf03i4+OxWCwcOHDAIe6bb75J+fLlsf3/BKH79++ndevWeHt7U6JECZ5++mn++uuvXLVBREREREREREREROQadSIVEL///jvr16/H1fVqnu45c+Ywa9YsZs6cyd69e4mIiKBdu3YkJCTY9/Hx8WHJkiXs37+fOXPmsGDBAt566y379k8++YTx48czZcoUdu7cScmSJXn33XdzXafAwEDWrVvH+fPnb7t9kZGRDBkyhLi4OB599FHi4+MB+Pzzz0lOTqZJkyZcvnyZunXrsnbtWn799VcGDBjA008/zY4dO+zHGT16NNOnT2fs2LHs37+fZcuWUaJECQAuXrxIeHg43t7ebN26lR9++AFvb29atWrFlStXsq2f1WplxYoV9OzZk6CgoCzLWCyOveZvvPEGNWrUYNeuXYwdOxbI/poEBwdTt25doqKiHI6zbNkyunfvjsViITk5mYcffpjQ0FB27tzJ+vXr+eOPP+jSpUsezraIiIiIiIiIiIiICFhs14YvyD2ld+/efPTRR3h4eJCRkWEfIfTmm2/y0ksvERQUxL///W9eeeUV+z4NGjSgfv36/Oc//8nymG+88QYrVqxg586dADRp0oTatWvz3nvv2cs0atSIy5cvExsbm2Mdt27dSo8ePfjjjz+oXbs2zZo148knn6Rp06b2MhaLhVWrVtGhQwf7Oj8/P2bPnk3v3r1JTEykQoUKzJ49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q6srDz30EA899BCjRo3itddeY9KkSURGRuLm5obFYrF3sFxz47xM19qbk1mzZvHWW28xe/ZsatasSaFChRg6dKg9FZ2np2e2+1utVurWrUtUVFSmbcWKFct232LFiuHn58f+/fuz3H7gwAEsFgsPPPBAju0A6NWrF6NGjWL79u1s376d8uXL89BDD920fKlSpYiNjbX/vnLlSj7//HOHthQuXPim+1/blpKSgp+fn8O2s2fP4uvr67Du+tSJcPVeu3H+oqxcu/9yulYAbdu2xWq18tVXX1G/fn2+//573nzzTft2q9XKxIkT6dixY6Y4Hh4eme6r6+NnZ9q0aUycONFh3b8Hv8SgF4fluK+IiIiIiIiIiIjInXA/p5G7W9zTnUg3Gj9+PI8//jjPP/88pUqVolSpUvzwww80b97cXiY6OpoGDRoAsG3bNsqVK8eYMWPs248cOeJwzJCQEGJiYujVq5d9XUxMzG3Vs1q1aqSnp3P58mXc3NwoVqyYw9w/CQkJXLx48ZaO/f3339O+fXt69uwJXO1kSEhIsKeYq1y5Mp6enmzatMmewu56derUYcWKFRQvXjzbDpesODk50aVLF6Kiopg0aZLDvEiXLl3i3XffJSIiAn9//1wdLyAggA4dOrB48WK2b99Onz59si3v4uJi71QEKF68OJ6eng7rslO5cmWcnJz46aefKFeunH19cnIyx48fJzg4OFfHuV5MTAxly5YFrs5ndPDgQapWrQrkfK3gaqdfx44diYqK4rfffqNKlSrUrVvXvr1OnTrEx8fftI3VqlUjKSmJEydOUKpUKQC2b9+eY71Hjx7NsGGOHUaJx/7MQ8tFRERERERERERE5F5XoDqRwsLCqF69OlOnTmXu3Lm8/PLLjB8/ngceeIDQ0FAWL15MbGysfWRKpUqVSEpKYvny5dSvX5+vvvrKPl/NNS+++CLPPPMM9erVo1mzZkRFRbFv3z4qVqyY6zp169aNevXqERAQwP79+3nllVcIDw+3d9I88sgjzJ07l0aNGmG1WomMjMw0yiW3KlWqxOeff050dDRFihThzTff5OTJk/aOCQ8PDyIjIxk5ciRubm40bdqUP//8k3379tG3b1969OjBG2+8Qfv27Zk0aRKlS5cmKSmJlStX8vLLLzukRcvKlClT2LRpE4899hgzZsygRo0aHD58mFdffZW0tDT+85//5Kk9/fr1o02bNmRkZPDMM8/c0jnJLR8fH5577jmGDx+Oi4sLtWvX5sSJE4wZM4aQkBBatmyZ52NOmjSJgIAASpQowZgxYyhatCgdOnQAcr5W1/To0YO2bduyb98+e4fTNePGjaNNmzaUKVOGzp074+TkxN69e/nll1947bXXaNGiBcHBwfTq1YtZs2Zx7tw5h07Tm3F3d8fd3d1hnZv7uTy3X0RERERERERERORWWTUSKd/d03MiZWXYsGEsWLCAo0ePMmTIEIYPH87w4cOpWbMm69evZ82aNVSuXBmA9u3b89JLLzFo0CBCQ0OJjo5m7NixDsfr2rUr48aNIzIykrp163LkyBGef/75XNcnIiKCpUuX0rJlS0JCQuxzN33yySf2MrNmzaJMmTI0b96c7t27M2LECLy8vG6p/WPHjqVOnTpEREQQFhZGYGCgvdPi+jLDhw9n3LhxhISE0LVrV/tcPl5eXmzdupWyZcvSsWNHQkJCePbZZ7l06VKuRiYVLVqUmJgYwsPDee6556hYsSJdunShYsWK/PTTT7nufLumRYsWlCxZkoiICPtIGiO99dZb9OvXj1deeYXq1avTo0cPKlSowNdff42LS977XF9//XVefPFF6tatS3JyMmvWrMHNzQ3I3bWCq52M/v7+xMfH0717d4dtERERrF27lm+++Yb69evTqFEj3nzzTftIKicnJ1atWkVqaioNGjSgX79+TJkyJe8nRkRERERERERERETuOxZbVpOmiNwlLl68SKlSpVi0aFGW8/7crbZs2UJ4eDhnzpzJNL/SverAoWOGx3Ai5zml5P9YMP7t20bOc2iJucy47gBWE75n4ky64TGsOBseAwrO69Gs17wZ58us14oZCsp7cUF5nUDBaovcn9Jst5b5Ii9cLZnn+ZWbS6j6mOExKh/4xvAYYM77l54l8kafKfcns+5h3V95U+WBsvldhXvO+5vyuwb/p9+j+V2D/FGg0tlJwWG1Wjl58iSzZs3C19eXdu3a5XeVRERERERERERERMREGgKT/9SJdJu8vb1vuu1///sfDz30kIm1MZ5Z7U1KSqJChQqULl2aJUuW3FIqORERERERERERERERuXX6z/xtio2Nvem2oKAg8ypiErPaW758ee7lTIthYWH3dP3l3qDUVndfDHNSd5iV9tH4dHa2AjQ1Y0FJ4WBGikGADBMeQc14zZuR9hEKTjqdgvI6gYLVloKiIL3mzUjxnGp1MzyGq7PS2eWFGanmzEiZB1DpwEZT4hitIP0tVFBSDJoVx8mSYXiMdBPSijphfDsArCY825vx2ajnO5GbUyfSbapUqVJ+V8FU91t7RURERERERERERCR/WDWFer4rOF8BFhERERERERERERERkTtGI5FEREREREREREREROSuoxlD8p9GIomIiIiIiIiIiIiIiEgm6kQSERERERERERERERGRTJTOTkRERERERERERERE7jpKZ5f/NBJJREREREREREREREREMlEnkoiIiIiIiIiIiIiIiGSidHYiIiIiIiIiIiIiInLXsSqdXb7TSCQRERERERERERERERHJRCORRERERERERERERETkrmOz3U1DkSz5XYF8oZFIIiIiIiIiIiIiIiIikok6kURERERERERERERERCQTpbMTkVxJs7kaHqOQ5YLhMa7gbniMgiTdZs7HRBHrn4bHOOtU1PAYZnCyOJsSx5kMw2MUuXTC8Bh/eJQ3PAaAiyXd8BjOGB/j1BVzXiflnQ4bHuOSq7fhMQqn/mV4DIDTriUNj+HudNnwGDab8akfnLAaHgMgHeOfi5xNeF8x45oABP75i+ExzvpXNDyGbfZ4w2MAjPR+y/AYR+N+NTzGgtmVDI8B5rzubSakrrFgfKqeSgc2Gh4D4LeqLQyP8cCBTYbH8LKeNzwGQJqz8X+jXrG6GR7Dw+mS4TEA0mzGt8WElyOuXDE+iEmsJpywS1ZPw2N4Of1jeAy5NXdVNrv7lEYiGWjChAmEhobmdzUAWL16NZUqVcLZ2ZmhQ4fmd3UkF8LCwm77Wi1ZsgQ/P787Uh8RERERERERERERub8U+E6k3r17Y7FYsFgsuLi4ULZsWZ5//nnOnDmT31Vz8M8//xAZGUnFihXx8PCgWLFihIWFsXbt2jty/Oeee44nn3ySo0ePMnny5DtyzFu1fv16LBYLJ0+edFgfGBhImTJlHNYdO3YMi8XC119/neNxt2zZgsVi4ezZs3eyutlq2bIlzs7OxMTEmBbzdtxNHZsiIiIiIiIiIiIicncr8J1IAK1atSI5OZnExETef/99vvzyS1544YX8rpaDgQMHsnr1aubOncuBAwdYv349nTp14vTp07d13LS0NC5cuMCpU6eIiIigVKlS+Pj43KFa35pmzZrh4uLCli1b7Ovi4uK4fPky586d47fffrOv37x5M66urjRt2tSw+ixZsoSwsLA875eUlMT27dsZNGgQCxcuvPMVExEREREREREREbmPWa13z3K/ui86kdzd3QkMDKR06dK0bNmSrl27OoxssVqtTJo0idKlS+Pu7k5oaCjr1693OEZkZCRVqlTBy8uLihUrMnbsWNLS0hzKvP7665QoUQIfHx/69u3L5cu5zy3/5Zdf8sorr9C6dWvKly9P3bp1GTx4MM8884y9jMViYfXq1Q77+fn5sWTJEgASExOxWCx88sknhIWF4eHhwUcffWTvNHrkkUewWCxs2bKF06dP061bN0qXLo2Xlxc1a9bk448/dji21Wpl+vTpVKpUCXd3d8qWLcuUKVPs248fP07Xrl0pUqQIAQEBtG/fnsTExBzb6u3tTf369R06kbZs2UKzZs1o1qxZpvUNGjSgUKFC2Gw2ZsyYQcWKFfH09KR27dp89tln9raHh4cDUKRIESwWC717986xLrdj8eLFtGnThueff54VK1bwzz+OuVM/++wzatasiaenJwEBAbRo0cJepnfv3nTo0IGJEydSvHhxChcuzHPPPceVK445ca1WKyNHjsTf35/AwEAmTJjgsP3NN9+kZs2aFCpUiDJlyvDCCy9w4ULW8wotWbKEiRMnsmfPHvvovGv3joiIiIiIiIiIiIjIje6LTqTr/f7776xfvx5X1/+bDHfOnDnMmjWLmTNnsnfvXiIiImjXrh0JCQn2Mj4+PixZsoT9+/czZ84cFixYwFtv/d+Ep5988gnjx49nypQp7Ny5k5IlS/Luu+/mul6BgYGsW7eO8+dvf+LGyMhIhgwZQlxcHI8++ijx8fEAfP755yQnJ9OkSRMuX75M3bp1Wbt2Lb/++isDBgzg6aefZseOHfbjjB49munTpzN27Fj279/PsmXLKFGiBAAXL14kPDwcb29vtm7dyg8//IC3tzetWrXK1BGSlfDwcDZv3mz/ffPmzYSFhfHwww9nWn+tc+jVV19l8eLFvPfee+zbt4+XXnqJnj178t1331GmTBk+//xzAOLj40lOTmbOnDm3fS5vxmazsXjxYnr27EnVqlWpUqUKn3zyiX17cnIy3bp149lnnyUuLo4tW7bQsWNHbNfNBLdp0ybi4uLYvHkzH3/8MatWrWLi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kp49exISEsJLL71E586d+e9//3tbx4yKisLb2zvLpXr16neo5gVb9erVb3oOo6Ki7misbdu2Ua5cOXbt2sW8efNu6RhG3EciIiIiIiIiIiIiIjejdHb3qPPnz/PHH39kuc3V1ZVy5cqZXKN7z5EjR0hLS8tyW4kSJfDx8TG5Rne3g4eS8rsKd4RZaUjMSBXhZEIqHasJKbqg4KTvMOv+MoNZKY6MZtY1KSj3sFlpblwsWX/+3knpttzNn3g7zGgHmNMWM+5hM9I+umBOGla9R+aNGelxrTYT0opazEljeMXmbkocoxWUtI+Sd2a85m02459ZLtm8DI8B5qTm251cyvAYvuFVDY8BELT/B8NjeDldMjzGRRNSuruY9LllhvNpxr8ea2+fZXgMAK9nJ5oSpyB5cc75/K6C3ZwX78//Fyud3T3Kx8dHnRy3SR1tIiIiIiIiIiIiIiI3p04kERERERERERERERG561iVSC3fFYw8DCIiIiIiIiIiIiIiInJHqRNJREREREREREREREREMlE6OxERERERERERERERuevYrEpnl980EklEREREREREREREREQyUSeSiIiIiIiIiIiIiIiIZKJ0diIiIiIiIiIiIiIictdROrv8p5FIIiIiIiIiIiIiIiIikolGIomIiIiIiIiIiIiIyF1HA5Hyn0YiiYiIiIiIiIiIiIiISCbqRBIREREREREREREREZFMlM5ORERERERERERERETuOjbls8t36kS6wywWC6tWraJDhw65Kr9lyxbCw8M5c+YMfn5+htbNTNefh8TERCpUqMDu3bsJDQ296T5hYWGEhoYye/Zs0+p5u3LbtustWbKEoUOHcvbsWUPrBnf2nGbgfPsVyoEL6YbHMKMdAFab8QM9XS3Gf4g6kWF4DIAMfRzddawmDFZ2s6QaHsNiM+dhMw03w2PYsBgew53LhscAuGJzNyWO0S5bPU2J42m5aHiMKxh/TVy5YniMdFwNj2EWM17zziZ9zqfZjH+PdMJqeAwz2gHmfD7abMbfX1aTnrstGP9Zb8br0QxmnCsoOK/5yxnmPK94ORvflh93/2N4jN77fzA8BsDxas0Mj1HpwEbDYySe9Tc8RsuLnxoeA8By9HfDY2wMGWl4jAuN2hoeA8DLlCgid5bS2d2C3r1737STKDk5mccff/yOxpswYUKuOyiut3v3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rcpPP/3ksO5OXfOEhAQSExNp2bJlno+X3XGzMnr0aFJSUhyWAQMH3XJcEREREREREREREbn3qBPpFqWkpBAbG+uwJCUlOZTp3r07VquVAQMGEBcXx4YNG5g5cyaQt9E65cuX5/Dhw8TGxvLXX385dEplpVChQrz//vt89dVXtGvXjo0bN5KYmMjOnTsZOXIkAwcOBOCFF17g6NGjDB48mAMHDvDFF18wfvx4hg0blut0aS1atCA4OJhevXqxZ88evv/+e8aMGZPtPuXKlcNisbB27Vr+/PNPLly4kKlM5cqVad++Pf379+eHH35gz5499OzZk6CgoFyPxDl8+DCjR49m+/btHDlyhK+//vqWOqEAPDw8mDhxIm+//Xa25Z577jkOHDhAZGQkBw8e5JNPPmHJkiVA3q/53r17iY+P56+//iItLY0vvviCFi1a4OXl5VA2IyMj0724f//+mx5369atHD9+nL/++uum8d3d3SlcuLDD4ubunuv6i4iIiIiIiIiIiMi9T51It2jLli08+OCDDsu4ceMcyhQuXJgvv/yS2NhYQkNDGTNmjL3M9fMk5aRTp060atWK8PBwihUrxscff5zjPu3btyc6OhpXV1e6d+9O1apV6datGykpKbz22msABAUFsW7dOn788Udq167NwIED6du3L6+++mqu6+bk5MSqVatITU2lQYMG9OvXjylTpmS7T1BQEBMnTmTUqFGUKFGCQYOyHuGyePFi6tatS5s2bWjcuDE2m41169ZlSgV3M15eXhw4cIBOnTpRpUoVBgwYwKBBg3juuedy3b7rPfPMM1SsWDHbMhUqVOCzzz5j5cqV1KpVi/fee8/eqeaeh06Y/v37ExwcTL169ShWrBjbtm3jiy++yLID7cKFC5nuxdatW2d53EmTJpGYmMgDDzxAsWLFcl0fEREREREREREREbPZrLa7ZrlfWWz3czK/fBAVFUWfPn1ISUnB09Mzv6sjJpgyZQrz5s3j6NGjt3yMv/76i5IlS3L06FECAwPvYO1yL+7QccNjuJBueIwMnA2PAWC1Gd9H72pJMzyGhVubmy2vMnAxJY7RLBScj1QzXituluxH1t4JFpMec9JwMzyGjdufczAn7lw2PAbAFQrG6NZ0mznvXZ6W7OdkvBPMuCYuGP+5lU7uvmx0LzDjNe9M7lNm3w6rCd9ddDLhmcWMdgC4Wq4YHsNmM/7+spr03G3G85cZr0czmPWsasZzpBmv+ZT0wobHAPByvmR4jAX/8zE8Ru9WxrcD4Hi1ZobHqHRgo+Ex4v4uZXiMlhc/NTwGgOXo74bH2Bgy0vAYDT1jDY8BULxaPVPiFCR9J/+Z31WwWzj2/vxSfsH4r91d7IMPPqBixYoEBQWxZ88eIiMj6dKlizqQCrB3332X+vXrExAQwLZt23jjjTduOtoqt/7++2/efPPNfOtAEhEREREREREREZH7jzqRDHby5EnGjRvHyZMnKVmyJJ07d84x3VtOoqKibpqSrVy5cuzbt++2jn8/qF69OkeOHMly2/z58+nRo8ctHzshIYHXXnuNv//+m7JlyzJ8+HBGjx59y8cDqFKlClWqVLmtY4iIiIiIiIiIiIjcS+7nNHJ3C6WzuwedP3+eP/74I8ttrq6ulCtXzuQa3XuOHDlCWlrWKVVKlCiBj4/xQ73vNQcPJeV3FeQGSt0h97qClP5Pr5X7k1n3cEG5v/S5lTcF6T3SDAXp2pvBjPNl1j2sVJm552wxPn04gNVmfDo7vebzxowUg2alSDXj2v9WtYXhMSof+MbwGHpWzRuzzlflB/R/27x6duKp/K6C3aLxxfO7CvlCI5HuQT4+PurkuE3qaBMRERERERERERG5u1k1BibfmTMzqIiIiIiIiIiIiIiIiNxT1IkkIiIiIiIiIiIiIiIimSidnYiIiIiIiIiIiIiI3HVsVqWzy28aiSQiIiIiIiIiIiIiIiKZqBNJREREREREREREREREMlE6OxERERERERERERERuevYbEpnl980EklEREREREREREREREQy0UgkERERERERERERERG561itGomU3zQSSUREREREREREREREJB+cOXOGp59+Gl9fX3x9fXn66ac5e/ZstvtYLJYslzfeeMNeJiwsLNP2p556Ks/100gkERERERERERERERGRfNC9e3eOHTvG+vXrARgwYABPP/00X3755U33SU5Odvj9f//7H3379qVTp04O6/v378+kSZPsv3t6eua5fupEEhERERERERERERGRu46tgKezi4uLY/369cTExNCwYUMAFixYQOPGjYmPjyc4ODjL/QIDAx1+/+KLLwgPD6dixYoO6728vDKVzSulsxMREREREREREREREclGamoq586dc1hSU1Nv65jb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FStWULx4cQoXLnxLx3Bzc6NSpUqZ1pcoUYKgoCB+//13evTocVv1DAkJ4YcffqBXr172ddHR0YSEhABQrVo1kpKSOHHihD2F3Pbt23N9/HXr1nH+/Hl2797t0PFz4MABevTowenTpwkICMi0n5ubGxkZGQ7rHnzwQTIyMjh16hQPPfRQntqZk2rVqrF06VL++ecfe8fbtm3bcHJyokqVKhQuXJhSpUrxww8/0Lx5c/t+0dHRNGjQ4Jbjjh49mmHDhjmsO3Hs6C0fT0RERERERERERCSvshpMIOZSOrv7TI8ePShatCjt27fn+++/5/Dhw3z33Xe8+OKLHDt27LaPP2HCBKZNm8acOXM4ePAgv/zyC4sXL+bNN9/M03FefvlllixZwrx580hISODNN99k5cqVjBgxAoAWLVoQHBxMr1692LNnD99//z1jxozJ9fEXLlzIE088Qe3atalRo4Z96dSpE8WKFbtpDsry5ctz4cIFNm3axF9//cXFixepUqUKPXr0oFevXqxcuZLDhw/z008/MX36dNatW5endt+oR48eeHh48Mwzz/Drr7+yefNmBg8ezNNPP02JEiXs52r69OmsWLGC+Ph4Ro0aRWxsLC+++OItx3V3d6dw4cIOy7URZyIiIiIiIiIiIiJyf1An0n3Gy8uLrVu3UrZsWTp27EhISAjPPvssly5duuWRSdfr168f77//PkuWLKFmzZo8/PDDLFmyhAoVKuTpOB06dGDOnDm88cYbVK9enfnz57N48WLCwsIAcHJyYtWqVaSmptKgQQP69evHlClTcnXsP/74g6+++opOnTpl2maxWOjYsSMLFy7Mct8mTZowcOBAunbtSrFixZgxYwYAixcvplevXgwfPpzg4GDatWvHjh07KFOmTJ7afSMvLy82bNjA33//Tf369XnyySd59NFHmTt3rr3MkCFDGD58OMOHD6dmzZqsX7+eNWvWULly5duKLSIiIiIiIiIiIiL3N4tN48FEJBcOH/rN8BiXbF6Gx/C0XDQ8BoCN3M/RdavScDM8hjPphscASMc150K3ydVyxfAYGTbjs8RaMOdj20LWc6bdSWa85t0tqYbHAHOuixnvK64Y/zoBc9qSYULWZjNeJwCpNg/DY7hbLhse47LN0/AYzpaMnAvdI5wxvi1mfaY4mXBd0mzGPxd52Mx5jvwHH8NjmHHt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Oztb0BhERERERERERGTbmEQiIiISyZQpU1BWVobU1FR89dVX+nlF+/btE2ReUWNjI3JzcyGXy3Hjxg1Mnz4dHR0d2L17t9kqnYiIiIiIiIiIyHbZ6XQ6naUPQURE9KQzdV5RWFgYDh48iEmTJmHWrFmYOHEiHBwc4OTkBLVazSQSERERERERERE9MlYiERERWUhLSwvy8/ORlZUFtVoNjUbz2HtVVVUhNjYWixcvhre3t4CnJCIiIiIiIiKiJ5W9pQ9ARET0pFEqlZg1axaee+45pKenIywsDEePHjVpz5qaGrS1tSEoKAjBwcHIyMjA1atXBToxERERERERERE9idjOjoiISARdzSvKzMwUvNVce3s7CgsLIZfLUVtbC41Gg61btyI6Ohpubm6CxSEiIiIiIiIiItvHJBIREZGZWWpeUUNDA7Kzs7Fr1y40NzdjwoQJ2LNnj1liERERERERERGR7WESiYiIyMwcHR27nFdk7iRSJ41Gg/LycsjlciaRiIiIiIiIiIjooXEmEhERkZlZel6Rg4MDpk6dygQSERERERERERE9ElYiERERiYTzioiIiIiIiIiIyJowiURERGQBnFdERERERERERETdHZNIREREFsR5RURERERERERE1F0xiURERERERERERERERERG7C19ACIiIiIiIiIiIiIiIup+mEQiIiIiIiIiIiIiIiIiI0wiERERERERERERERERkREmkYiIiIiIiIiIiIiIiMgIk0hERERERERERERERERkhEkkIiIiIiIiIiIiIiIiMsIkEhERERERERERERERERlhEomIiIiIiIiIiIiIiIiM/D9no0z1K2F34QAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 2000x900 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(20,9))\n",
    "sns.heatmap(corr, cmap = \"coolwarm\").set_title('Pearson Correlation', fontsize=22)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce7d57f6",
   "metadata": {},
   "source": [
    "# Modeling & Evaluation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9cbe1a0",
   "metadata": {},
   "source": [
    "#### Splitting the dataset using Date"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b403160",
   "metadata": {},
   "source": [
    "independent (S) and dependent (t) variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "403f5f9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "S = encoded_df.drop(['Severity','Reference_Number', 'Date', 'Street_Name', 'Speed_Limit', 'Registration_Number'],axis=1)\n",
    "t = encoded_df['Severity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "d7184228",
   "metadata": {},
   "outputs": [],
   "source": [
    "S_train, S_test, t_train, t_test = train_test_split(S, t, test_size=0.2, random_state=27)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f02adf09",
   "metadata": {},
   "source": [
    "### Decision Tree Classification Report #1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "64e218be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0   0.719522  0.737956  0.728622      3591\n",
      "           1   0.381597  0.360153  0.370565      1566\n",
      "           2   0.995525  0.995195  0.995360     12072\n",
      "\n",
      "    accuracy                       0.883859     17229\n",
      "   macro avg   0.698881  0.697768  0.698183     17229\n",
      "weighted avg   0.882197  0.883859  0.882975     17229\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predicted</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Actual</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2650</td>\n",
       "      <td>900</td>\n",
       "      <td>41</td>\n",
       "      <td>3591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>989</td>\n",
       "      <td>564</td>\n",
       "      <td>13</td>\n",
       "      <td>1566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>44</td>\n",
       "      <td>14</td>\n",
       "      <td>12014</td>\n",
       "      <td>12072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>3683</td>\n",
       "      <td>1478</td>\n",
       "      <td>12068</td>\n",
       "      <td>17229</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predicted     0     1      2    All\n",
       "Actual                             \n",
       "0          2650   900     41   3591\n",
       "1           989   564     13   1566\n",
       "2            44    14  12014  12072\n",
       "All        3683  1478  12068  17229"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtc = DecisionTreeClassifier()\n",
    "dtc.fit(S_train, t_train)\n",
    "T_pred = dtc.predict(S_test)\n",
    "\n",
    "sk_report = classification_report(t_test, T_pred, digits=6)\n",
    "\n",
    "print(sk_report)\n",
    " \n",
    "pd.crosstab(t_test, T_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "569d50b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15, 6)) \n",
    "class_names = t.unique().astype(str)  # Get unique class names from the target variable\n",
    "plot_tree(dtc, feature_names=S.columns, class_names=class_names, filled=True, rounded=True, fontsize=10, max_depth=3)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb59488b",
   "metadata": {},
   "source": [
    "### Random Forest Classification Report #1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "b63dae6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0   0.732725  0.782512  0.756800      3591\n",
      "           1   0.423285  0.350575  0.383514      1566\n",
      "           2   0.995784  0.997846  0.996814     12072\n",
      "\n",
      "    accuracy                       0.894132     17229\n",
      "   macro avg   0.717264  0.710311  0.712376     17229\n",
      "weighted avg   0.888919  0.894132  0.891044     17229\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predicted</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Actual</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2810</td>\n",
       "      <td>742</td>\n",
       "      <td>39</td>\n",
       "      <td>3591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1005</td>\n",
       "      <td>549</td>\n",
       "      <td>12</td>\n",
       "      <td>1566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>12046</td>\n",
       "      <td>12072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>3835</td>\n",
       "      <td>1297</td>\n",
       "      <td>12097</td>\n",
       "      <td>17229</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predicted     0     1      2    All\n",
       "Actual                             \n",
       "0          2810   742     39   3591\n",
       "1          1005   549     12   1566\n",
       "2            20     6  12046  12072\n",
       "All        3835  1297  12097  17229"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc = RandomForestClassifier()\n",
    "rfc.fit(S_train,t_train)\n",
    "T_pred = rfc.predict(S_test)\n",
    "rfc.score(S_test, t_test)\n",
    "\n",
    "sk_report = classification_report(t_test, T_pred, digits=6)\n",
    "\n",
    "print(sk_report)\n",
    "\n",
    "pd.crosstab(t_test, T_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "58ab43a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "ax=sns.countplot(x=\"Severity\", palette=\"magma\", data=encoded_df)\n",
    "plt.style.use('fast')\n",
    "plt.title(\"ACCIDENT SEVERITY\",fontsize=16,fontweight=\"bold\")\n",
    "plt.xlabel(\"\", fontsize=15, fontweight=\"bold\")\n",
    "plt.ylabel(\"\\nNumber of Accidents\\n\", fontsize=13, fontweight=\"bold\")\n",
    "plt.xticks(fontsize=12)\n",
    "plt.yticks(fontsize=12)\n",
    "sns.despine(top=True, right=True, left=True, bottom=False)\n",
    "plt.savefig('accident_seriousness.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "5af17218",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Severity\n",
       "2    60080\n",
       "0    18007\n",
       "1     8058\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encoded_df.Severity.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "9e2d9d13",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Percentage Distribution:\n",
      "Severity\n",
      "2    69.742875\n",
      "0    20.903128\n",
      "1     9.353996\n",
      "Name: count, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# Calculate the value counts for Severity\n",
    "value_counts = encoded_df.Severity.value_counts()\n",
    "\n",
    "# Calculate the percentage distribution\n",
    "percentage_distribution = (value_counts / value_counts.sum()) * 100\n",
    "\n",
    "print(\"\\nPercentage Distribution:\")\n",
    "print(percentage_distribution)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c84fe2b9",
   "metadata": {},
   "source": [
    "independent (X) and dependent (y) variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "ac256188",
   "metadata": {},
   "outputs": [],
   "source": [
    "X= encoded_df.drop(['Severity', 'Reference_Number','Date', 'Street_Name', 'Speed_Limit', 'Registration_Number','Number_of_Casualties','Light_Conditions_Darkness','Light_Conditions_Dawn','Light_Conditions_Daylight', 'Light_Conditions_Dusk','Light_Conditions_Night/Lit','Light_Conditions_Others', 'Weather_Sunny', 'Accident_Type_Single accident'],axis=1)\n",
    "y= encoded_df['Severity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "44f6633a",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=27, stratify=y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb9bf32b",
   "metadata": {},
   "source": [
    "resample data to manage skewness"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "267c35f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "minor = encoded_df[encoded_df.Severity==0]\n",
    "serious = encoded_df[encoded_df.Severity==1]\n",
    "property_ = encoded_df[encoded_df.Severity==2]\n",
    "\n",
    "property_reduced = resample(property_,\n",
    "                            replace=True,\n",
    "                            n_samples=len(serious),\n",
    "                            random_state=27\n",
    "                        )\n",
    "\n",
    "minor_reduced = resample(minor,\n",
    "                            replace=True,\n",
    "                            n_samples=len(serious),\n",
    "                            random_state=27\n",
    "                        )\n",
    "\n",
    "recalibrated_df = pd.concat([serious, minor_reduced, property_reduced])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "a7c736e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = recalibrated_df.drop(['Severity', 'Reference_Number', 'Date', 'Street_Name', 'Speed_Limit', 'Registration_Number','Number_of_Casualties', 'Light_Conditions_Darkness','Light_Conditions_Dawn','Light_Conditions_Daylight', 'Light_Conditions_Dusk','Light_Conditions_Night/Lit','Light_Conditions_Others', 'Weather_Sunny', 'Accident_Type_Single accident'], axis=1)\n",
    "y_train = recalibrated_df.Severity"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04e6a48f",
   "metadata": {},
   "source": [
    "### Decision Tree Classification Report #2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "ccf11719",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0   0.440285  0.738128  0.551567      3601\n",
      "           1   0.328012  0.815757  0.467888      1612\n",
      "           2   0.916191  0.547686  0.685557     12016\n",
      "\n",
      "    accuracy                       0.612572     17229\n",
      "   macro avg   0.561496  0.700524  0.568337     17229\n",
      "weighted avg   0.761691  0.612572  0.637186     17229\n",
      "\n",
      "ROC-AUC Score: 0.818865305971692\n"
     ]
    }
   ],
   "source": [
    "decision_tree = DecisionTreeClassifier()\n",
    "decision_tree.fit(X_train, y_train)\n",
    "Y_pred = decision_tree.predict(X_test)\n",
    "\n",
    "sk_report = classification_report(\n",
    "    digits=6,\n",
    "    y_True=y_test, \n",
    "    y_pred=Y_pred)\n",
    "\n",
    "print(sk_report)\n",
    "\n",
    "# Confusion matrix \n",
    "pd.crosstab(y_test, Y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)\n",
    "\n",
    "# Calculate ROC-AUC score\n",
    "y_prob = decision_tree.predict_proba(X_test)  # Get probability estimates\n",
    "roc_auc = roc_auc_score(y_test, y_prob, multi_class='ovr')  # Use 'ovr' for multiclass problems\n",
    "print(f\"ROC-AUC Score: {roc_auc}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "d4c3aa1f",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rule 1: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident > 0.5) & (Driver's_Age <= 52.5) & (Time_Period_Morning <= 0.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 33.5) & (Parish_St. Mary <= 0.5) & (Driver's_Age > 17.5) & (Parish_St.Thomas <= 0.5) & (Parish_Manchester <= 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age <= 28.5) & Predict: [[ 0. 40.  0.]], Samples: 40, Samples: 40\n",
      "Rule 2: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 35.5) & Predict: [[ 4.  3. 26.]], Samples: 33, Samples: 33\n",
      "Rule 3: (Number_of_Vehicles_Involved <= 1.5) & (Accident_Type_Pedestrian accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Parish_Hanover > 0.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age <= 44.5) & (Weather_Fog/Mist <= 0.5) & (Driver's_Age <= 33.0) & Predict: [[ 0. 28.  0.]], Samples: 28, Samples: 28\n",
      "Rule 4: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning <= 0.5) & (Time_Period_Afternoon > 0.5) & (Driver's_Age > 35.5) & Predict: [[ 4.  0. 23.]], Samples: 27, Samples: 27\n",
      "Rule 5: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Parish_Hanover <= 0.5) & (Accident_Type_Pedestrian accident > 0.5) & (Driver's_Age > 26.5) & (Driver's_Age > 32.5) & (Driver's_Age <= 39.5) & (Parish_Westmoreland <= 0.5) & Predict: [[ 0. 26.  0.]], Samples: 26, Samples: 26\n",
      "Rule 6: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning > 0.5) & (Driver's_Age <= 35.5) & Predict: [[ 6.  0. 20.]], Samples: 26, Samples: 26\n",
      "Rule 7: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 53.5) & (Driver's_Age <= 57.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age > 54.5) & Predict: [[ 0.  0. 26.]], Samples: 26, Samples: 26\n",
      "Rule 8: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age <= 36.5) & (Driver's_Age <= 29.5) & (Road_Surface_Dry + Asphalt > 0.5) & (Time_Period_Evening <= 0.5) & (Time_Period_Night <= 0.5) & (Driver's_Age > 27.5) & (Time_Period_Afternoon > 0.5) & (Driver's_Age <= 28.5) & Predict: [[ 1.  3. 21.]], Samples: 25, Samples: 25\n",
      "Rule 9: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Parish_Hanover <= 0.5) & (Accident_Type_Pedestrian accident > 0.5) & (Driver's_Age > 26.5) & (Driver's_Age > 32.5) & (Driver's_Age > 39.5) & (Road_Surface_Dry + Asphalt > 0.5) & (Parish_St. Elizabeth <= 0.5) & (Time_Period_Night <= 0.5) & (Driver's_Age > 43.5) & (Parish_Manchester <= 0.5) & (Number_of_Vehicles_Involved <= 3.5) & (Parish_Clarendon <= 0.5) & Predict: [[ 0. 24.  0.]], Samples: 24, Samples: 24\n",
      "Rule 10: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Parish_Hanover > 0.5) & (Driver's_Age > 24.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Gravel <= 0.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Time_Period_Evening > 0.5) & (Weather_Cloudy <= 0.5) & Predict: [[ 0. 24.  0.]], Samples: 24, Samples: 24\n",
      "Rule 11: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 29.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 32.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age > 31.5) & (Time_Period_Afternoon > 0.5) & Predict: [[ 1.  0. 23.]], Samples: 24, Samples: 24\n",
      "Rule 12: (Number_of_Vehicles_Involved <= 1.5) & (Accident_Type_Pedestrian accident <= 0.5) & (Accident_Type_Bicycle accident > 0.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 70.5) & (Time_Period_Afternoon <= 0.5) & (Driver's_Age <= 27.5) & (Driver's_Age > 20.0) & (Road_Surface_Dry + Asphalt > 0.5) & (Parish_St. Ann <= 0.5) & Predict: [[ 0. 23.  0.]], Samples: 23, Samples: 23\n",
      "Rule 13: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age <= 30.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 28.5) & (Weather_Cloudy <= 0.5) & (Driver's_Age <= 29.5) & Predict: [[10.  3. 10.]], Samples: 23, Samples: 23\n",
      "Rule 14: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age <= 34.5) & (Time_Period_Night <= 0.5) & (Time_Period_Afternoon <= 0.5) & (Driver's_Age > 32.5) & (Driver's_Age > 33.5) & Predict: [[ 4.  1. 18.]], Samples: 23, Samples: 23\n",
      "Rule 15: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age > 36.5) & (Driver's_Age <= 37.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Weather_Cloudy <= 0.5) & (Time_Period_Night <= 0.5) & (Time_Period_Morning <= 0.5) & (Time_Period_Evening <= 0.5) & Predict: [[ 7.  3. 13.]], Samples: 23, Samples: 23\n",
      "Rule 16: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident > 0.5) & (Driver's_Age <= 52.5) & (Time_Period_Morning <= 0.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 33.5) & (Parish_St. Mary <= 0.5) & (Driver's_Age > 17.5) & (Parish_St.Thomas <= 0.5) & (Parish_Manchester <= 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 28.5) & (Parish_Portland <= 0.5) & (Parish_Clarendon <= 0.5) & Predict: [[ 0. 22.  0.]], Samples: 22, Samples: 22\n",
      "Rule 17: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age <= 34.5) & (Time_Period_Night <= 0.5) & (Time_Period_Afternoon <= 0.5) & (Driver's_Age <= 32.5) & (Driver's_Age > 31.5) & Predict: [[ 6.  3. 13.]], Samples: 22, Samples: 22\n",
      "Rule 18: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 29.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 32.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age <= 31.5) & (Time_Period_Night <= 0.5) & (Driver's_Age > 30.5) & Predict: [[ 2.  1. 19.]], Samples: 22, Samples: 22\n",
      "Rule 19: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age > 36.5) & (Driver's_Age > 39.5) & (Time_Period_Night <= 0.5) & (Driver's_Age > 45.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age > 52.5) & (Driver's_Age <= 68.5) & (Driver's_Age <= 56.5) & Predict: [[ 0.  0. 21.]], Samples: 21, Samples: 21\n",
      "Rule 20: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 29.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 32.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 30.5) & (Driver's_Age > 31.5) & Predict: [[ 3.  0. 18.]], Samples: 21, Samples: 21\n",
      "Rule 21: (Number_of_Vehicles_Involved <= 1.5) & (Accident_Type_Pedestrian accident > 0.5) & (Parish_Manchester <= 0.5) & (Driver's_Age <= 26.5) & (Time_Period_Afternoon <= 0.5) & (Time_Period_Night <= 0.5) & (Driver's_Age <= 20.5) & (Time_Period_Evening <= 0.5) & (Parish_St. Catherine <= 0.5) & Predict: [[ 0. 20.  0.]], Samples: 20, Samples: 20\n",
      "Rule 22: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Parish_Hanover <= 0.5) & (Accident_Type_Pedestrian accident > 0.5) & (Driver's_Age <= 26.5) & (Parish_St. James <= 0.5) & (Parish_St. Mary <= 0.5) & Predict: [[ 0. 20.  0.]], Samples: 20, Samples: 20\n",
      "Rule 23: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age <= 30.5) & (Time_Period_Morning <= 0.5) & (Driver's_Age > 27.5) & (Driver's_Age > 28.5) & (Time_Period_Night <= 0.5) & (Driver's_Age > 29.5) & (Weather_Cloudy <= 0.5) & (Time_Period_Evening <= 0.5) & Predict: [[ 2.  3. 15.]], Samples: 20, Samples: 20\n",
      "Rule 24: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age <= 38.5) & (Driver's_Age <= 36.5) & (Driver's_Age <= 29.5) & (Road_Surface_Dry + Asphalt > 0.5) & (Time_Period_Evening <= 0.5) & (Time_Period_Night <= 0.5) & (Driver's_Age <= 27.5) & (Driver's_Age <= 26.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 25.5) & Predict: [[ 3.  2. 15.]], Samples: 20, Samples: 20\n",
      "Rule 25: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 22.5) & (Time_Period_Early Morning <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age <= 53.5) & (Driver's_Age <= 52.5) & (Weather_Rain <= 0.5) & (Driver's_Age > 24.5) & (Road_Surface_Wet + Unpaved <= 0.5) & (Driver's_Age <= 51.5) & (Driver's_Age > 38.5) & (Time_Period_Afternoon > 0.5) & (Driver's_Age <= 45.5) & (Driver's_Age > 44.5) & Predict: [[ 3.  4. 13.]], Samples: 20, Samples: 20\n"
     ]
    }
   ],
   "source": [
    "# Function to extract and rank rules\n",
    "def tree_to_rules(tree, feature_names):\n",
    "    tree_ = tree.tree_\n",
    "    feature_name = [\n",
    "        feature_names[i] if i != _tree.TREE_UNDEFINED else \"undefined!\"\n",
    "        for i in tree_.feature\n",
    "    ]\n",
    "    paths = []\n",
    "    values = []\n",
    "\n",
    "    def recurse(node, path, paths, values):\n",
    "        if tree_.feature[node] != _tree.TREE_UNDEFINED:\n",
    "            name = feature_name[node]\n",
    "            threshold = tree_.threshold[node]\n",
    "            path.append(f\"({name} <= {threshold})\")\n",
    "            recurse(tree_.children_left[node], path.copy(), paths, values)\n",
    "            path.pop()\n",
    "            path.append(f\"({name} > {threshold})\")\n",
    "            recurse(tree_.children_right[node], path.copy(), paths, values)\n",
    "        else:\n",
    "            path.append(f\"Predict: {tree_.value[node]}, Samples: {tree_.n_node_samples[node]}\")\n",
    "            paths.append(\" & \".join(path))\n",
    "            values.append(tree_.n_node_samples[node])\n",
    "\n",
    "    recurse(0, [], paths, values)\n",
    "\n",
    "    # Combine paths and values into a list of tuples and sort by the number of samples\n",
    "    rules_with_samples = list(zip(paths, values))\n",
    "    rules_with_samples.sort(key=lambda x: x[1], reverse=True)\n",
    "\n",
    "    # Get top 15 rules\n",
    "    top_15_rules = rules_with_samples[:25]\n",
    "    return top_15_rules\n",
    "\n",
    "# Extract and print the top 15 rules\n",
    "rules = tree_to_rules(decision_tree, X.columns)\n",
    "for rank, (rule, samples) in enumerate(rules, start=1):\n",
    "    print(f\"Rule {rank}: {rule}, Samples: {samples}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "d0c3ebad",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import export_text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "689370c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def tree_to_rules(tree, feature_names):\n",
    "    tree_ = tree.tree_\n",
    "    feature_name = [\n",
    "        feature_names[i] if i != _tree.TREE_UNDEFINED else \"undefined!\"\n",
    "        for i in tree_.feature\n",
    "    ]\n",
    "    paths = []\n",
    "    values = []\n",
    "\n",
    "    def recurse(node, path, paths, values):\n",
    "        if tree_.feature[node] != _tree.TREE_UNDEFINED:\n",
    "            name = feature_name[node]\n",
    "            threshold = tree_.threshold[node]\n",
    "            path.append(f\"({name} <= {threshold})\")\n",
    "            recurse(tree_.children_left[node], path.copy(), paths, values)\n",
    "            path.pop()\n",
    "            path.append(f\"({name} > {threshold})\")\n",
    "            recurse(tree_.children_right[node], path.copy(), paths, values)\n",
    "        else:\n",
    "            path.append(f\"Predict: {tree_.value[node]}, Samples: {tree_.n_node_samples[node]}\")\n",
    "            paths.append(\" & \".join(path))\n",
    "            values.append(tree_.n_node_samples[node])\n",
    "\n",
    "    recurse(0, [], paths, values)\n",
    "\n",
    "    # Combine paths and values into a list of tuples\n",
    "    rules_with_samples = list(zip(paths, values))\n",
    "    rules_with_samples.sort(key=lambda x: x[1], reverse=True)\n",
    "\n",
    "    return rules_with_samples\n",
    "\n",
    "# Extract all rules\n",
    "rules = tree_to_rules(decision_tree, X.columns)\n",
    "\n",
    "# Save rules to a file\n",
    "with open('decision_tree_rules.txt', 'w') as f:\n",
    "    for rank, (rule, samples) in enumerate(rules, start=1):\n",
    "        f.write(f\"Rule {rank}: {rule}, Samples: {samples}\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "3b342663",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 3 Rules for Minor Injuries:\n",
      "Rule 1: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age <= 30.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 28.5) & (Weather_Cloudy <= 0.5) & (Driver's_Age <= 29.5) & Predict: 0, Samples: 23, Samples: 23\n",
      "Rule 2: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident <= 0.5) & (Accident_Type_Bicycle accident <= 0.5) & (Accident_Type_Pedestrian accident <= 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Accident_Type_Overtaking accident <= 0.5) & (Driver's_Age <= 44.5) & (Driver's_Age > 17.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 27.5) & (Accident_Type_Turning accident > 0.5) & (Road_Surface_Dry + Asphalt > 0.5) & (Driver's_Age > 35.5) & (Time_Period_Morning > 0.5) & (Driver's_Age <= 43.5) & (Driver's_Age <= 37.5) & (Driver's_Age > 36.5) & Predict: 0, Samples: 16, Samples: 16\n",
      "Rule 3: (Number_of_Vehicles_Involved <= 1.5) & (Accident_Type_Pedestrian accident > 0.5) & (Parish_Manchester <= 0.5) & (Driver's_Age > 26.5) & (Parish_Hanover <= 0.5) & (Driver's_Age <= 73.5) & (Parish_Trelawny <= 0.5) & (Weather_Cloudy > 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Parish_St. Ann <= 0.5) & (Parish_St. Catherine <= 0.5) & (Parish_St. Elizabeth <= 0.5) & (Driver's_Age <= 43.5) & (Time_Period_Early Morning <= 0.5) & Predict: 0, Samples: 14, Samples: 14\n",
      "\n",
      "Top 3 Rules for  Property damage:\n",
      "Rule 1: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning > 0.5) & (Driver's_Age > 35.5) & Predict: 2, Samples: 33, Samples: 33\n",
      "Rule 2: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning <= 0.5) & (Time_Period_Afternoon > 0.5) & (Driver's_Age > 35.5) & Predict: 2, Samples: 27, Samples: 27\n",
      "Rule 3: (Number_of_Vehicles_Involved > 1.5) & (Parish_Kingston & St. Andrew > 0.5) & (Accident_Type_Other accident <= 0.5) & (Accident_Type_Rear end accident > 0.5) & (Number_of_Vehicles_Involved <= 2.5) & (Driver's_Age > 24.5) & (Road_Surface_Dry +Unpaved <= 0.5) & (Road_Surface_Wet + Asphalt <= 0.5) & (Road_Surface_Oily + Asphalt <= 0.5) & (Driver's_Age > 25.5) & (Time_Period_Early Morning <= 0.5) & (Driver's_Age > 30.5) & (Time_Period_Evening <= 0.5) & (Driver's_Age <= 36.5) & (Driver's_Age > 34.5) & (Time_Period_Morning > 0.5) & (Driver's_Age <= 35.5) & Predict: 2, Samples: 26, Samples: 26\n"
     ]
    }
   ],
   "source": [
    "# Function to extract and rank rules leading to specified severity levels\n",
    "def tree_to_rules_severity_specific(tree, feature_names, severity_label, top_k=3):\n",
    "    tree_ = tree.tree_\n",
    "    feature_name = [\n",
    "        feature_names[i] if i != _tree.TREE_UNDEFINED else \"undefined!\"\n",
    "        for i in tree_.feature\n",
    "    ]\n",
    "    paths = []\n",
    "    values = []\n",
    "\n",
    "    def recurse(node, path, paths, values):\n",
    "        if tree_.feature[node] != _tree.TREE_UNDEFINED:\n",
    "            name = feature_name[node]\n",
    "            threshold = tree_.threshold[node]\n",
    "            path.append(f\"({name} <= {threshold})\")\n",
    "            recurse(tree_.children_left[node], path.copy(), paths, values)\n",
    "            path.pop()\n",
    "            path.append(f\"({name} > {threshold})\")\n",
    "            recurse(tree_.children_right[node], path.copy(), paths, values)\n",
    "        else:\n",
    "            predicted_class = tree_.value[node][0].argmax()\n",
    "            if predicted_class == severity_label:\n",
    "                path.append(f\"Predict: {severity_label}, Samples: {tree_.n_node_samples[node]}\")\n",
    "                paths.append(\" & \".join(path))\n",
    "                values.append(tree_.n_node_samples[node])\n",
    "\n",
    "    recurse(0, [], paths, values)\n",
    "\n",
    "    # Combine paths and values into a list of tuples and sort by the number of samples\n",
    "    rules_with_samples = list(zip(paths, values))\n",
    "    rules_with_samples.sort(key=lambda x: x[1], reverse=True)\n",
    "\n",
    "    # Return only the top_k rules\n",
    "    return rules_with_samples[:top_k]\n",
    "\n",
    "# Example usage:\n",
    "# Assuming you have a trained decision tree model 'decision_tree', feature names 'X.columns',\n",
    "# and severity labels mapping (0 -> 'minor', 1 -> 'serious', 2 -> 'property damage')\n",
    "severity_labels = {0: 'minor', 1: 'serious', 2: 'property damage'}\n",
    "\n",
    "# Extract and print top 3 rules for minor injuries (severity level 0)\n",
    "rules_minor = tree_to_rules_severity_specific(decision_tree, X.columns, 0, top_k=3)\n",
    "print(\"Top 3 Rules for Minor Injuries:\")\n",
    "for rank, (rule, samples) in enumerate(rules_minor, start=1):\n",
    "    print(f\"Rule {rank}: {rule}, Samples: {samples}\")\n",
    "\n",
    "# Extract and print top 3 rules for property damage (severity level 1)\n",
    "rules_property_damage = tree_to_rules_severity_specific(decision_tree, X.columns, 2, top_k=3)\n",
    "print(\"\\nTop 3 Rules for  Property damage:\")\n",
    "for rank, (rule, samples) in enumerate(rules_property_damage, start=1):\n",
    "    print(f\"Rule {rank}: {rule}, Samples: {samples}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b707d6fb",
   "metadata": {},
   "source": [
    "### Random Forest Classification Report #2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "1dcc8890",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0   0.465861  0.610108  0.528315      3601\n",
      "           1   0.335600  0.795906  0.472125      1612\n",
      "           2   0.889988  0.643642  0.747030     12016\n",
      "\n",
      "    accuracy                       0.650879     17229\n",
      "   macro avg   0.563817  0.683219  0.582490     17229\n",
      "weighted avg   0.749472  0.650879  0.675596     17229\n",
      "\n",
      "ROC-AUC Score: 0.8402971584605234\n"
     ]
    }
   ],
   "source": [
    "random_forest = RandomForestClassifier(n_estimators=200, max_depth =20)\n",
    "random_forest.fit(X_train,y_train)\n",
    "Y_pred = random_forest.predict(X_test)\n",
    "random_forest.score(X_test, y_test)\n",
    "\n",
    "sk_report = classification_report(\n",
    "    digits=6,\n",
    "    y_True=y_test, \n",
    "    y_pred=Y_pred)\n",
    "\n",
    "print(sk_report)\n",
    "\n",
    "pd.crosstab(y_test, Y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)\n",
    "\n",
    "# Calculate ROC-AUC score\n",
    "y_prob = random_forest.predict_proba(X_test)  # Get probability estimates\n",
    "roc_auc = roc_auc_score(y_test, y_prob, multi_class='ovr')  # Use 'ovr' for multiclass problems\n",
    "print(f\"ROC-AUC Score: {roc_auc}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "eee80146",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2197,  651,  753],\n",
       "       [ 126, 1283,  203],\n",
       "       [2393, 1889, 7734]], dtype=int64)"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, Y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "1109d777",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "    matrix = confusion_matrix(y_test, Y_pred)\n",
    "matrix = matrix.astype('float') / matrix.sum(axis=1)[:, np.newaxis]\n",
    "\n",
    "#Build the plot\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.set(font_scale=1.0)\n",
    "sns.heatmap(matrix, annot=True, annot_kws={'size':10}, \n",
    "            cmap ='Blues' ,linewidths=0.1)\n",
    "\n",
    "#Add labels to the plot\n",
    "class_names = ['Minor', 'Serious', 'Property Damage Only']\n",
    "tick_marks = np.arange(len(class_names))\n",
    "tick_marks2 = tick_marks + 0.5\n",
    "plt.xticks(tick_marks, class_names, rotation=45)\n",
    "plt.yticks(tick_marks2, class_names, rotation=0)\n",
    "plt.xlabel('Predicted Label')\n",
    "plt.ylabel('True Label')\n",
    "plt.title('Confusion Matrix for Random Forest Model')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "15433f5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Feature Importance of Random Forest')"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15, 10))\n",
    "feat_importances = pd.Series(random_forest.feature_importances_, index=X.columns)\n",
    "feat_importances = feat_importances.sort_values(ascending=True)\n",
    "palette = sns.color_palette(\"Spectral\", len(feat_importances))\n",
    "feat_importances.plot(kind='barh', color=palette)\n",
    "plt.xlabel('Feature Importance')\n",
    "plt.ylabel('Features')\n",
    "plt.title('Feature Importance of Random Forest')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dca6c788",
   "metadata": {},
   "source": [
    "### Multinomial Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "b249478d",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0   0.292536  0.284088  0.288250      3601\n",
      "           1   0.245696  0.584367  0.345942      1612\n",
      "           2   0.831582  0.685003  0.751209     12016\n",
      "\n",
      "    accuracy                       0.591793     17229\n",
      "   macro avg   0.456605  0.517819  0.461800     17229\n",
      "weighted avg   0.664100  0.591793  0.616529     17229\n",
      "\n",
      "ROC-AUC Score: 0.7297851178479376\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_test = scaler.transform(X_test)\n",
    "\n",
    "lr = LogisticRegression(multi_class='multinomial', solver='lbfgs', penalty='l2', C=0.5)\n",
    "\n",
    "#Fit the model on the trainng data.\n",
    "lr.fit(X_train, y_train)\n",
    "y_pred = lr.predict(X_test)\n",
    "sk_report = classification_report(\n",
    "    digits=6,\n",
    "    y_True=y_test, \n",
    "    y_pred=y_pred)\n",
    "\n",
    "print(sk_report)\n",
    "\n",
    "pd.crosstab(y_test, y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)\n",
    "\n",
    "# Calculate ROC-AUC score\n",
    "y_prob = lr.predict_proba(X_test)  # Get probability estimates\n",
    "roc_auc = roc_auc_score(y_test, y_prob, multi_class='ovr')  # Use 'ovr' for multiclass problems\n",
    "print(f\"ROC-AUC Score: {roc_auc}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "2ad76625",
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Combine feature names with coefficients\n",
    "# coefficients = lr.coef_\n",
    "# intercepts = lr.intercept_\n",
    "# feature_names = X.columns\n",
    "\n",
    "# # Create DataFrame for coefficients\n",
    "# coef_df = pd.DataFrame(coefficients.T, index=feature_names, columns=lr.classes_)\n",
    "# coef_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "4b28202e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Create DataFrame for intercepts\n",
    "# intercept_df = pd.DataFrame(intercepts, index=lr.classes_, columns=['Intercept'])\n",
    "# intercept_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "3a906b9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# from sklearn.preprocessing import LabelEncoder, label_binarize\n",
    "# from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "# # Encode and binarize\n",
    "# y_test_bin = label_binarize(LabelEncoder().fit_transform(y_test), classes=range(3))\n",
    "# y_pred_prob = lr.predict_proba(X_test)\n",
    "\n",
    "# # Compute ROC curve and AUC\n",
    "# fpr, tpr, roc_auc = {}, {}, {}\n",
    "# for i in range(y_test_bin.shape[1]):\n",
    "#     fpr[i], tpr[i], _ = roc_curve(y_test_bin[:, i], y_pred_prob[:, i])\n",
    "#     roc_auc[i] = auc(fpr[i], tpr[i])\n",
    "#     print(f\"Class {i}: AUC = {roc_auc[i]:.2f}\")\n",
    "\n",
    "# # Plot ROC curves\n",
    "# plt.figure()\n",
    "# colors = ['blue', 'red', 'green']\n",
    "# for i, color in enumerate(colors):\n",
    "#     plt.plot(fpr[i], tpr[i], color=color, lw=2, label=f'Class {i} (AUC = {roc_auc[i]:0.2f})')\n",
    "\n",
    "# plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "# plt.xlim([0.0, 1.0])\n",
    "# plt.ylim([0.0, 1.05])\n",
    "# plt.xlabel('False Positive Rate')\n",
    "# plt.ylabel('True Positive Rate')\n",
    "# plt.title('ROC Curves')\n",
    "# plt.legend(loc='lower right')\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "308bdf21",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Accuracy</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F1-score</th>\n",
       "      <th>ROC-AUC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Logistic Regression</td>\n",
       "      <td>0.591793</td>\n",
       "      <td>0.456605</td>\n",
       "      <td>0.517819</td>\n",
       "      <td>0.461800</td>\n",
       "      <td>0.729785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Decision Tree</td>\n",
       "      <td>0.609554</td>\n",
       "      <td>0.559818</td>\n",
       "      <td>0.698822</td>\n",
       "      <td>0.565725</td>\n",
       "      <td>0.817404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Random Forest</td>\n",
       "      <td>0.653085</td>\n",
       "      <td>0.565708</td>\n",
       "      <td>0.685770</td>\n",
       "      <td>0.584694</td>\n",
       "      <td>0.840949</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Model  Accuracy  Precision    Recall  F1-score   ROC-AUC\n",
       "0  Logistic Regression  0.591793   0.456605  0.517819  0.461800  0.729785\n",
       "1        Decision Tree  0.609554   0.559818  0.698822  0.565725  0.817404\n",
       "2        Random Forest  0.653085   0.565708  0.685770  0.584694  0.840949"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Initialize scalers and models\n",
    "scaler = StandardScaler()\n",
    "logistic_regression = LogisticRegression(multi_class='multinomial', solver='lbfgs', penalty='l2', C=0.5)\n",
    "decision_tree = DecisionTreeClassifier()\n",
    "random_forest = RandomForestClassifier(n_estimators=200, max_depth=20)\n",
    "\n",
    "# Standardize the data\n",
    "X_train_scaled = scaler.fit_transform(X_train)\n",
    "X_test_scaled = scaler.transform(X_test)\n",
    "\n",
    "# Define a function to train, predict and evaluate a model\n",
    "def evaluate_model(model, X_train, y_train, X_test, y_test):\n",
    "    model.fit(X_train, y_train)\n",
    "    y_pred = model.predict(X_test)\n",
    "    y_prob = model.predict_proba(X_test)\n",
    "    \n",
    "    accuracy = accuracy_score(y_test, y_pred)\n",
    "    classification_rep = classification_report(y_test, y_pred, output_dict=True)\n",
    "    roc_auc = roc_auc_score(y_test, y_prob, multi_class='ovr')\n",
    "    \n",
    "    return accuracy, classification_rep, roc_auc\n",
    "\n",
    "# Evaluate each model\n",
    "logistic_regression_results = evaluate_model(logistic_regression, X_train_scaled, y_train, X_test_scaled, y_test)\n",
    "decision_tree_results = evaluate_model(decision_tree, X_train_scaled, y_train, X_test_scaled, y_test)\n",
    "random_forest_results = evaluate_model(random_forest, X_train_scaled, y_train, X_test_scaled, y_test)\n",
    "\n",
    "# Create a comparison DataFrame\n",
    "comparison_df = pd.DataFrame({\n",
    "    \"Model\": [\"Logistic Regression\", \"Decision Tree\", \"Random Forest\"],\n",
    "    \"Accuracy\": [logistic_regression_results[0], decision_tree_results[0], random_forest_results[0]],\n",
    "    \"Precision\": [\n",
    "        logistic_regression_results[1]['macro avg']['precision'],\n",
    "        decision_tree_results[1]['macro avg']['precision'],\n",
    "        random_forest_results[1]['macro avg']['precision']\n",
    "    ],\n",
    "    \"Recall\": [\n",
    "        logistic_regression_results[1]['macro avg']['recall'],\n",
    "        decision_tree_results[1]['macro avg']['recall'],\n",
    "        random_forest_results[1]['macro avg']['recall']\n",
    "    ],\n",
    "    \"F1-score\": [\n",
    "        logistic_regression_results[1]['macro avg']['f1-score'],\n",
    "        decision_tree_results[1]['macro avg']['f1-score'],\n",
    "        random_forest_results[1]['macro avg']['f1-score']\n",
    "    ],\n",
    "    \"ROC-AUC\": [logistic_regression_results[2], decision_tree_results[2], random_forest_results[2]]\n",
    "})\n",
    "\n",
    "comparison_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1b3da9c",
   "metadata": {},
   "source": [
    "### GridSearchCV (solving for hyperparameter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "f6b02cbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "# param_grid = {\n",
    "#     'n_estimators': [200, 300],\n",
    "#     'max_depth': [10, 20],\n",
    "#     'min_samples_split': [2, 5],\n",
    "#     'min_samples_leaf': [1, 2],\n",
    "#     'max_features': ['auto', 'sqrt', 'log2'],\n",
    "#     'bootstrap': [True, False]\n",
    "# }\n",
    "\n",
    "# rf = RandomForestClassifier(random_state=42)\n",
    "\n",
    "# # Initialize the Grid Search\n",
    "# grid_search = GridSearchCV(estimator=rf, param_grid=param_grid,\n",
    "#                            cv=5, n_jobs=-1, verbose=2, scoring='accuracy')\n",
    "\n",
    "# # Fit the grid search to the data\n",
    "# grid_search.fit(X_train, y_train)\n",
    "\n",
    "# sk_report = classification_report(\n",
    "#     digits=6,\n",
    "#     y_True=y_test, \n",
    "#     y_pred=Y_pred)\n",
    "\n",
    "# print(sk_report)\n",
    "\n",
    "# pd.crosstab(y_test, Y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "21f5b5fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# plt.figure(figsize=(15,10))\n",
    "# features = pd.Series(rf.feature_importances_, index=X.columns)\n",
    "# feaures = features.sort_values(ascending= True)\n",
    "# features.nlargest(10).plot(kind='barh')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "7e86e1d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import joblib\n",
    "from sklearn.tree import export_text\n",
    "import json  # Import the json module"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "635dfdae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['decision_tree_model.pkl']"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Save the trained model to a file\n",
    "joblib.dump(decision_tree, 'decision_tree_model.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "af0faff4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "|--- Number_of_Vehicles_Involved <= -0.56\n",
      "|   |--- Accident_Type_Pedestrian accident <= 1.11\n",
      "|   |   |--- Accident_Type_Bicycle accident <= 2.45\n",
      "|   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth <= 2.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth >  2.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |--- Parish_St. Elizabeth <= 2.65\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 30\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 13\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved <= 6.93\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved >  6.93\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident <= 1.22\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident >  1.22\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 22\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Parish_St. Elizabeth >  2.65\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Rear end accident <= 0.71\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.73\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.73\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 16\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Rear end accident >  0.71\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |--- Road_Surface_Others <= 15.22\n",
      "|   |   |   |   |   |   |--- Accident_Type_Rear end accident <= 0.71\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.77\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 22\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 13\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.77\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.47\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.47\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Accident_Type_Rear end accident >  0.71\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.77\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.77\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Road_Surface_Others >  15.22\n",
      "|   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.53\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.53\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.65\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |--- Driver's_Age <= -0.45\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  -0.45\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt <= 8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt >  8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |--- Accident_Type_Bicycle accident >  2.45\n",
      "|   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |--- Road_Surface_Wet + Unpaved <= 10.64\n",
      "|   |   |   |   |   |--- Driver's_Age <= 2.43\n",
      "|   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.08\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.08\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  2.43\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 2.98\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.82\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  2.82\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  2.98\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |--- Road_Surface_Wet + Unpaved >  10.64\n",
      "|   |   |   |   |   |--- class: 0\n",
      "|   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |--- Driver's_Age <= 0.77\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.34\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.34\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Driver's_Age >  0.77\n",
      "|   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.83\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.83\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.27\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  2.27\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |--- Driver's_Age <= 1.05\n",
      "|   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  1.05\n",
      "|   |   |   |   |   |   |--- class: 0\n",
      "|   |--- Accident_Type_Pedestrian accident >  1.11\n",
      "|   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved <= 6.93\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved >  6.93\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |--- Parish_Trelawny <= 3.25\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Portland <= 2.55\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Portland >  2.55\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas <= 2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas >  2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_Trelawny >  3.25\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.24\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.24\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved <= 6.93\n",
      "|   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved >  6.93\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |--- Driver's_Age <= 2.66\n",
      "|   |   |   |   |   |   |--- Parish_Trelawny <= 3.25\n",
      "|   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.95\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.95\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas <= 2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas >  2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |--- Parish_Trelawny >  3.25\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |--- Driver's_Age >  2.66\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 3.06\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.90\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.90\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  3.06\n",
      "|   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |--- Driver's_Age <= 1.72\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.69\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.69\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.85\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.77\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.77\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.85\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  1.72\n",
      "|   |   |   |   |   |   |--- class: 0\n",
      "|   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |--- Driver's_Age <= -0.65\n",
      "|   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.85\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.85\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.16\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.16\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |--- Driver's_Age >  -0.65\n",
      "|   |   |   |   |   |--- Driver's_Age <= -0.10\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.53\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.53\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.18\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.18\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Driver's_Age >  -0.10\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 1.95\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.83\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.83\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  1.95\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |--- Driver's_Age <= 1.20\n",
      "|   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.77\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.77\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |--- Driver's_Age >  1.20\n",
      "|   |   |   |   |   |--- class: 1\n",
      "|--- Number_of_Vehicles_Involved >  -0.56\n",
      "|   |--- Parish_Kingston & St. Andrew <= 0.42\n",
      "|   |   |--- Accident_Type_Rear end accident <= 0.71\n",
      "|   |   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |   |--- Accident_Type_Bicycle accident <= 2.45\n",
      "|   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |--- Accident_Type_Pedestrian accident <= 1.11\n",
      "|   |   |   |   |   |   |   |--- Parish_Trelawny <= 3.25\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 28\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 19\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Crossing accident <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 20\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Crossing accident >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |--- Parish_Trelawny >  3.25\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 16\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.83\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |--- Accident_Type_Pedestrian accident >  1.11\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident <= 1.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident >  1.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Turning accident <= 1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Turning accident >  1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Gravel <= 19.42\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved <= 6.93\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved >  6.93\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Gravel >  19.42\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |--- Accident_Type_Bicycle accident >  2.45\n",
      "|   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.75\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.75\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Portland <= 2.55\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Portland >  2.55\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.93\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 14\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |--- Parish_St.Thomas <= 2.97\n",
      "|   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.19\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.19\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Parish_St.Thomas >  2.97\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth <= 2.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth >  2.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt <= 8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 16\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt >  8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.61\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |--- Driver's_Age <= 2.94\n",
      "|   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth <= 2.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Elizabeth >  2.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.54\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.54\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 3.77\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  3.77\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.22\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Driver's_Age >  2.94\n",
      "|   |   |   |   |   |   |--- class: 0\n",
      "|   |   |--- Accident_Type_Rear end accident >  0.71\n",
      "|   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |--- Parish_Trelawny <= 3.25\n",
      "|   |   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 19\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 12\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine <= 0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Catherine >  0.92\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.45\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.45\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 20\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.87\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.87\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.53\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.08\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.08\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.53\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |--- Parish_Trelawny >  3.25\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 0.06\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.18\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.18\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.33\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  0.06\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.49\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.49\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.07\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.07\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |--- Driver's_Age <= 2.23\n",
      "|   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.93\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.65\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.93\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist <= 8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.05\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.05\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Fog/Mist >  8.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.76\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.76\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  2.23\n",
      "|   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 2.51\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.39\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  2.39\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  2.51\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |--- Parish_St. James <= 1.90\n",
      "|   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.65\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland <= 2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_Westmoreland >  2.64\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon <= 1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Parish_Clarendon >  1.66\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.65\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Mary <= 2.23\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Ann <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Hanover <= 3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas <= 2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 20\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Parish_St.Thomas >  2.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Parish_Hanover >  3.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.22\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Parish_St. Ann >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Parish_St. Mary >  2.23\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |--- Parish_Manchester <= 1.69\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.12\n",
      "|   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.26\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.12\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Parish_Manchester >  1.69\n",
      "|   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |--- Parish_St. James >  1.90\n",
      "|   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.10\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.10\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.24\n",
      "|   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 3.77\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  3.77\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.24\n",
      "|   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.87\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.02\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.73\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.87\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |--- Parish_Kingston & St. Andrew >  0.42\n",
      "|   |   |--- Accident_Type_Other accident <= 0.83\n",
      "|   |   |   |--- Accident_Type_Rear end accident <= 0.71\n",
      "|   |   |   |   |--- Accident_Type_Bicycle accident <= 2.45\n",
      "|   |   |   |   |   |--- Accident_Type_Pedestrian accident <= 1.11\n",
      "|   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.75\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.75\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 13\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Turning accident <= 1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.35\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 16\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.35\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Turning accident >  1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 9\n",
      "|   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 15\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.56\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.45\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.45\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 12\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident <= 1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Accident_Type_Overtaking accident >  1.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident <= 1.22\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Crossing accident <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |--- Accident_Type_Crossing accident >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.85\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |--- Accident_Type_Head-on accident >  1.22\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |--- Accident_Type_Pedestrian accident >  1.11\n",
      "|   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.32\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.32\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |--- Accident_Type_Bicycle accident >  2.45\n",
      "|   |   |   |   |   |--- Driver's_Age <= -0.02\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.41\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.41\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  -0.02\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.70\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.72\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.70\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |--- Accident_Type_Rear end accident >  0.71\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.75\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.75\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt <= 8.88\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt >  8.88\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved <= 6.93\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt <= 8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 20\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt >  8.88\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.28\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 13\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.18\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |--- Road_Surface_Dry +Unpaved >  6.93\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.18\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.18\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.85\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 8\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.97\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 11\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.30\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.85\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.72\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.24\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.36\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.72\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.80\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 5\n",
      "|   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.64\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.05\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.69\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.05\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.64\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.03\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  2.03\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.43\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.43\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  2.74\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 0.65\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.57\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.40\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.57\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  0.65\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |--- Accident_Type_Other accident >  0.83\n",
      "|   |   |   |--- Number_of_Vehicles_Involved <= 1.17\n",
      "|   |   |   |   |--- Driver's_Age <= -1.36\n",
      "|   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.60\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.56\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.56\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -1.60\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -1.60\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.52\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.44\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |--- Driver's_Age >  -1.36\n",
      "|   |   |   |   |   |--- Time_Period_Early Morning <= 1.25\n",
      "|   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt <= 8.88\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain <= 1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 7\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.20\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 17\n",
      "|   |   |   |   |   |   |   |   |   |--- Weather_Rain >  1.65\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening <= 1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Evening >  1.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.40\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.16\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.40\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy <= 2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 10\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Weather_Cloudy >  2.71\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Road_Surface_Oily + Asphalt >  8.88\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.89\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.89\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |--- Time_Period_Early Morning >  1.25\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 0.89\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.12\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 6\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  0.41\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  0.89\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 1.16\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.09\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  1.09\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  1.16\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= 2.47\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.32\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.68\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.91\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  2.47\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |--- Number_of_Vehicles_Involved >  1.17\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved <= 2.91\n",
      "|   |   |   |   |   |--- Time_Period_Morning <= 0.27\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.49\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon <= 0.31\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Time_Period_Afternoon >  0.31\n",
      "|   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.49\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= -0.22\n",
      "|   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  -0.22\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.10\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.10\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.38\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 2\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  0.81\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 4\n",
      "|   |   |   |   |   |--- Time_Period_Morning >  0.27\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= -0.53\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt <= 1.14\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.69\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -1.04\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.89\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.69\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |--- Road_Surface_Wet + Asphalt >  1.14\n",
      "|   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  -0.53\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age <= 0.73\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= -0.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.37\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |   |   |   |--- Driver's_Age >  -0.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |--- Driver's_Age >  0.73\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt <= -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |   |   |--- Road_Surface_Dry + Asphalt >  -1.06\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.01\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age <= 1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- truncated branch of depth 3\n",
      "|   |   |   |   |   |   |   |   |   |   |--- Driver's_Age >  1.48\n",
      "|   |   |   |   |   |   |   |   |   |   |   |--- class: 2\n",
      "|   |   |   |   |--- Number_of_Vehicles_Involved >  2.91\n",
      "|   |   |   |   |   |--- Time_Period_Night <= 1.62\n",
      "|   |   |   |   |   |   |--- class: 1\n",
      "|   |   |   |   |   |--- Time_Period_Night >  1.62\n",
      "|   |   |   |   |   |   |--- Driver's_Age <= 0.22\n",
      "|   |   |   |   |   |   |   |--- class: 0\n",
      "|   |   |   |   |   |   |--- Driver's_Age >  0.22\n",
      "|   |   |   |   |   |   |   |--- class: 2\n",
      "\n"
     ]
    }
   ],
   "source": [
    "rules = export_text(decision_tree, feature_names=list(X.columns))\n",
    "print(rules)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "6cb0c379",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-08-04 17:16:07.519 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\Users\\theon\\anaconda3\\lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n",
      "2024-08-04 17:16:07.519 Session state does not function when running a script without `streamlit run`\n"
     ]
    }
   ],
   "source": [
    "# Load your trained model\n",
    "model = joblib.load('decision_tree_model.pkl')\n",
    "\n",
    "# Define the prediction function\n",
    "def predict_severity(input_data):\n",
    "    prediction = model.predict(input_data)\n",
    "    return prediction\n",
    "\n",
    "# Streamlit app\n",
    "st.title('Road Accident Severity Prediction')\n",
    "\n",
    "# User inputs\n",
    "st.header('Enter the details of the accident:')\n",
    "\n",
    "number_of_vehicles = st.number_input('Number of Vehicles Involved', min_value=1)\n",
    "driver_age = st.number_input('Driver\\'s Age', min_value=18, max_value=80)\n",
    "parish = st.selectbox('Parish', ['Clarendon', 'Hanover', 'Kingston & St. Andrew ', 'Manchester','Portland','St. Ann','St. Catherine', 'St. Elizabeth', 'St. James','St. Mary','St.Thomas','Trelawny', 'Westmoreland'])\n",
    "time_of_day = st.selectbox('Time_Period', ['Early Morning', 'Morning', 'Afternoon', 'Evening', 'Night'])\n",
    "weather = st.selectbox('Weather', ['Cloudy', 'Sunny', 'Fog/Mist', 'Rain'])\n",
    "\n",
    "input_data = pd.DataFrame({\n",
    "    'Number Of Vehicles Involved': [number_of_vehicles],\n",
    "    'Driver\\'s Age': [driver_age],\n",
    "    'Parish': [parish],\n",
    "    'Time_Period': [time_of_day],\n",
    "    'Weather': [weather]\n",
    "})\n",
    "\n",
    "if st.button('Predict Severity'):\n",
    "    prediction = predict_severity(input_data)\n",
    "    st.write(f'The predicted severity level is: {prediction[0]}')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
